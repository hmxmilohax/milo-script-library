; This is the default configuration file.  It defines initialization parameters
; for all modules.  It is loaded in SystemInit() before modules are initted.
; Modules access it through GetSystemConfig().
;
; An application may override these default parameters with its own 
; configuration file, by passing it to SystemInit().  It is merged with the
; default configuration file before modules are initted.

#include macros.dta

(system
   (iop_modules
      ('iop/scrtchpd.irx') ; scratchpad memory
      ('iop/sio2man.irx')  ; memcard
      ('iop/mtapman.irx')  ; multitap		// PGM - sony says mtapman before mcman or padman
      ('iop/mcman.irx')    ; memcard
      ('iop/mcserv.irx')   ; memcard
      ('iop/usbd.irx')     ; USB
#ifndef _SHIP
      ('iop/usbkb.irx' "keybd=1" "debug=0") ; USB keyboard
#endif
      ('iop/padman.irx')   ; joypad
      ('iop/msifrpc.irx')  ; SIF (EE/IOP communication)
;      ('iop/mtapman.irx')  ; multitap		// PGM - relocated
      ('iop/libsd.irx')    ; sound
      ('iop/sdrdrv.irx')   ; sound (remote calls from EE)
      ('iop/cdvdstm.irx')  ; CD streaming
   )
   (profiler
      (enabled FALSE) ; note that profiling always disabled in SHIP builds
      (buffer_size 8192)  ; how many data points to sample per UI update
      (sample_rate k4KHz)  ; how often to sample EE performance
                           ; can be k1KHz, k2KHz, k4KHz, k10KHz, k20KHz
   )  
   (keyboard
      (disable FALSE)
   )
   (multitap
      (disable FALSE)		// PGM - was TRUE, but we want multitap support
   )   
   (language
      ; the default is used when the hardware (or other malevalonent force)
      ; tries to use a language that is not supported (not in LANGUAGES).
      (default eng)

      ; Remap languages like this
      ;(remap
      ;   (eng deu)
      ;   (deu fra)
      ;)

      ; Override language like this
      ;(force deu)

      ; Note that the macro LANGUAGES in macros.dta is the list of
      ; an app's supported languages.
   ) 
   (fp_exceptions TRUE)

   (main_dir 19997 150000)

   ; objects of these types are serialized first in a directory
   (dir_sort
      Tex ; before Mat, Cam, Movie
      Mat ; before Font
      Font ; before Text
      Text ; before Cursor
      Mesh ; before Cursor
      Blur ; before Cursor
      Group ; must be before outfit loader, since depends on it.
      Trans ; before various Character classes.
      RndDir ; before EventAnim & EventTrigger
   )

   (xbox_map_file "%s/default_%s.map")
   
   ; default to kNewGfx
   (ng FALSE)
   
#ifdef HX_PS3
   (np_communication_id "NPWR00198_00")
#endif
)

(content_mgr
   (roots ".")
)

(platform_mgr
   (keyboard_allowed_chars 
      " ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!\q#$%&'()*+,-./:;<=>?@[\]^_`{|}~∞©Æ°ø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ¯˘˙˚¸˝˛ˇ")
)

(objects
   #include objects.dta
)

(mem
   ;; heap options: 
   ;; required:
   ;;  (size <num bytes>)
   ;; optional:
   ;;  (handle <TRUE | FALSE>)
   ;;  (strategy <kFirstFit | kBestFit | kLRUFit | kLastFit >)
   ;;  (debug <0 | 1 | 2>)
   (heaps
#ifdef HX_EE
      (main (size 18000000))
      (rnd  (size  8000000) (handle TRUE))
#else
   #ifdef HX_PS3
      (main (size 260000000))
      (local (size 0) (debug 0)) ; size 0 means all of it
   #else
      #ifdef HX_WII
         (main (size 32000000))
         (rnd  (size  8000000) (handle TRUE))
      #else
      	(main (size 500000000))
      #endif
   #endif
#endif
#ifdef HX_PC
      (synth (size 10000000))
#endif
      ; Applications that use Net should define a separate heap for login allocations
      ;(server_login (size 50000)) 
   )

   (pool
      ;; we want to set big_hunk as large as possible (but not too large) so
      ;; that the pool allocator will not have to resort to using small hunk
      ;; allocations. In other words, the memtrack report should show PoolChunk
      ;; to have as few NumAllocs as possible, ideally 2. Doing this will
      ;; greatly reduce fragmentation.
      (big_hunk 3100000)
      (small_hunk 50000)
   )

   (disable_mgr FALSE)
   (enable_tracking FALSE)
   (track_stl FALSE)         ;; break down stl tracking by name?
   (check_consistency FALSE)
)

(joypad
   #include joypad.dta
)

(synth
   (build_banks TRUE)
   (use_null_synth FALSE)
   (mute FALSE)

   ; size of each of double buffers, per channel (in seconds).
   ; (this can be overridden in the Stream ctor.)
   (stream_buf_size 1.2)
   
   ; when streaming from arkfile, how many arkfile blocks we read ahead
   (stream_readahead 3)

   (use_xma TRUE)
   (enable_headset_output FALSE)

   (oggvorbis
      ; what fraction of CPU time we are allowed to use for decoding
      #ifdef HX_XBOX
        #ifdef _DEBUG
          (throttle 0.5)
        #else
          (throttle 0.1)
        #endif
      #else
          (throttle 0.1)
      #endif
   )

   (mics 1)

   (iop
      (max_sfx 100) ; max # of sfx objects at any time

      (max_streams 8) ; max # of stream channels at any one time
      (spu_buffers 16) ; number of SPU stream buffers; must be at least
                       ;   twice max_streams, and should be more for slip streaming.
      (max_slip 300) ;maximum slip offset in either direction, in ms
   )

   (iop_modules
      ('iop/synth_%.irx'
          ;"spew=Bank_IOP.cpp"
          ;"spew=BankLoader_IOP.cpp"
          ;"spew=ControlClient.cpp"
          ;"spew=MidiSynth_IOP.cpp"
          ;"spew=Midi_IOP.cpp"
          ;"spew=Stream_IOP.cpp"
          ;"spew=StreamMgr_IOP.cpp"
          ;"spew=Sfx_IOP.cpp"
          ;"spew=Voice_IOP.cpp"
      )
   )

   (mic_iop_modules
      ; not using lgaud on EE, so no need for RPC
      ('iop/lgaud.irx' "rpc=0" "maxstream=0")
      ('iop/synmic_%.irx'
          ;"spew=MicXfer_IOP.cpp"
          ;"spew=Mic_IOP.cpp,0,1"
      )
   )

   (mic_types
      (ps3
         ;; (type) is a 64-bit int, broken into upper and lower words

         (rb_supercool
            (type -1 -1)     ;; TBD
            (priority 1)
         )
         (rb_logitech
            (type 0x10000000 0x046d0a03)
            (priority 2)
         )
         (singstar
            (type 0x10000000 0x14150000)
            (priority 3)
            (mic_per_channel TRUE)
         )
         (generic_usb
            ;; no type: catch-all for usb mics not named above
            (priority 4)
         )
         (generic_bluetooth
            ;; no type; catch-all for all bluetooth mics
            (priority 5)
         )
      )
   )

   ; microphone defaults
   (mic
      (gain 0.10)
      (volume -1)
      (fx FALSE)
      (dma FALSE)
      (compressor TRUE 0.7)
      (talk_threshold 0.05)
   )

   ; Ps2 FX defaults
   ; 
   ; "mode" can be one of kFXModeOff, kFXModeRoom, kFXModeSmallStudio, 
   ;    kFXModeMedStudio, kFXModeLargeStudio, kFXModeHall, kFXModeSpace, 
   ;    kFXModeEcho, kFXModeDelay, kFXModePipe
   ; "volume" in dB
   ; "feedback" in dB; only relevant when mode is 
   ;    kFXModeEcho or kFXModeDelay.
   ; "delay" can be 0.0 to 1.0; only relevant as above.

   (fx
      (chain FALSE) ; if true, all output of core 0 gets core 1 FX

      (core_0
         (mode kFXModeDelay)
         (volume -15) ; in dB
         (delay 0.6)
         (feedback -19) ; in dB
      )
      (core_1
         (mode kFXModeMedStudio)
         (volume kDbSilence) ; in dB
         (delay 0.0)
         (feedback kDbSilence) ; in dB
      )
   )

   (metamusic
      ; metamusic volume
      (volume -6)

      ; fade time in seconds
      (fade_time 1.0)       

      ; if TRUE, load the entire audio file into memory.  if FALSE, stream from disc.
      (play_from_memory TRUE)

      ; if TRUE & play_from_memory is TRUE, then allocate memory in rnd heap.
      (use_rnd_heap FALSE)
   )

   (scratcher
      #include scratcher.dta
   )

   (xbox_headset
      (noise_threshold -30) ; peak threshold for noise gate
      (low_cut 300) ; cutoff for highpass filter (hz)
      (local_gain -6) ; gain applied to local signal before being transmitted
      (remote_gain 3) ; gain applied to remote signal after being received
   )

   ; limiter on mastering voice (360 and ps3)
   (limiter
      (threshold -1) ; peak threshold in dB
      (ratio 20) ; compression ratio used above threshold
      (attack_ms 1) ; attack rate in ms
      (release_ms 250) ; release rate in ms
   )
)

;; set this to disable cheats, for apps that don't want them.
(disable_cheats FALSE)

;; Quick-cheats work if a player's joypad is in "left shift mode" (L1 and L2
;; down) or "right shift mode" (R1 and R2). Long cheats require the sequence 
;; to be pressed in order and fast. Keyboard cheats can be specified either by
;; key-code (e.g. 27 or KB_ESC) or one-letter string (e.g. "a").
;;
;; button & key codes are defined in default_macros.dta

(quick_cheats
   ;; examples:
   ;;(kPad_Tri "Description" {test 1})
   ;;(kPad_Square "Description" {test 2})

   ; left shift mode: L1 and L2
   (left 
      (kPad_DLeft  "Heap Summary" {if {exists heap_report} {heap_report}})
      (kPad_DRight "Full Heap Dump" {if {exists heap_dump} {heap_dump}})
      (kPad_DUp    "Toggle Framerate" {rnd toggle_overlay rate})
      (kPad_DDown  "Toggle Heap" {rnd toggle_heap})
      (kPad_Select "Screen Dump" {rnd screen_dump screendump})
      (kPad_Circle "Toggle Stats" {rnd toggle_overlay stats})
      (kPad_X      "Toggle Timers" {rnd toggle_timers})
      (kPad_Square "Print Symbol Table" {print_symbol_table})
      (kPad_Start "Toggle Synth HUD" {synth toggle_hud})
      (kPad_L3 "Show Cheats" {show_cheats})
      (kPad_R3 "Hi-reZ screen shot" {rnd hi_res_screen 3})
   )

   ; right shift mode: R1 and R2
   (right
   )

   ; keyboard cheats
   (keyboard
      (KB_ESCAPE "Toggle Console" {rnd show_console})      
      (KB_F1 "Show Cheats" {show_cheats})
   )
)

(long_cheats
   ;; examples:
   ;;(kPad_L1 kPad_L2 kPad_R1 kPad_R2 
   ;; kPad_DLeft kPad_DUp kPad_DDown kPad_DRight {test 3} TRUE)
   ;;(kPad_Tri kPad_Tri kPad_Tri kPad_Tri {test 4} FALSE)
)

(spew
   ; Examples
   ; {spew file console foo.txt 1 4 5}
   ; {spew foo bar.txt}
   ; {spew test}
   ; {spew swingdetector swing.txt 0}
   ; {spew trickrecipe 1}
   ; {spew trackedpatch 0}
)

(math
   (sin_table_size 64)
   (bsp_check_scale 1.1) ; 0 for no check
   (bsp_pos_tol 0.01)
   (bsp_dir_tol 0.996) ; about 5 deg
   (bsp_max_candidates 20)
   (bsp_max_depth 40)
)

(timer
   (anim) ; task time, plus SetFrame time in Milo
   (array_exec) ; script execution time
   (asm) ; RndWii mesh section
   (cam_find) ; looking up CamShot
   (cam_switch) ; starting new CamShot
   (camera) ; animating CamShot
   (char_draw) ; drawing Character
   (char_poll) ; polling Character
   (collide) ; colliding with Draw
   (crowd_iter) ; iterating over Crowd
   (crowd_set) ; setting new Crowd
   (crowd_set3d) ; setting 3d Crowd
   (debug) ; debugging cpu outside of budget
   (draw) ; drawing Draw
   (etfx) ; eyetoy effects
   (facefx) ; FaceFx lipsync 
   (facefx_bones) ; FaceFx lipsync
   (facefx_reg) ; FaceFx lipsync
   (facefx_tick) ; FaceFx lipsync
   (faces) ; RndWii triangle drawing
   (file_read) ; VAG file reading
   (light) ; animating LightPreset
   (mesh) ; RndWii mesh drawing
   (movie) ; PC/DX movie decompression
   (multimesh) ; RndWii multimesh
   (particles) ; RndWii particles
   (psysmove) ; particle movement
   (skin) ; RndWii mesh skinning
   (spotlight) ; drawing Spotlight 
   (spotlight_xfm) ; updating Spotlight transforms
   (synth) ; Synth polling
   (update) ; RndWii mesh updating
   (updateworldxfm) ; updating WorldXfm
   (vorbis) ; ogg-vorbis decompression
   (world) ; drawing and polling WorldDir
   (xfms) ; RndWii transforming

   ; Don't disable these
   (cpu (enable TRUE) (budget 16.7)) ; total frame CPU
   (gs (enable TRUE) (budget 16.7)) ; total frame GPU with TheRnd.SetGSTiming
#ifdef HX_PS3
   (gs_idle) ; total time GPU is idle, such as waiting for vsync
#endif

   ; Can also (draw FALSE)
)

(rnd
#ifdef HX_EE
   (width 640)
   (height 448)
#else
   (width 640)
   (height 480)
#endif
   (bpp 16)
   (gamma 0.85)
   (sync TRUE)
   (guard_band 0 0) ; 0 0 for max band, 4 4 runs a bit faster
   (title "Hmx App")
   (clear_color 0.0 0.0 0.0) ;HWR - Set to 0 to avoid the horrible grey flash when TheRnd inits.
   (cache_shaders TRUE)
   (overlays
      ; include (showing TRUE) to turn on at start
      ; include (lines <num>) for more than one line
      ; include (color <r> <g> <b> <a>) for background color
      (rate (color 0 .2 0 .2))
      (heap)
      (stats (lines 12))
      (timers)
      (gpu_queue (lines 1))
      (input (color 0 .4 .4 1))
      (output (lines 23))
      (paramedit (color 0 0 0 .5))
      (camera (lines 3))
      (free_camera)
      (guitar)
      (light_preset (lines 4) (color 0 0 0 0.5))
      (char_debug)
      (char_test)
      (synth_hud)
#ifdef INIT_BAND
      (char_status (lines 4) (showing FALSE))
#endif
   )
   (console_buffer 50)
   (shadow_plane 0 0 1 0)
   (limit_uv_range 6)
   (estimated_cost_divisor 100.0)
   (shaders
      ; Currently used to determine timestamps for caching
      bloom
      blur
      common
      depth
      depthvolume
      downsample
      downsample_collapse
      downsample_depth
      error
      furtest
      furtest_transform
      furtest_vs
      gradient
      lighting
      line
      movie
      multimesh
      newspot
      particles
      postprocess
      postproc_error
      pulse
      shadowfactor
      shadowmap
      standard
      standard_ps
      standard_vs
      test
      transform
   )

#ifdef HX_XBOX
   ; for xbox, force rendering to high-resolution buffer and widescreen
   ;  aspect.  used for budgeting.
   (force_hd FALSE)
#endif

#ifdef HX_WII
   (gpu_queue 280000)
#endif

   ; when streaming movies from arkfile, how many arkfile blocks we read ahead
   (movie_readahead 0)

   ; script run before display timers, for calculated timers
   ; (timer_script 
   ;    {set_timer_ms cpu {+ {timer_ms anim} {timer_ms updateworldxfm}}}
   ; )

   (font
      #include rnd_font.dta
   )
)

(world
   (free_camera
      ; free camera settings
      (rotate_rate 0.001)
      (slew_rate 0.1)
      (near_far_plane 10 1000)
   )
)

(ui
   (use_joypad TRUE)

   ; default cam and env
   (cam
      (fov 34.516)
      (y -768)
      (near 1)
      (far 1000)
      (z-range 0 1)   
   )

   (env
      (ambient 1 1 1)
   )

   ; default enter/exit time for panels/components (seconds)
   (transition_time 0.5)
   
   ; minimum time each splash screen will be displayed (seconds)
   (min_splash_time 1.0)

   ; for cheat display system
   (cheat_init
      #include cheat_init.dta
   )

   (color_presets)
   
   ; for app to override
   ;(init)
)

(locale
   ; Typical app example:  ../ui/eng/locale.dta
   
   ; NOTE: The first file listed will have any new tokens
   ; created in Milo added to it.  When a new token is added
   ; the file is redumped in alphabetical order.

   ; All files after the first will not be touched by Milo,
   ; and any hand sorting should happen in those files only.
)

(net
   (messenger
      ; port used by the NetMessenger
      (udp_port 1001)
      ; signature for all packets (change this to ignore data from other machines)
      (signature 10)
   )
   
   (session
      ; we'll wait this many ms for a host to respond to a join request
      (join_wait_time 8000)
      ; the host delays the game start so clients may synch to his start
      (game_start_delay 2000)
      ; We'll allow this many ms to connection to a machine before timing out
      (connection_timeout 15000)
   )
   
   (searcher
      ; the max number of xbox sessions we will retrieve per search
      (search_limit 8)
   )
   
   (server
      ; login data for our sandbox, provided by Quazal
      (access_key "hd9j4s")
      (port 9880)
      (address "harmonix1.quazal.net")
   )
   
   (emulator
      ; default in/out settings - these don't go into effect until enabled
      (bandwidth 0 0) ; bps
      (jitter 0 0) ; ms
      (latency 0 0) ; ms
   )
)

(digimask
   (namespace 400 5000)

   (landmarks
      'FT  '
      'CHPT'
      'S9  '
      'S8  '
      'EYR4'
      'EYL4'
      'RBC ' 
      'LBC '
      'S2  '
      'SP01'
      'SP02'
   )

   (meshes
      ('henw' ((prefix lod0) (max_tris 1700) (uv_chop 0 0 .176 .089) (normals 'VC5 ') )
              ((prefix lod1) (max_tris 100)  (uv_chop 0 0 .176 .089) (sub 1))
      )

      ('eylw' ((prefix lod0)(max_tris 150)  (normal_chop 0 0 -1 -.5)))
      ('eyrw' ((prefix lod0)(max_tris 150)  (normal_chop 0 0 -1 -.5)))
      ('thtw' ((prefix lod0) (max_tris 70)))
      ('thbw' ((prefix lod0) (max_tris 70)))

      ('eblw' ((prefix lod0) (max_tris 30)))
      ('ebrw' ((prefix lod0) (max_tris 30)))
      ('etlw' ((prefix lod0) (max_tris 30)))
      ('etrw' ((prefix lod0) (max_tris 30)))
   )

   ;(land1 'FT  ')  ;; top of head
   ;(land2 'S2  ')  ;; back of head
   ;(land3 'S9  ')  ;;tip of nose
   ;(land4 'CHPT')  ;; chin tip
   ;(land5 'SP01')
   ;(land6 'SP02')

   ;(land3 'EAR1')
   ;(land4 'EAL1')
   ;(land5 'EYR4')
   ;(land6 'EYL4')

   ;; lod1 bone sublist:
   (sublist1_frames
      'grt '
      'VC5 '
      'SKBA'
   )

   (ignore_frames
      'hgrp'
      'SGEO'

      ;; 'VC5 ' base bone for neck
      'THRT'
      ;; 'SKBA'  base bone for head
      'SKTP'

      'EPUL'
      'EPUR'

      ;; tounge:
      'TONB'
      ;;'TONM' tounge stuff
      ;;'TONT' tounge stuff

      ;; chin stuff:
      'CREA'  ;; center of bottom lip
      'CHIL'
      'CHIR'
      'CHIE'  ;; bottom of chin

      'CCL '
      'CCR '
      'CHML'
      'CHMR'
      'CHGL'
      'CHGR'
      'NOSL'
      'NOSR'
      'NOSE'
      'CHUL'
      'CHUR'
      'CHRL'
      'CHRR'
      'ECL '
      'ECR '

      'ILLL'
      'ILLR'
      'FORL'
      'FORR'
      'EARL'
      'EARR'
   )

   (clips
      (visemes
         (poses
            (('DEFT'))
            (('EAT '))
            (('ERTH'))
            (('IF  ') (weight 2.5))
            (('OX  ') (weight 2.5))
            (('OAT '))
            (('WET '))
            (('SIZE') (weight 1.5))
            (('CHUR'))
            (('FAVE'))
            (('THOU') (weight 1.5))
            (('TOLD') (weight 1.3))
            (('BUMP'))
            (('NEW ')  (weight 1.5))
            (('ROAR'))
            (('CAGE'))
         )
         (bones
            'JAW '
            'TONM'
            'TONT'
            'LILL'
            'LILR'
            'LLML'
            'LLMR'
            'LIEL'
            'LIER'
            'CCEL'
            'CCER'
            'LIUL'
            'LIUR'
            'LUML'
            'LUMR'
            )
      )

      (lids
         (poses
            (('DEFT'))
            (('WIKL' 'WIKR'))
         )
         (bones
            'ILUL'
            'ILUR'
         )
      )

      (brows
         (poses
            (('DEFT'))
            (('EBRR' 'EBRL'))
         )
         (bones
            'BROL'
            'BROR'
            'BRIL'
            'BRIR'
         )
      )
   )
)

(charsys
   #include charsys.dta
)

(audio_analysis
  ;; The following are all indexed by difficulty
  (num_slots       (2    2    3    4))
  (slot_offset     (1    1    0    0))
  (gem_density     (0.50 0.62 0.75 1.00))
  (combo_density   (0.00 0.00 0.05 0.10))
  (gems_per_phrase (8    10   12   16))

  ;; If this number is bigger, the phrase lengths will be more consistent
  ;; but they will be less clumpy.
  (long_phrase_penalty 0.1)

  ;; Do not allow more than max_repeated_gem_num gems in a row with the
  ;; same slot within max_repeated_gem_time milliseconds.
  (max_repeated_gem_num  2)
  (max_repeated_gem_time 1000)

  ;; Combos must be at least this far from any other gem
  (min_combo_spacing 200)
)

(holmes
   ; both of these must be present to turn on logging-from-disc.  in this
   ;  case all TextFile objects (aka File objects in script) will log to
   ;  the given location on the given host when running from disc.
   ; (log_host build2)
   ; (log_path "e:/logs")
)
