; joypad.dta

(disable FALSE)
(deadzone 36) ; out of 256
(threshold 0.75) ; 0 to 1

(ignore 1 2 3 4 5 6 7) ;; ignore input from these joypads

; button repeat
(hold_ms 500)
(repeat_ms 50)

(midi_joypad
   (disable TRUE) ; most apps don't want midi input
   (mapping
      (36 kPad_L2)
      (38 kPad_L1)
      (46 kPad_R1)
      (48 kPad_R2)
      (45 kPad_X)
   )
   (thresholds
      ; we can choose not to register hits below a velocity threshold per pitch
      ; the bass pedal gives us some false positives that we can filter out
      (36 50)
   )
   (come_first FALSE) ; by default give it to the last player
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; controller types for PS2
#ifdef HX_EE
(controllers
	; REA - temporarily commented out after merge, TODO remove this once verified unneeded
	;(usb_drums
	;	(detect
	;		(type kJoypadPS3Drums)
	;	)
	;)
	;(usb_guitar
	;	(detect
	;		(type kJoypadPS3Guitar)
	;	)
	;)
	; REA - stolen from the PS3 section below, since we also support these now
	(hx_guitar_ps3
      (detect
         (type kJoypadPs3HxGuitar)
      )
      (lefty_flip TRUE)
		(translate_sticks FALSE)
   )
   (hx_drums_ps3
      (detect
         (type kJoypadPs3HxDrums)
      )
   )
   (ro_guitar              ; Red Octane guitar as shipped with Guitar Hero
      (detect
         (type   kJoypadAnalog)
         (button kPad_DLeft)
      )
      (lefty_flip TRUE)
		(translate_sticks FALSE)
   )
   (digital                 ; PS1 controller or dualshock with analog button off
      (detect
         (type   kJoypadDigital)
      )
   )
   (analog                  ; analog sticks but no pressure buttons
      (detect
         (type   kJoypadAnalog)
      )
   )
   (dualshock               ; PS2 DualShock controller
      (detect
         (type   kJoypadDualShock)
      )
   )
)
#endif ; HX_EE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; controller types for WII
;;
;; PGM FIXME WII - uh, this needs to get filled out
#ifdef HX_WII
(controllers
   (gamecube               ; gamecube
      (detect
         (type   kJoypadDualShock)
      )
      (bidirectional TRUE)
   )
)
#endif ; HX_WII

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; controller types for PS3
#ifdef HX_PS3
(controllers
   (hx_guitar_ps3
      (detect
         (type kJoypadPs3HxGuitar)
      )
      (lefty_flip TRUE)
   )
   (hx_drums_ps3
      (detect
         (type kJoypadPs3HxDrums)
      )
   )
   (analog                  ; analog sticks but no pressure buttons
      (detect
         (type   kJoypadAnalog)
      )
   )
   (dualshock               ; analog sticks and pressure buttons
      (detect
         (type   kJoypadDualShock)
      )
   )
)
#endif ; HX_PS3

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; controller types for PC
#ifdef HX_PC
(controllers
   (midi
      (detect
         (type kJoypadMidi)
      )
   )
   (ro_guitar              ; Red Octane guitar as shipped with Guitar Hero
      (detect
         (stick  kLeftAnalog  X -1)
         (stick  kLeftAnalog  Y 0) ; to differentiate from drums
         
         ; this only happens on smarty joy deluxe, so we can't use it to test
         ; (stick  kRightAnalog X +1)
      )
      (lefty_flip TRUE)
   )
   (digital                 ; PS1 controller or dualshock with analog button off
      (detect
         (button kPad_RStickRight)
         (button kPad_RStickDown)
      )
   )
   (hx_xbox
      (detect
         ;; This may only work if we're using dinput to detect a 360
         ;; controller (not xinput)
         (button kPad_RStickUp)
      )
   )
   (analog                  ; analog sticks but no pressure buttons
      (detect
      )
   )
   (dualshock               ; PS2 DualShock controller
      (detect
      )
   )
)
#endif ;; HX_PC

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; controller types for 360
#ifdef HX_XBOX
(controllers
   ; rock band guitar
   (strat_xbox
      (detect
         (type   kJoypadXboxHxGuitar)
      )
      (lefty_flip TRUE)
   )

   ;; Explorer as shipped with GH2 360
   (ro_guitar_xbox
      (detect
         (type   kJoypadXboxRoGuitar)
      )
      (ignore_buttons kPad_L2 kPad_R2)
      (lefty_flip TRUE)
   )

   (hx_drums_xbox
      (detect
         (type   kJoypadXboxDrums)
      )
   )

   (hx_drums_xbox
      (detect
         (type   kJoypadXboxDrums)
      )
   )

   (stagekit_xbox
      (detect
         (type   kJoypadXboxStageKit)
      )
   )

   ;; Joypads
   (digital
      (detect
         (type   kJoypadDigital)
      )
   )

   (analog
      (detect
         (type   kJoypadAnalog)
      )
   )
)

#endif

; list of controllers that support five-way switch
(five_way_controllers
   strat_xbox hx_guitar_ps3
)
   
(adapters
   ; products not in map will print warning and use default
   (map
      ('4 axis 16 button joystick' default) ; Older - Smart Joy DELUXE
      ('SmartJoy PLUS Adapter' smart_plus) ; Newer - Smart Joy PLUS      
      ('SmartJoy PLUS USB Adapter' smart_plus) ; Maybe...
      ('SmartJoy Dual PLUS Adapter' smart_plus)
      ('MP-8866 Dual USB Joypad' ro_dual) ; Red Octane dual adapter
      ('6-button joystick' 6-button)
      ('PSX/USB Pad Adaptor (4-axis, 12-button, POV,effects)' kiky_system_x)
      ('TigerGame PS/PS2 Game Controller Adapter' tiger) ; Super Joy Box 3 Pro
      ('XBOX 360 For Windows (Controller)' xbox) ; no drivers(?)
      ('Controller (XBOX 360 For Windows)' xbox) ; With latest drivers
      ('Controller (Guitar Hero X-plorer  )' xbox) ; gh360 controller
      ('USB Joystick     ' smart_plus)
      ('GameCube Joypad' gamecube)
      ('Wii Remote' wii_core)
      ('Wii Remote + FS' wii_freestyle)
      ('Wii Remote + CL' wii_classic)
   )
   (default
      (buttons
         (0 kPad_Tri)
         (1 kPad_Circle)
         (2 kPad_X)
         (3 kPad_Square)
         (4 kPad_L2)
         (5 kPad_R2)
         (6 kPad_L1)
         (7 kPad_R1)
         (8 kPad_Select)
         (9 kPad_Start)
         (10 kPad_R3)
         (11 kPad_L3)
         (12 kPad_DUp)
         (13 kPad_DRight)
         (14 kPad_DDown)
         (15 kPad_DLeft)
      )
   )
   (smart_plus
      (buttons
         (0 kPad_Tri)
         (1 kPad_Circle)
         (2 kPad_X)
         (3 kPad_Square)
         (4 kPad_L2)
         (5 kPad_R2)
         (6 kPad_L1)
         (7 kPad_R1)
         (8 kPad_Start)
         (9 kPad_Select)
         (10 kPad_L3)
         (11 kPad_R3)
      )
      (pov
         (0 kPad_DUp)
         (1 kPad_DRight)
         (2 kPad_DDown)
         (3 kPad_DLeft)
      )
   )
   (kiky_system_x
      (buttons
         (0 kPad_Tri)
         (1 kPad_Circle)
         (2 kPad_X)
         (3 kPad_Square)
         (4 kPad_L2)
         (5 kPad_R2)
         (6 kPad_L1)
         (7 kPad_R1)
         (8 kPad_Select)
         (9 kPad_Start)
         (10 kPad_L3)
         (11 kPad_R3)
      )
      (pov
         (0 kPad_DUp)
         (1 kPad_DRight)
         (2 kPad_DDown)
         (3 kPad_DLeft)
      )
   )
   (ro_dual
      (buttons
         (0 kPad_Tri)
         (1 kPad_Circle)
         (2 kPad_X)
         (3 kPad_Square)
         (4 kPad_L1)
         (5 kPad_R1)
         (6 kPad_L2)
         (7 kPad_R2)
         (8 kPad_Start)
         (9 kPad_Select)
         (10 kPad_L3)
         (11 kPad_R3)
      )
      (pov
         (0 kPad_DUp)
         (1 kPad_DRight)
         (2 kPad_DDown)
         (3 kPad_DLeft)
      )
   )
   (6-button
      (buttons
         (0 kPad_X)
         (1 kPad_Circle)
         (2 kPad_Square)
         (3 kPad_Tri)
         (4 kPad_L2)
         (5 kPad_R2)
      )
   )
   (tiger
      (buttons
         (0 kPad_Tri)
         (1 kPad_Circle)
         (2 kPad_X)
         (3 kPad_Square)
         (4 kPad_L2)
         (5 kPad_R2)
         (6 kPad_L1)
         (7 kPad_R1)
         (8 kPad_Start)
         (9 kPad_Select)
         (10 kPad_L3)
         (11 kPad_R3)
         (12 kPad_DUp)
         (13 kPad_DRight)
         (14 kPad_DDown)
         (15 kPad_DLeft)
      )
   )
   (xbox
      (buttons
          ( 0 kPad_X)
          ( 1 kPad_Tri)
          ( 2 kPad_Square)
          ( 3 kPad_Circle)
          ( 4 kPad_L1)
          ( 5 kPad_L2)
          ( 6 kPad_Select)
          ( 7 kPad_Start)
          (23 kPad_R2)
      )
      (pov
         (0 kPad_DUp)
         (1 kPad_DRight)
         (2 kPad_DDown)
         (3 kPad_DLeft)
      )
      (sticks xbox)
   )
   (gamecube
      (buttons
         (0 kPad_DLeft)
         (1 kPad_DRight)
         (2 kPad_DDown)
         (3 kPad_DUp)
         (4 kPad_L1)
         (5 kPad_R2)
         (6 kPad_L2)
         (8 kPad_X)
         (9 kPad_Square)
         (10 kPad_Circle)
         (11 kPad_Tri)
         (12 kPad_Start)
      )
   )
   (wii_core
      (buttons
         (0 kPad_DLeft)
         (1 kPad_DRight)
         (2 kPad_DDown)
         (3 kPad_DUp)
         (4 kPad_Start)
         (8 kPad_Circle)
         (9 kPad_Square)
         (10 kPad_Tri)
         (11 kPad_X)
      )
   )
   (wii_freestyle
      (buttons
         (0 kPad_DLeft)
         (1 kPad_DRight)
         (2 kPad_DDown)
         (3 kPad_DUp)
         (4 kPad_Start)
         (8 kPad_Circle)
         (9 kPad_Square)
         (13 kPad_Tri)
         (14 kPad_X)
      )
   )
   (wii_classic
      (buttons
         (0 kPad_DUp)
         (1 kPad_DLeft)
         (2 kPad_R1)
         (3 kPad_Tri)
         (4 kPad_Circle)
         (5 kPad_Square)
         (6 kPad_X)
         (7 kPad_L1)
         (9 kPad_R2)
         (10 kPad_Start)
         (12 kPad_Select)
         (13 kPad_L2)
         (14 kPad_DDown)
         (15 kPad_DRight)
      )
   )
)

(button_filters
   (analog
      (kPad_Circle kPad_Tri)
      (kPad_Tri    kPad_Circle)
   )
   (dualshock
      (kPad_Circle kPad_Tri)
      (kPad_Tri    kPad_Circle)
   )
   (ro_guitar ; 1 5 4 6 7
      (kPad_R2     kPad_X)
      (kPad_Circle kPad_Tri)
		(kPad_Tri    kPad_R1) ; REA - so yellow sorts on RO guitar
		(kPad_X      kPad_Square)
   )
   (ro_guitar_xbox
      (6 kPad_X)
      (4 kPad_Tri)
      (5 kPad_R1) ; yellow -> R1
   )
   ; rock band guitar
   (strat_xbox
      (5       kPad_R1) ; yellow -> R1
      (kPad_R1 kPad_L1) ; remap tilt to something harmless
   )
   (hx_guitar_ps3  ; buttons: 6 5 4 7 2
      (kPad_X kPad_X)      ; Green
      (kPad_Circle kPad_Tri)    ; Red
      (kPad_Tri kPad_R1)     ; Yellow
      (kPad_R1 kPad_L1) ; remap tilt to something harmless
   )
   (hx_drums_ps3
      (kPad_Circle kPad_Tri)
      (kPad_Tri    kPad_DUp)
      (kPad_Square kPad_DDown)
      (kPad_L1     kPad_R1) ; kick is alternate button
   )
   (hx_drums_xbox
      (2 kPad_R1) ; kick -> R1
      (4 kPad_Tri)
      (5 kPad_DUp)
      (7 kPad_DDown)
      (6 kPad_X)
   )
)
