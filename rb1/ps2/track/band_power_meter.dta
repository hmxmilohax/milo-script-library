
(RndDir
   (types
      (powermeter
         (editor
            
            (initialize script (script {$this reset}))
            (test_energy float (post_sync {$this set_energy [test_energy] [state] guitar}))
            
            (energy_ready script (script {$this energy_ready guitar}))
            (energy_added script (script {$this energy_added}))
         )
   
         (test_energy 0)
         (energy 0)
         (state 'uninitialized')
         
         ; $state can be 'none' 'ready' or 'deploying'
         (set_energy ($in_val $state $instrument)
         
            ; if we've just been increased, do a flashy thing
            {if {!= $in_val [energy]}
               {extend_anim.grp set_frame $in_val}
               {set [energy] $in_val}
            }
            
            {if {!= $state [state]}
               {switch $state
                  (none {$this stop_deploy})
                  (ready {$this energy_ready $instrument})
                  (deploying {$this deploy})
               }
               {set [state] $state}
            }
         )
         
         (reset
            {reset.trig trigger}
            {$this set_energy 0 'none' guitar}
         )         
        
         (energy_ready ($instrument)
            {do ($time_til_next {- {taskmgr time_til_next 1 .001} .2})
                ($cue {sprintf "rp_available_%s.cue" $instrument})
               {if {< $time_til_next 0}
                  {set $time_til_next {+ $time_til_next 1}}
               }
               {script_task kTaskBeats (delay $time_til_next)
                  (script {be_ready.trig trigger})
               }
               {synth play $cue}
            }
         )
         
         (deploy
            {be_deploying.trig trigger}
         )
         
         (stop_deploy
            {be_filling.trig trigger}
            {extend_anim.grp set_frame [energy]}
         )
          
         (energy_added
            {spotlight_phrase_success.trig trigger}
         )
      )
   )
)