;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Band Matchmaking Screen

{new UIPanel matchmaking_band_panel
	#ifdef HX_XBOX
		(file matchmaking_band.milo)
   #else
		(file matchmaking_band_og.milo)
   #endif
   
   (show_waiting
#ifdef HX_XBOX ; REA - Doesn't exist in og practice space, hopefully we'll add it
      {spinner.filt animate}
#endif
      {waiting.grp set_showing TRUE}
   )
   (hide_waiting
      {waiting.grp set_showing FALSE}
   )

   ;; char hint helpers
   (slot_to_grp ($slot_num)
      {sprintf "slot%d_char_hint.grp" $slot_num}
   )

   (slot_to_lbl ($slot_num)
      {sprintf "slot%d_char_hint.lbl" $slot_num}
   )

   (slot_to_leader_array ($slot_num)
      {do ($a {array 2})
         {set_elem $a 0
            {sprintf "slot%d_char_hint_leader_frame.mesh" $slot_num}
         }
         {set_elem $a 1
            {sprintf "slot%d_char_hint_leader.lbl" $slot_num}
         }

         $a
      }
   )

   (slot_to_trg ($slot_num)
      {sprintf "slot0%d.trg" $slot_num}
   )

   ;; char hint public interface
   (show_char_hint ($slot_num $name $is_leader)
      {{$this slot_to_lbl $slot_num} set_localized $name}

      {foreach $entry {$this slot_to_leader_array $slot_num}
         {$entry set_showing $is_leader}
      }

      {if {! {{$this slot_to_grp $slot_num} showing}}
         {{$this slot_to_grp $slot_num} set_showing TRUE}
         {{$this slot_to_trg $slot_num} trigger}
      }
   )

   (hide_char_hint ($slot_num)
      {{$this slot_to_grp $slot_num} set_showing FALSE}
   )

   ;; uipanel handler
   (unload
      ; unhook the callback here after we've exited
      {practice_space_panel set_showing_callback ''}
      ; free any new characters we have created
      {charcreator_panel free_all}
   )
}

; first time creating a band
{new UIScreen first_band_create_screen
   (panels dialog_panel)
   (focus dialog_panel)

   (enter
      {dialog_panel set_ok {localize_token first_band_create_message}}
   )

   (SELECT_MSG
      {{profile_mgr get_mapped_profile_from_player {gamecfg get leader_num}} 
            set_first_band_create_done}
      {ui pop_screen}
   )
}

{new MultiFocusScreen matchmaking_band_screen
   (panels
      meta
      ;practice_space_panel
		movie_panel
      matchmaking_band_panel
      helpbar
   )
   (helpbar ()) ;helpbar will be set dynamically in (update)

   (back {gamemode get main_mode_screen})

   (player_panels
      (panel matchmaking_band_panel)
      (slots COOP_SLOTS_ORDER)
      (type ; type of PanelDirs, serves as a common handler for all options
         (player_num {gamecfg get_player_num_from_slot_num [slot_num]})  ; required
         (slot_num 0)    ; required
         (slot none)     ; required
         (option '')     ; required
         (current_option ; required
            {cond
               ({session is_busy}
                  waiting
               )
               (
                  {&&
                     {! {$this is_participating}}
                     {&&
                        {!= [slot] none}
                        {! {gamecfg is_instrument_connected [slot] 
                           kGameControllerNotParticipating}}
                     }
                  }
                  no_instrument
               )
               ({! {$this is_participating}}
                  join
               )
#ifdef HX_XBOX 
; REA - Should never happen on PS2
               ({! {{game get_player_config [player_num]} has_char}}
                  {if_else [choose_gender]
                     choose_gender
                     choose_character
                  }
               )
#endif 
               ; Default
               {do ($leader_num {gamecfg get leader_num})
				      {if_else {== $leader_num -1}
                     ready_no_leader
                     ; else
                     {if_else {== $leader_num [player_num]}
                        ready_leader
                        ready_not_leader
                     }
                  }
               }
            }
         )
         (char_provider '') ; the provider for character list
         (choose_gender FALSE)
         (enter
            {set [choose_gender] FALSE}
            {$this update_char_provider}
            
         )

         MATCHMAKING_LOAD_CHAR_METHODS ; from matchmaking.dta

         ; If the input device changes, we may need to allow the player
         ; to select a new character (with the appropriate instrument)
         (verify_controller_types
            {if
               {&&
                  {! {session is_busy}}
                  {$this is_participating}
                  {gamecfg is_player_local [player_num]}
               }
               ; then
               {do
                  ($pcfg {game get_player_config [player_num]})
                  ($old_instrument {$pcfg get_controller_type})
                  ($new_instrument
                     {game get_controller_type_from_controller [player_num]}
                  )

                  {if {!= $old_instrument $new_instrument}
                     ; remove player from session
                     {$this remove_player}
                  }
               }
            }
         )

         ;; Update the hint list of characters in the selected band
         (update_char_hints_grp
            {if_else
               {&&
                  {! {session is_busy}}
                  {tour performer}
                  {||
                     {! {$this is_participating}}
                     {! {{game get_player_config [player_num]} has_char}}
                  }
               }
               ; then
               {do
                  ($mini_band_member
                     {{tour performer} get_band_member_for_slot [slot_num]}
                  )

                  {if_else {elem $mini_band_member 0}
                     {matchmaking_band_panel show_char_hint
                        [slot_num]
                        {elem $mini_band_member 1} ;; char name
                        {elem $mini_band_member 2} ;; is_leader
                     }
                     ; else
                     {matchmaking_band_panel hide_char_hint [slot_num]}
                  }
               }
               ; else
               {do
                  {matchmaking_band_panel hide_char_hint [slot_num]}
               }
            }
         )

         (update ; required
            {do
               ($participating   {$this is_participating})
               ($leader          {&& $participating {$this is_leader}})
               ($remote
                  {&&
                     $participating
                     {! {gamecfg is_player_local [player_num]}}
                  }
               )
               ($has_char
                  {&&
                     $participating
                     {{gamecfg get_player_config [player_num]} has_char}
                  }
               )
               ($has_online
                  {&&
                     $participating
                     {||
                        $remote
                        {platform_mgr player_has_online_privilege [player_num]}
                     }
                  }
               )
               ($session_busy    {session is_busy})
               ($part_sel        FALSE)

               ;;;;;;;;;;
               ;; RE-SYNC STATE TO EXISTING PLAYER CONFIG

               MATCHMAKING_UPDATE_COMMON ; from matchmaking.dta
			   
            }
         )
         (is_ready ; required
            {||
               {! {$this is_participating}}
               {{game get_player_config [player_num]} has_char}
            }
         )
         (allow_button_msg ($player_num) ; required
            {||
               {== [slot] none}
               {&&
                  {== [slot] {game get_instrument_from_controller $player_num}}

                  ;; HACK! - try to put lower player num in lower slot...
                  {if_else
                     {&&
                        {== [slot] guitar}
                        {== [slot_num] kGameCoopSlotGuitar0}
                        {== [player_num] -1}
                        {==
                           { ; check that the other guitar slot is unassigned...
                              {{ui current_screen} get_panel_from_slot_num
                                 kGameCoopSlotGuitar1
                              }
                              player_num
                           }
                           -1
                        }
                     }
                     ; then
                     {gamecfg is_controller_type_with_lowest_pad_num
                        $player_num
                        kControllerGuitar
                     }
                     ; else
                     TRUE
                  }
               }
            }
         )

         (remove_player
            {do
				
               ($reassign_leader {== {gamecfg get leader_num} [player_num]})
               ($new_leader -1)
               ($player_num [player_num]) ; save this off before we lose it
			   ;; pick a new leader
               {if $reassign_leader
                  {do ($band {tour performer})
				  
                  #ifdef HX_XBOX
                     {if {|| {! $band} {! {$band is_finalized}}}
					  {foreach_int $p 0 4
                           {if
                              {&&
                                 {== $new_leader -1}
                                 {!= $p $player_num}
                                 {game is_player_participating $p}
                              }
                              ; then
                              {set $new_leader $p}
                           }
                        }
                     }
                  
                  #else
                    ; HOJ DO WE WANT TO ASSIGN A NEW LEADER IN TOUR MODE???????
					 {foreach_int $p 0 4
                           {if
                              {&&
                                 {== $new_leader -1}
                                 {!= $p $player_num}
                                 {game is_player_participating $p}
                              }
                              ; then
                              {set $new_leader $p}
                           }
                        }
						
                  #endif
					   }
               }
					
               ; REA - if vocal player left, free mics!
					{if {== {gamecfg get_controller_type_from_controller $player_num} kControllerVocals}
						{synth release_mics} ; REA - clear all assigned mics
					}
					
               {session_mgr remove_local_player $player_num}
               
               ;; Reassign leader
               {if $reassign_leader
                  {$this set_game_leader $new_leader}

                  {session update_game_data}
               }
               {gamecfg set_player_slot_num $player_num -1}
            }

            {{gamemode get matchmaking_screen} export_all update}
         )

         ; net sync stuff...
         (send_focus_msg TRUE)
         (FOCUS_MSG
            {if [send_focus_msg]
               {band_ui_sink send_net_focus [player_num] $new_focus}
            }
         )
         (net_focus ($player_num $new_focus_name)
            {set [send_focus_msg] FALSE}
            {$this set_focus {$this find $new_focus_name}}
            {set [send_focus_msg] TRUE}
         )
         
         (get_char
            {{game get_player_config [player_num]} get_char}
         )
         (is_participating
            {&& {!= [player_num] -1} {game is_player_participating [player_num]}}
         )
         (is_remote
            {&&
               $participating
               {! {session is_local_player [player_num]}}
            }
         )
         (is_leader
            {&& {$this is_participating} {== {gamecfg get leader_num} [player_num]}}
         )
         (update_char_provider
            {if {!= [player_num] -1}
               {set [char_provider] {get_char_provider [player_num]}}

               ;; save old value (if any)
               {[char_provider] save_relative_pos {char.lst selected_pos}}

               {[char_provider] set_instrument_filter
                  {game get_instrument_from_controller [player_num]}
               }

               {if
                  {&&
                     {$this is_participating}
                     {gamecfg is_player_local [player_num]}
                  }

                  ;; update list
                  {char.lst set_provider [char_provider]}

                  ;; and try to grab the old position, if there is one
                  {char.lst set_selected {[char_provider] get_saved_pos}}
               }
            }
         )

         (new_local_player ($player_num)
            {gamecfg set_player_slot_num $player_num [slot_num]}
            {session_mgr update_band_leader}

            {if {== $player_num [player_num]}
               {session_mgr remove_sink $this new_local_player}

               {$this update_char_provider}
               ;Default character only  MTC
                  {do ($char {available_prefab $player_num})
                     {{game get_player_config $player_num} set_char $char}
                     {$this load_char $char}
                  }

               {{gamemode get matchmaking_screen} export_all update}
            }
         )

         (set_game_leader ($player_num)
            {gamecfg set leader_num $player_num}

            {if {gamemode get profile_required}
               {profile_mgr rebuild_profile_map}
            }
         )
      )
      ; "handlers" are executed in context of PanelDirs from panel
      ; if they return kDataUnhandled, messages are passed on to PanelDir
      (options
         (waiting
            ; eat any button messages...
            (BUTTON_DOWN_MSG
               {switch $button
                  ((kPad_Tri kPad_X)
                     {synth play button_error}
                  )
               }
               TRUE
            )
         )
         (no_instrument
            (BUTTON_DOWN_MSG
               TRUE
            )
         )
         (join
            (BUTTON_DOWN_MSG
               {if_else
                  {||
                     {session_mgr is_finding}
                     {!= {session mode} kNetLocal}
                  }
                  ; then
                  {do
                     {switch $button
                        ((kPad_Tri kPad_X)
                           {synth play button_error}
                        )
                     }
                     TRUE ; eat this message...
                  }
                  ; else
                   {switch $button                   ;took out \ at start of this line
                     (kPad_Tri
                        ;; Go Back...
                        ;; TODO: destroy session and stuff?
                        {band_ui_sink set invite_accepted FALSE}
                        {synth play button_back}
						{helpbar set_use_all_controllers FALSE}
				            {ui goto_screen {{gamemode get matchmaking_screen} get back}};HOJ GO BACK FROM BAND SELECTION
                     )
                     (kPad_X
                        {cond
                           ({gamecfg is_missing_mic $player_num FALSE}
                              {vocalist_must_have_mic_screen set
                                 message band_vocalist_needs_mic
                              }
                              {ui push_screen vocalist_must_have_mic_screen}
                           )
                           ({game can_local_player_join $player_num}
                              {synth play button_select}

#ifndef HX_XBOX
										; REA - Set leader to first player to click in
										{if {== {gamecfg get leader_num} -1}
											{game set leader_num $player_num} 
										}
#endif
                              ;; add_local_player will fire off a msg when ready
                              {session_mgr add_sink $this new_local_player}
                              {session_mgr add_local_player
                                 $player_num
                                 {gamecfg
                                    get_controller_type_from_controller
                                    $player_num
                                 }
                              }

                              {{gamemode get matchmaking_screen} export_all update}
                           )
                           (;; If they can't join, try to help them out...
                              {&&
                                 {gamecfg is_instrument_available
                                    {gamecfg
                                       get_instrument_from_controller
                                       $player_num
                                    }
                                 }
                                 {<
                                    {session num_players}
                                    {gamemode get max_local_players}
                                 }
                              }
                              ; then
                              {cond
                                 (
                                    {&&
                                       {gamemode get online_play_required}
                                       {!
                                          {platform_mgr
                                             player_has_online_privilege
                                             $player_num
                                          }
                                       }
                                    }
                                    ; then
                                    {mm_signin_net_screen set player_num
                                       $player_num
                                    }
                                    {ui push_screen mm_signin_net_screen}
                                 )
                                 (
                                    {&&
                                       {gamemode get profile_required}
                                       {!
                                          {platform_mgr
                                             is_player_signed_in
                                             $player_num
                                          }
                                       }
                                    }
                                    ; then
                                    {mm_band_signin_screen set player_num
                                       $player_num
                                    }
                                    {ui push_screen mm_band_signin_screen}
                                 )
                                 (
                                    {&&
                                       {platform_mgr is_signed_in $player_num}
                                       {platform_mgr is_player_a_guest
                                          $player_num
                                       }
                                    }
                                    ; then
                                    {mm_signin_guest_needs_owner_screen
                                       set
                                       player_num
                                       $player_num
                                    }
                                    {ui push_screen
                                       mm_signin_guest_needs_owner_screen
                                    }
                                 )
                                 (
                                    {! {platform_mgr is_signed_in $player_num}}
                                    ; then
                                    {if_else {gamemode get online_play_required}
                                       {platform_mgr signin 4 1}
                                       ; else
                                       {platform_mgr signin 4 0}
                                    }
                                 )
                                 ; default
                                 (TRUE
                                    {synth play button_error}
                                 )
                              }
                           )
                           ; default
                           (TRUE
                              {synth play button_error}
                           )
                        }
                     )
                  }
               }
            )
         )
         (choose_character
            (init
               {$this update_char_provider}
               {$this set_focus char.lst}
            )
            (SELECT_START_MSG
               {if {[char_provider] is_char {$component selected_pos}}
                  {do
                     ($band {tour performer})
                     ($char
                        {[char_provider] get_char {$component selected_pos}}
                     )

                     ; set selection from list
                     {{game get_player_config [player_num]} set_char $char}
                     
                     ;; update leader if appropriate
                     {if
                        {&&
                           {gamemode get choose_leader_from_band}
                           $band ; might be joining online BWT
                           #ifdef HX_XBOX
                           {$band is_finalized}
                           #endif
                           {$band is_leader $char}
                        }
                        ; then

                        {if {!= {gamecfg get leader_num} -1}
                           {fail "Leader selected, but leader_num != -1"}
                        }

                        {$this set_game_leader [player_num]}
                     }
                  }

                  ; broadcast our selection to other panels, disabling chars
                  {{gamemode get matchmaking_screen} export_all update}
               }
               kDataUnhandled ; let the selection happen
            )
            (SCROLL_MSG
               {$this load_char_from_list}
            )
            (SELECT_MSG
               {if {[char_provider] is_create_new {$component selected_pos}}
                  ; goto gender selection
                  {set [choose_gender] TRUE}
               }
               {{gamemode get matchmaking_screen} export_all update}
            )
            (BUTTON_DOWN_MSG
               {if_else {== $button kPad_Tri}
                  {do
                     {synth play button_back}
                     {$this remove_player}
                  }
                  ; else
                  kDataUnhandled
               }
            )
         )
         MATCHMAKING_CHOOSE_GENDER ; from matchmaking.dta
         (ready_no_leader
            (init
               {$this set_focus continue_no_leader.btn}
            )
            (SELECT_START_MSG
               {switch $component
                  (continue_no_leader.btn
                     {if {{gamemode get matchmaking_screen} all_ready}
                        {{gamemode get matchmaking_screen}
                           goto_leader_confirmation
                        }
                     }
                  )
                  (choose_char_non_leader.btn
                     {$this release_char}
                  )
               }
               kDataUnhandled
            )
            (BUTTON_DOWN_MSG
               {switch $button
                  (kPad_Tri
                     {synth play button_back}
                     {$this remove_player}
                  )
                  ; default
                  kDataUnhandled
               }
            )
         )
         (ready_leader
            (init
               MM_READY_LEADER_BUTTON_FOCUS
            )
            (SELECT_START_MSG
               {switch $component
                  (continue.btn
                     {if_else {== {$component get text_token} waiting}
                        {do
                           {synth play button_error}
                           TRUE ;; eat message
                        }
                        ; else
                        {do
                           {if {{gamemode get matchmaking_screen} all_ready}
                              {{gamemode get matchmaking_screen}
                                 goto_leader_confirmation
                              }
                           }
                           kDataUnhandled
                        }
                     }
                  )
                  ((search.btn search_continue.btn)
#ifndef _SHIP
                     {if
                        {!=
                           {search.btn get text_token}
                           {search_continue.btn get text_token}
                        }
                        ; then
                        {fail "search.btn and search_continue.btn out of sync\n"}
                     }
#endif
                     {switch {search.btn get text_token}
                        ; Note, the behavior here should be kept in sync with the selchannel screen in matchmaking.dta
                        ;;  the selchannel screen in matchmaking.dta
                        ((matchmaker_search_hth matchmaker_search_band)
                           ; start search on the default channel
                           {gamecfg set channel 0}
                           {session_mgr find_players}
                        )
                        (matchmaker_find_leader
                           {session_mgr find_leader}
                        )
                        (matchmaker_find_bandmates
                           {session_mgr find_bandmates}
                        )
                        (matchmaker_find_new_bandmates
                           ; start search on the default channel
                           {gamecfg set channel 0}
                           {session_mgr find_bandmates}
                        )
                        (matchmaker_find_new_leader
                           ; start search on the default channel
                           {gamecfg set channel 0}
                           {session_mgr find_leader}
                        )
                        (matchmaker_search_cancel
                           {session_mgr cancel_find}
                        )
                        ((matchmaker_invite_join_band matchmaker_invite_join_game)
                           {session_mgr join_invite}
                        )
                     }
                     kDataUnhandled
                  )
                  (invite.btn
#ifdef HX_XBOX
                     {platform_mgr show_friends [player_num]}
#else
                     {band_ui_sink set_net_sync FALSE}
                     {ui push_screen invite_friends_screen}
#endif
                     kDataUnhandled
                  )
                  (kick.btn
                     {band_ui_sink set_net_sync FALSE}
                     {ui push_screen kick_player_screen}
                     kDataUnhandled
                  )
                  (choose_char.btn
                     {$this release_char}
                     kDataUnhandled
                  )
                  ; default
                  kDataUnhandled
               }
            )
            (BUTTON_DOWN_MSG
               {switch $button
                  (kPad_Tri
                     {session_mgr cancel_find}
                     {synth play button_back}

                     {$this remove_player}
                     {session_mgr update_band_leader}
                  )
                  ; default
                  kDataUnhandled
               }
            )
         )
         (ready_not_leader
#ifdef HX_XBOX
            (init
               {if {== {session mode} kNetLocal}
                  {$this set_focus choose_char_non_leader.btn}
               }
            )
            (SELECT_START_MSG
               {switch $component
                  (choose_char_non_leader.btn
                     {$this release_char}
                  )
               }
               kDataUnhandled
            )
#endif
            (BUTTON_DOWN_MSG
               {switch $button
                  (kPad_Tri
                     {synth play button_back}
                     {$this remove_player}
                  )
                  ; else
                  kDataUnhandled
               }
            )
         )
      )
   )

   (is_ready ; required
      ; check for case when invited into online BWT
      {if_else {&& {gamemode get choose_leader_from_band}
                  {! {tour performer}}
               }
         TRUE
         {&&
            {>= {session num_players} {gamemode get min_players}}
            {<= {session num_players} {gamemode get max_players}}
         }      
      }
   )

   (BUTTON_DOWN_MSG
      {switch $button
         ((kPad_X kPad_Tri)
            {synth play button_error}
         )
#ifdef HX_XBOX
         (kPad_R1
            {if 
               {&&
                  {> {session num_players} 0}
                  {gamemode get online_play_required}
               }
               ; bring up the more details screen
               {band_ui_sink set_net_sync FALSE}
               {ui push_screen more_details_screen}
            }
         )
#endif
         ; default
         TRUE ; eat this button press
      }
   )

   (goto_leader_confirmation
      {if_else {== {gamecfg get leader_num} -1}
         {ui push_screen matchmaking_confirm_no_leader_screen}
         ; else
         {do ($name_at_leader_limit '')

            ;; make sure the leader can actually create a band
            {if {gamemode get is_bwt}
               {if
                  {&&
                     {== {tour bwtmode} kMetaTour_StartNew}
                     {is_leader_local}
                     {!
                        {profile_mgr can_char_create_band
                           {gamecfg get leader_num}
                        }
                     }
                  }
                  ;; then
                  {do
                     ($leader_pcfg
                        {gamecfg get_player_config {gamecfg get leader_num}}
                     )

                     {set $name_at_leader_limit
                        {{$leader_pcfg get_char} get_char_name}
                     }
                  }
               }
            }
			{helpbar set_use_all_controllers FALSE}
            {ui goto_screen {gamemode get post_matchmaking_screen}}
            ; this will get everyone to fill in NPCs with valid chars
            {session_mgr send_to_all (game load_all_chars) TRUE}
            {game load_all_chars}
         }
      }
   )
   
   (NEW_REMOTE_PLAYER_MSG
      {if {== {session num_open_slots} 0}
         {session_mgr cancel_find}
      }
      {$this export_all update}
   )
   
   (REMOTE_PLAYER_LEFT_MSG
      ; If the leader's gone, kill the session
      {if {&&
            {== $player_num {gamecfg get leader_num}}
            {! {session disabled}}   
          }
         {tour clear_performer}
         {session clear}
         {session set_public FALSE}
         {$this export_all update}
      }
   )

   (change_game_msg
      {$this export_all update}
   )

   ;; Set when a signin change happens under a pushed screen...
   (signin_change_waiting FALSE)

   (signin_changed
      {unless {band_ui_sink is_forced_transition_active}
         {if_else {== {ui current_screen} $this}
            {$this process_signin_change}
            ; else
            {$this set signin_change_waiting TRUE}
         }
      }
   )

   (process_signin_change
      {unless {band_ui_sink is_forced_transition_active}
         ;; if a slot owns a player whose signin has changed, remove that player
         {foreach_int $slot_num 0 4
            {do ($player_num {$this get_player_num_from_slot_num $slot_num})
               {if
                  {&&
                     {!= $player_num -1}
                     {gamecfg is_player_local $player_num}
                     {platform_mgr has_player_signin_changed $player_num}
                  }
                  ; then
                  {{$this get_panel_from_slot_num $slot_num} remove_player}
               }
            }
         }

         ;; Rebuild profile mappings to clear possible obsolete mappings...
         {profile_mgr rebuild_profile_map}

         ; only autoload if we're not in a networked session
         {if_else {autoload_allowed}
            ;; Look for autoload fodder
            {autoload}
            ; else, clear out any stale data
            {profile_mgr purge_old_data}
         }

         {$this export_all update}
      }
   )

   (profile_activated_msg ($pad_num)
      ;; just treat this like a signin change (without the signin change...)
      {unless {band_ui_sink is_forced_transition_active}
         {if_else {== {ui current_screen} $this}
            {$this process_signin_change}
            ; else
            {$this set signin_change_waiting TRUE}
         }
      }
   )

   (save_load_all_complete_msg
      ;; Rebuild profile mappings now that autoload has
      ;;   happened (aka old data has been purged).
      {profile_mgr rebuild_profile_map}

      {$this export_all update}
   )

   (JOYPAD_CONNECT_MSG
      {if
         {&&
            {! {ui in_transition}}
            {== {ui current_screen} $this}
         }
         ; then
         {$this export_all verify_controller_types}
         {$this export_all update}
      }
   )

   (enter
      ;; NOTE: MultiFocusScreen add_sink's to the session
	  
	  ; REA - Make sure we don't have any players added already
	  {session clear}
      {synth release_mics} ; REA - clear all assigned mics when we enter

      {session_mgr add_sink $this}
      {memcardmgr add_sink $this save_load_all_complete_msg}
      {profile_mgr add_sink $this profile_activated_msg}

      {game set joining_allowed TRUE}
      
      ;; async stuff warning...
      {matchmaking_band_panel hide_waiting}
      
      ; the CharSelectPanel wants to know when to show/hide chars
      {practice_space_panel set_showing_callback $this}
      
      ; select the coop matchmaking cam shot
#ifdef HX_XBOX   	;; PGM
      {practice_space_panel select_cam "coop_enter"}
#endif
      
	
      ; Inside matchmaking set the category back to intro.
      {gamecfg set coop_intro_category INTRO}

      ; Start with any necessary profile mapping in place
      {profile_mgr rebuild_profile_map}

 ; /--------------------------------------------------------------------------------
	   #ifdef TEMPDONTUSE
	   
			;HOJ AUTOMATICALLY SET THE BAND LEADER
		
		{set $leader_num {gamecfg get leader_num}}
		
		{if {!= $leader_num -1}
			{do
				{set $instr {game get_instrument_from_controller $leader_num}}
				
				
				{switch $instr
							(drum
								{set $slot_num 1}
							 )
							 (guitar
								{set $slot_num 0}
								{foreach_int $p 0 3
									{set $instr {game get_instrument_from_controller $p}}
									{if {&&
										{== $instr guitar}
										{!= $leader_num $p}}
										{do
											{if {< $p $leader_num}
												{set $slot_num 3}
											}
										}
										
									}
									
								}
										
							 )
							 (vocals
								{set $slot_num 2}
							 )
				}
				;we now have the $leader_num and $slot_num


                              
				{if {game can_local_player_join $leader_num}
							  
					{gamecfg set_player_slot_num $leader_num $slot_num}

					{{$this get_panel_from_slot_num $slot_num} set_game_leader $leader_num}
				
					;; add_local_player will fire off a msg when ready
					{session_mgr add_sink {$this get_panel_from_slot_num $slot_num} new_local_player}
					{session_mgr add_local_player
						$leader_num
						{gamecfg
							get_controller_type_from_controller
							$leader_num
						}
					}
				}
				
			}
		}
		 
		 
                           
			

      #endif
	  ; /-------------------------------------------------------------------------------
	  
	  
      ;; update rich presence...
#ifdef HX_XBOX
      {presence_mgr set_assembling_band}
#endif
      
      ; tell the band_ui_sink not to worry about controller disconnects
      {band_ui_sink set post_matchmaking FALSE}

      ;MTC Took this out because it was confusing and irrelevant
      ; check if we need to bring up the first-timer panel
      ;{do ($p_profile {profile_mgr
      ;                 get_mapped_profile_from_player
      ;                  {gamecfg get leader_num}
      ;                })
      ;   {if {&& {gamemode get is_bwt}
      ;           $p_profile
      ;           {$p_profile is_first_band_create}}
      ;        {ui push_screen first_band_create_screen}
      ;   }
      ;}
		
		; REA - reset leader num so it can be picked up by the first player in
		{game set leader_num -1}
   )
	
   (TRANSITION_COMPLETE_MSG
      ; do this here, in case the session was busy when the
      ; joypad connect change message happened.
      {$this export_all verify_controller_types}

      {cond
         ({$this get signin_change_waiting}
            {$this set signin_change_waiting FALSE}
            {$this process_signin_change}
         )
         ({! {session is_busy}}
            {if {autoload_allowed}
               {autoload}
            }
         )
      }

      ; we update after the transition to avoid hitting the
      ; "is_forced_transition_active" flag if we were sent
      ; here after accepting an invite
      {$this export_all update}
   )

   (exit
      {$this set signin_change_waiting FALSE}

      {session_mgr remove_sink $this}
      {memcardmgr remove_sink $this save_load_all_complete_msg}
      {profile_mgr remove_sink $this profile_activated_msg}

      {practice_space_panel set_showing_callback ''}
#ifdef HX_XBOX
      {session_mgr cancel_find}
      {session set_invites_allowed FALSE}
#endif

      {game set joining_allowed FALSE}

      ;; update rich presence...
#ifdef HX_XBOX
      {presence_mgr set_prepare_to_rock}
#endif
      
      ; tell the band_ui_sink to worry about controller disconnects
      ; we're relying on an PRE matchmaking screens to reset the session
      {band_ui_sink set post_matchmaking TRUE}
      ; TODO band_ui_sink needs to deal with the possibility of 
      ; the session getting cleared/another error coming along, while showing
      ; the disconnected controller dialog
   )
   
   ;; MultiFocusPanel checks this before each ButtonDown msg is passed along
   (allow_input {! {session is_busy}})

   (session_busy_msg ($is_busy)
      {matchmaking_band_panel {if_else $is_busy show_waiting hide_waiting}}

      {if {! $is_busy}
         {$this export_all verify_controller_types}
         {$this export_all update}
      }
   )

   (wait_for_session
      {$this export_all update}
   )
   
   (session_ready_complete_msg
      ;; make sure any controller action that happened while
      ;;  we were waiting for the session is now delt with.
      {$this export_all verify_controller_types}
      {$this export_all update}
   )
   
   (session_disabled
      {$this export_all update}
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;
; Confirm no leader screen
{new UIScreen matchmaking_confirm_no_leader_screen
   (panels dialog_panel)
   (focus dialog_panel)
   
   (enter
      {dialog_panel set_yesno 
         {localize_token matchmaker_confirm_no_leader}
         yes.btn
      }
   )
   
   (SELECT_MSG
      {switch $component
         (yes.btn
            ;; if we are a band and finalized, then update_members
            ;;   (else create_band will do it for us)
            {if
               {&&
                  {tour performer}
                  #ifdef HX_XBOX
                  {{tour performer} is_finalized}
                  #endif
                  {{tour performer} is_local}
               }
                #ifdef HX_XBOX
               {{tour performer} update_members}
               #endif
            }
            ; BAND_MATCHMAKING_INIT_BWT  - REA
            {ui pop_screen {gamemode get post_matchmaking_screen}}
            ; this will get everyone to fill in NPCs with valid chars
            {session_mgr send_to_all (game load_all_chars) TRUE}
            {game load_all_chars}
         )
         (no.btn
            {ui pop_screen}
         )
      }
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; out of character confirmation screen
{new UIScreen mm_band_char_no_room_screen
   (panels dialog_panel)
   (focus dialog_panel)

   (enter
      {dialog_panel set_ok
         {sprintf {localize_token charcreator_no_more_chars_fmt}
            {profile_mgr get_max_chars_per_inst}
         }
      }
   )

   (SELECT_MSG
      {ui pop_screen}
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; out of bands confirmation screen
{new UIScreen mm_at_leader_limit_screen
   (panels dialog_panel)
   (focus dialog_panel)

   (char_name '')

   (set_char_name ($char_name)
      {mm_at_leader_limit_screen set char_name $char_name}
   )

   (enter
      {dialog_panel set_ok
         {sprintf {localize_token matchmaker_at_leader_limit_fmt}
            [char_name]
            {profile_mgr get_max_leaders_per_char}
         }
      }
   )

   (SELECT_MSG
      {ui pop_screen}
   )
}

{new UIScreen mm_at_band_limit_screen
   (panels dialog_panel)
   (focus dialog_panel)

   (char_name '')

   (set_char_name ($char_name)
      {mm_at_band_limit_screen set char_name $char_name}
   )

   (enter
      {dialog_panel set_ok
         {sprintf {localize_token matchmaker_at_band_limit_fmt}
            [char_name]
            {profile_mgr get_max_bands_per_char}
         }
      }
   )

   (SELECT_MSG
      {ui pop_screen}
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Need A Profile screen
{new UIScreen mm_band_signin_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS

   (enter
      {dialog_panel set_custom
         {localize mm_need_a_profile_tour_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt1.btn
      }
      
      MATCHMAKING_POPUP_ENTER
   )

   (SELECT_MSG
      {switch $component
         (opt1.btn
            {platform_mgr signin 4 0}
         )
         (opt2.btn
            {ui pop_screen}
         )
      }
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Need Net Enabled Profile screen
{new UIScreen mm_signin_net_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS

   (enter
      {dialog_panel set_custom
         {localize mm_need_a_profile_net_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_cancel}
         opt1.btn
      }
      
      MATCHMAKING_POPUP_ENTER
   )

   (SELECT_MSG
      {switch $component
         (opt1.btn
            {platform_mgr signin 4 1}
         )
         (opt2.btn
            {ui pop_screen}
         )
      }
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Need Net Guest's Owner screen
{new UIScreen mm_signin_guest_needs_owner_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (player_num -1)
   MATCHMAKING_POPUP_HANDLERS
   
   (enter
      {dialog_panel set_custom
         {localize mm_need_a_profile_band_guest_msg}
         {localize mm_need_a_profile_signin}
         {localize mm_need_a_profile_return}
         opt2.btn
      }

      MATCHMAKING_POPUP_ENTER
   )

   (SELECT_MSG
      {switch $component
         (opt1.btn
            {platform_mgr signin 4 {gamemode get online_play_required}}
         )
         (opt2.btn
            {ui pop_screen}
         )
      }
   )
}
