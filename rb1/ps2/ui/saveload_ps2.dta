
; memcard result constants located in:
;  system/src/os/memcard.h
;  system/run/config/macros.dta

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#define kSaveSignin (0)
#define kSaveSet (1)
#define kSaveDisable (2)
#define kSaveDelete (3)

#define kAutosaveTypePushPop (0)
#define kAutosaveTypePushPopGoto (1)
#define kAutosaveTypeGotoPop (2)
#define kAutosaveTypeGotoGoto (3)

#define kSaveFileSize (512)

;; global variables used by saveload stuff:

;; $save_load_mode
;; $saveload_player_num
;; $autosave_goto_screen
;; $autosave_goto_type    

{func manual_save_start ($player_num)
   {ps2_saveload_begin_async}

   {set $save_load_mode kManualSave}
   {set $saveload_player_num 0}
   {set $saveload_goto_type kMetaNextTypePushPop}

   {push_save_screen_no_overwrite}
}

{func manual_load_start ($player_num)
   {ps2_saveload_begin_async}

   {set $save_load_mode kManualLoad}
   {set $saveload_player_num 0}
   {set $saveload_goto_type kMetaNextTypePushPop}

   {if_else {profile_mgr has_unsaved_data $player_num}
      {ui push_screen manual_load_confirm_screen}
      ; else
      {ui push_screen manual_load_screen}
   }
}

{func ps2_autoload_start  ($goto_type $next_screen)
   ; Has autoload already completed? ($autoload_complete is only inside this block)
   {if {&& {! $saveload_ui_is_up} {! $autoload_complete}}
      {set $save_load_mode kAutoLoad}
      {set $saveload_goto_type $goto_type}
      {set $saveload_goto_screen $next_screen}

      {set $saveload_player_num 0}

      ;; We only attempt to autoload once at the start; afterwards, we rely on
      ;; what's in memory or manual loads. Since we also need to show a warning
      ;; once at the start, we do that, and let the warning continue onto the
      ;; actual load

      {ps2_saveload_begin_async}
      {set $autoload_complete TRUE}
      {ui push_screen auto_load_screen}
   }
}

;; Kick off an autosave flow
{func ps2_autosave_start ($goto_type $next_screen)
   {if {! $saveload_ui_is_up}
      {set $save_load_mode kAutoSave}
   
      {set $saveload_goto_screen $next_screen}
      {set $saveload_goto_type $goto_type}
   
      {if_else {&& {profile_mgr has_unsaved_data FALSE} {profile_mgr get_should_autosave}}
         {do
            {ps2_saveload_begin_async}

            {set $saveload_player_num 0}
            {switch $saveload_goto_type
               ((kMetaNextTypeGotoPop kMetaNextTypeGotoGoto kMetaNextTypeGotoPopGoto)
                  {goto_save_screen_with_overwrite}
               )
               ; default
               {push_save_screen_with_overwrite}
            }
         }
         ; else, move on to cleanup...
         {ps2_saveload_cleanup_and_shutdown}
      }
   }
}

;; Begin the saveload process (no networking on PS2 so it's much simpler)
{func ps2_saveload_begin_async
   {if $saveload_ui_is_up
      {fail "ps2_saveload_begin called, but $saveload_ui_is_up is already true\n"}
   }

   {set $progressive_scan_previous_setting {profile_mgr get_progressive_scan}}
   {set $saveload_ui_is_up TRUE}
}

;; This should be called whenever the saveload flow is done,
;;   regardless of what happened or if the saveload succeeded.
{func on_saveload_done ($state)
   {memcardmgr saveload_profile_complete $saveload_player_num $state}
   {ps2_saveload_cleanup_and_shutdown}
}

;; This is only called when all actions are finished
{func ps2_saveload_cleanup_and_shutdown
   {memcardmgr saveload_all_complete}

   ; If progressive scan is enabled, insert the warning message before exiting
   {if_else {&& 
                ; only happen if we're loading
                {|| {== $save_load_mode kManualLoad} {== $save_load_mode kAutoLoad}}
                ; and if progressive scan is enabled
                {profile_mgr get_progressive_scan} 
                ; and it's different than the previous setting
                {!= {profile_mgr get_progressive_scan} $progressive_scan_previous_setting}
            } 
      ;then
      {ui goto_screen progressive_scan_warning_screen}
      ;else
      {goto_next_save_screen}
   }
}

{func goto_next_save_screen
   {if_else $saveload_ui_is_up
      {do
         {switch $saveload_goto_type
            ((kMetaNextTypePushPopGoto kMetaNextTypeGotoPopGoto)
               {ui pop_screen $saveload_goto_screen}
            )
            (kMetaNextTypeGotoGoto
               {ui goto_screen $saveload_goto_screen}
            )
            ; default
            {ui pop_screen}
         }

         ;; clear ui_is_up state
         {set $saveload_ui_is_up FALSE}
      }
      ; else
      {do
         {switch $saveload_goto_type
            ((kMetaNextTypePushPopGoto kMetaNextTypeGotoGoto)
               {ui goto_screen $saveload_goto_screen}
            )
            (kMetaNextTypeGotoPopGoto
               {ui pop_screen $saveload_goto_screen}
            )
            (kMetaNextTypeGotoPop
               {ui pop_screen}
            )
            ; default, do nothing (nothing pushed, so nothing to pop)
         }
      }
   }
}

{func get_saveload_mode_screen
   {do 
      ($next_saveload_mode_screen '')
      {switch $save_load_mode
         ((kAutoSave kManualSave)
            {set $next_saveload_mode_screen save_screen}
         )
         (kAutoLoad
            {set $next_saveload_mode_screen auto_load_screen}
         )
         (kManualLoad
            {set $next_saveload_mode_screen manual_load_screen}
         )
         ; default
         {fail {sprintf "Invalid mode, $save_load_mode = %s" $save_load_mode} }
      }
      $next_saveload_mode_screen
   }
}


#define SAVE_HELPBAR
(
		{if {helpbar_dialog is_up}
			{helpbar_dialog set_config ('' helpbar_select)}
			{helpbar_dialog set_limit_to_player_num -1}
			}
			  {script_task kTaskUISeconds (delay 0.5)
			(script
				{if {helpbar_dialog is_up}
				 {helpbar_dialog set_config ('' helpbar_select)}
				 {helpbar_dialog set_limit_to_player_num -1}
				}
			)
		}


)

#define SAVE_HELPBAR_CONTINUE
(
   {helpbar reset_icons}
   {if {helpbar_dialog is_up}
      {helpbar_dialog set_config ('' helpbar_continue)}
      {helpbar_dialog set_limit_to_player_num -1}
   }
			  
   {script_task kTaskUISeconds (delay 0.5)
      (script
         {if {helpbar_dialog is_up}
            {helpbar_dialog set_config ('' helpbar_continue)}
            {helpbar_dialog set_limit_to_player_num -1}
         }
      )
   }
)

{new UIScreen progressive_scan_warning_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      SAVE_HELPBAR_CONTINUE      
      {dialog_panel set_yesno
         {localize_token mc_progressive_scan_warning}
         no.btn
      }
   )

   (SELECT_MSG
      {switch $component
         (yes.btn
            {ui goto_screen progressive_scan_intro_continue_screen}
         )
         (no.btn
            {profile_mgr set_progressive_scan FALSE}
            {goto_next_save_screen}
         )
      }
      kDataUnhandled
   )
}

{new UIScreen progressive_scan_intro_continue_screen
   (panels dialog_panel)
   (focus dialog_panel)

   (enter
      SAVE_HELPBAR_CONTINUE      
      {dialog_panel set_ok {localize_token progressive_scan_notice}}
      {dialog_panel set_title {localize_token progressive_scan_notice_title}}
   )
   
   (SELECT_MSG
      {ui goto_screen progressive_scan_intro_confirm_screen}
   )
}

{new UIScreen progressive_scan_intro_confirm_screen
   PROGRESSIVE_SCAN_CONFIRM_SCREEN

   ; called when the progressive scan timer ends
   (progressive_scan_choice
      {goto_next_save_screen}
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; AUTO LOAD

{new UIScreen auto_load_screen
   SAVELOAD_DIALOG_SCREEN

   (enter
      {$this setup_msg_localized {sprintf {localize_token mc_auto_load_looking} {memcardmgr get_memcard_slot_name}}} ;; "Looking for save data..."
      {$this set_title mc_title_checking}
      {memcardmgr select_device $saveload_player_num TRUE $this}
      {memcardmgr load_game $saveload_player_num} 
   )
   ;; load result messages...

   (MEMCARD_RESULT_MSG
      {switch $result
         ; If it's a different card they've swapped it at a menu before this
         ; was called - it can't be a different card the first time you get
         ; here.  It's irrelevant then, so try loading again.
         (kMCDifferentCard
            {memcardmgr load_game $saveload_player_num} 
         )
         (kMCCorrupt
            {ui goto_screen auto_load_corrupt_screen}
         )
         ((kMCFileNotFound kMCNotFormatted)
            {ui goto_screen auto_save_missing_data_screen}
         )
         (kMCNoCard
            {ui goto_screen auto_load_storage_missing_screen}
         )
         (kMCNoError
            {$this setup_msg mc_auto_load_complete}
            {$this set_title mc_title_loading}

            ;; Use this profile's options (TODO PS3 revisions???)
            {profile_mgr set_global_options_pad 0}

            {script_task kTaskUISeconds (delay 0.5)
               (script
                  {on_saveload_done kMetaSaveLoaded}
               )
            }
         )
         (kMCObsoleteVersion
            {ui goto_screen auto_load_obsolete_version_screen}
         )
         (kMCNewerVersion
            {ui goto_screen auto_load_newer_version_screen}
         )
;         (kMCNotFormatted
;            {ui goto_screen error_not_formatted_screen}
;         )
         (kMCNotEnoughSpace
            {ui goto_screen save_not_enough_space_screen}
         )
         ; default
         {ui goto_screen load_failed_screen}
      }
   )
}


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; AUTO LOAD/SAVE POPUP MESSAGES

;; "This game auto saves don't pull out memory cards watch out now!"
;; UNUSED NOW!
{new UIScreen autosave_warning
   SAVELOAD_DIALOG_SCREEN

;   (enter
;      {if_else [shown]
;         ; then
;         {ui goto_screen auto_load_start_screen}
;         ; else
;         {do
;            {set [shown] TRUE}
;            {$this setup_continue mc_auto_warning option1.btn}
;         }
;      }
;   )
;
;   (SELECT_START_MSG
;      {switch $component
;         (option1.btn
;            {ui goto_screen auto_load_screen}
;         )
;      }
;      kDataUnhandled
;   )
   
   (shown FALSE)
}

{new UIScreen manual_load_confirm_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
		SAVE_HELPBAR
		{$this setup_2btn_localized
         {sprintf {localize_token mc_manual_load_confirm_unsaved} {memcardmgr get_memcard_slot_name}}
         mc_button_yes
         mc_button_no
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn 
            {ui goto_screen manual_load_screen}
         )
         (option2.btn
            {on_saveload_done kMetaSaveUnchanged}
         )
         kDataUnhandled
      }
   )
}

{new UIScreen manual_load_screen
   SAVELOAD_DIALOG_SCREEN

   (enter
      {$this setup_msg_localized {sprintf {localize_token mc_auto_load_looking} {memcardmgr get_memcard_slot_name}}}
      {$this set_title mc_title_checking}
      {memcardmgr load_game $player_num}
   )

   (MEMCARD_RESULT_MSG
      {switch $result
         (kMCNoCard
            {ui goto_screen manual_load_no_card_screen}
         )
         ((kMCFileNotFound kMCNotEnoughSpace)
            {ui goto_screen manual_load_no_file_screen}
         )
         (kMCCorrupt
            {ui goto_screen manual_load_corrupt_screen}
         )
         (kMCDifferentCard
            {memcardmgr load_game $player_num}
         )
         (kMCNotFormatted
            {ui goto_screen manual_load_error_not_formatted_screen}
         )
         (kMCNoError
            {$this setup_msg mc_manual_load_complete}
            {$this set_title mc_title_loading}

            ;; Use this profile's options (TODO PS3 revisions???)
            {profile_mgr set_global_options_pad 0}

            {script_task kTaskUISeconds (delay 0.5)
               (script
                  {on_saveload_done kMetaSaveLoaded}
               )
            }
         )
         ; default
         {ui goto_screen load_failed_screen}
      }
   )
}

{new UIScreen manual_load_no_card_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
   
		SAVE_HELPBAR_CONTINUE
      {$this setup_continue_localized {sprintf {localize_token mc_manual_load_no_card} {memcardmgr get_memcard_slot_name}}}
      {$this set_title mc_title_loading}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {on_saveload_done kMetaSaveUnchanged}
         )
      }
      kDataUnhandled
   )
}

{new UIScreen manual_load_no_file_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
		SAVE_HELPBAR_CONTINUE
      {$this setup_continue_localized {sprintf {localize_token mc_manual_load_no_file} {memcardmgr get_memcard_slot_name} }}
      {$this set_title mc_title_loading}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {on_saveload_done kMetaSaveUnchanged}
         )
      }
      kDataUnhandled
   )
}
{new UIScreen manual_load_corrupt_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
		SAVE_HELPBAR_CONTINUE
      {$this setup_continue_localized {sprintf {localize_token mc_manual_load_corrupt} {memcardmgr get_memcard_slot_name} }}
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {on_saveload_done kMetaSaveUnchanged}
      kDataUnhandled
   )
}

;; "The memory card is corrupt!  Overwrite with a new save or continue without saving?"
{new UIScreen auto_load_corrupt_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
  SAVE_HELPBAR
      {$this setup_2btn_localized
         {sprintf {localize_token mc_auto_load_corrupt} {memcardmgr get_memcard_slot_name} kSaveFileSize} 
         mc_button_yes
         mc_button_no
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {goto_save_screen_with_overwrite}
         )
         (option2.btn
            {ui goto_screen auto_load_autosave_caution}
         )
      }
      kDataUnhandled
   )
}

;; "You have an old save game!" <-- the player should *never* see this!
{new UIScreen auto_load_obsolete_version_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
	SAVE_HELPBAR
      {$this setup_2btn
         mc_auto_load_obsolete_version
         mc_button_overwrite
         mc_button_continue_no_save
         opt1
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {goto_save_screen_with_overwrite}
         )
         (option2.btn
            {on_saveload_done kSaveDisable}
         )
      }
      kDataUnhandled
   )
}  

{new UIScreen manual_load_error_not_formatted_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
      SAVE_HELPBAR
      {$this setup_continue_localized {sprintf {localize_token mc_manual_load_unformatted} {memcardmgr get_memcard_slot_name}}}
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {on_saveload_done kMetaSaveUnchanged}
   )
}
   
{new UIScreen error_not_formatted_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
      SAVE_HELPBAR
      {$this setup_2btn_localized
         {sprintf {localize_token mc_load_unformatted} {memcardmgr get_memcard_slot_name}}
         ; buttons
         mc_button_yes
         mc_button_no
         ; default
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen formatting_screen}
         )
         (option2.btn
            {if_else {== $save_load_mode kManualLoad}
               {on_saveload_done kMetaSaveUnchanged}
               ;
               {ui goto_screen auto_load_autosave_caution}
            }
         )
      }
   )
}

{new UIScreen auto_load_autosave_caution
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
 SAVE_HELPBAR
      {$this setup_2btn
         mc_save_autosave_caution
         ;
         mc_button_yes
         mc_button_no
         ;
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen disable_autosave_screen}
         )
         (option2.btn
            {ui goto_screen {get_saveload_mode_screen}}
         )
      }
   )
}

{new UIScreen auto_save_different_card_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
  SAVE_HELPBAR
      {$this setup_2btn_localized 
         {sprintf {localize_token mc_save_different_card} {memcardmgr get_memcard_slot_name} {memcardmgr get_memcard_slot_name}}
         mc_button_yes
         mc_button_no
         ;
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {goto_save_screen_no_overwrite}
         )
         (option2.btn
            {ui goto_screen auto_load_autosave_caution}
         )
      }
   )   
}

{new UIScreen formatting_screen
   SAVELOAD_DIALOG_SCREEN

   (enter
      {$this setup_msg_localized {sprintf {localize_token mc_load_formatting} {memcardmgr get_memcard_slot_name}}}
      {$this set_title mc_title_formatting}
      {memcardmgr format $saveload_player_num}
   )

   (MEMCARD_RESULT_MSG
      {switch $result
         ; The card reported incorrectly that it was unformatted - we need to try loading again
         ; or the card was formatted successfully
         ; or the card has changed since before it checked for formatness
         (kMCAlreadyFormatted
            {ui goto_screen format_already_formatted_screen}
         )
         (kMCDifferentCard
            {ui goto_screen format_different_card_screen}
         )
         (kMCNoError
            ; Automatically make a save file with every save mode except manual load
            {switch $save_load_mode
               ((kManualSave kAutoSave kAutoLoad)
                  {goto_save_screen_no_overwrite}
               )
               (kManualLoad
                  {$this setup_msg_localized {localize_token mc_format_complete}}
                  {script_task kTaskUISeconds (delay 1)
                     (script
                        {ui goto_screen manual_load_no_file_screen}
                     )
                  }
               )
               ; default
               {fail {sprintf "Invalid save load mode specified - %s" $save_load_mode}}
            }
         )
         (kMCNoCard
            {ui goto_screen format_missing_card_screen}
         )
         ; else
         {ui goto_screen format_generic_error_screen}
      }
   )
}

; If the format is "YES" but the card was swapped before pressing yes, this will be shown.
{new UIScreen format_different_card_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
  SAVE_HELPBAR_CONTINUE
      {$this setup_continue_localized {sprintf {localize_token mc_format_error_different_card} {memcardmgr get_memcard_slot_name}}}
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {ui goto_screen {get_saveload_mode_screen}}
   )
}

; If the card is unformatted when checking, then they take it to another PS2 and format it, and bring it back, it will show this message.
{new UIScreen format_already_formatted_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
  SAVE_HELPBAR_CONTINUE
      {$this setup_continue_localized {sprintf {localize_token mc_format_error_already_formatted} {memcardmgr get_memcard_slot_name}}}
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {ui goto_screen {get_saveload_mode_screen}}
   )
}

; ERROR When the card is removed before or during formatting.
{new UIScreen format_missing_card_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
   SAVE_HELPBAR
      {$this setup_2btn_localized
         {sprintf {localize_token mc_format_error_missing_card} {memcardmgr get_memcard_slot_name}}
         ; buttons
         mc_button_retry
         mc_button_cancel
         ; 
         opt1
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen formatting_screen}
         )
         (option2.btn
            {ui goto_screen {get_saveload_mode_screen}}
         )
      }
   )
}

; ERROR when an unknown error occurs.
{new UIScreen format_generic_error_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
  SAVE_HELPBAR
      {$this setup_2btn_localized
         {sprintf {localize_token mc_format_error_unknown} {memcardmgr get_memcard_slot_name}}
         ; buttons
         mc_button_retry
         mc_button_cancel
         ; 
         opt1
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen auto_load_autosave_caution}
         )
         (option2.btn
            {ui goto_screen {get_saveload_mode_screen}}
         )
      }
   )
}

;; "Your save game is newer than the one we can handle!" <-- the player should *never* see this!
{new UIScreen auto_load_newer_version_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
   SAVE_HELPBAR
      {$this setup_3btn
         mc_auto_load_newer_version
         mc_button_overwrite
         mc_button_continue_no_save
         '' ; TODO
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {goto_save_screen_with_overwrite}
         )
         (option2.btn
            {on_saveload_done kMetaSaveError}
         )
      }
      kDataUnhandled
   )
}

;; Loading failed screen
{new UIScreen load_failed_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
  SAVE_HELPBAR_CONTINUE
      {$this setup_continue mc_load_failed}
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {on_saveload_done kMetaSaveError}
         )
      }
      kDataUnhandled
   )
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SAVE 

{new UIScreen save_screen
   SAVELOAD_DIALOG_SCREEN
   
   ; public properties

   (overwrite 0)

   ; private properties 

   (enter_time 0.0)
   (save_time 0.0)
   (done_saving FALSE)
   (done_polling FALSE)
   (long FALSE)
   
   (enter
		{if {helpbar is_up}
			{helpbar hide_helpbar}
		}
      {set [enter_time] {taskmgr ui_seconds}}
      {set [save_time] 0.0}
      {set [done_saving] FALSE}
      {set [done_polling] FALSE}

      {$this setup_msg_localized {sprintf {localize_token mc_save} {memcardmgr get_memcard_slot_name}}}
      {$this set_title mc_title_saving}

      {memcardmgr save_game $saveload_player_num [overwrite]}
   )
   (exit 
		{if {helpbar is_up}
			{helpbar unhide_helpbar}
		}
   )

   (MEMCARD_RESULT_MSG
      {switch $result
         (kMCDifferentCard
            {set [done_polling] TRUE}
            {ui goto_screen auto_save_different_card_screen}
         )

         ; no error
         (kMCNoError
            {set [done_saving] TRUE}
            {set [save_time] {taskmgr ui_seconds}}
            {ui goto_screen save_complete_screen}
         )
         
         ; possible errors
         (kMCFileExists
            {set [done_polling] TRUE}
            {ui goto_screen save_confirm_overwrite_screen}
         )

         ; definite errors
         (kMCNotEnoughSpace
            {set [done_polling] TRUE}
            {ui goto_screen save_not_enough_space_screen}
         )

         (kMCNoCard
            {set [done_polling] TRUE}
            {ui goto_screen auto_save_storage_missing_screen}
         )

         (kMCNotFormatted
            {ui goto_screen error_not_formatted_screen}
         )

         ; default - all other errors (kMCReadWriteFailed)
         {set [done_polling] TRUE}
         {ui goto_screen save_failed_screen}
      }
   )
   
  
}

{new UIScreen save_complete_screen
   SAVELOAD_DIALOG_SCREEN

   (enter
		{if {helpbar is_up}
			{helpbar hide_helpbar}
		}
        
      {$this setup_msg mc_save_complete} ;; "Save complete"
      {$this set_title mc_title_saving}
   )
   
   (TRANSITION_COMPLETE_MSG
      {script_task kTaskUISeconds (delay 0.5)
         (script
			{do
				{if {helpbar is_up}
					{helpbar unhide_helpbar}
				}
				{on_saveload_done kMetaSaveLoaded}
			}
         )
      } 
   )
    (exit 
		{if {helpbar is_up}
			{helpbar unhide_helpbar}
		}
   
   )
   
}

{new UIScreen disable_autosave_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
	SAVE_HELPBAR
		{if {helpbar is_up}
			{helpbar hide_helpbar}
		}
         {$this setup_2btn
         ; Message
         mc_save_autoload_disable
         ; Buttons
         mc_button_yes
         mc_button_no
         ; Default
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn   
            {profile_mgr set_autosave_enabled FALSE}
            {on_saveload_done kMetaSaveError} ; disable autosave
         )
         (option2.btn
            {profile_mgr set_autosave_enabled TRUE}
            {on_saveload_done kMetaSaveLoaded} ; autosave is enabled
         )
      }
   )
   
   (exit 
		{helpbar unhide_helpbar}
   )
}

{new UIScreen auto_save_missing_data_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
	SAVE_HELPBAR
	
      {$this setup_2btn_localized
         ; Message
         {sprintf {localize_token mc_save_missing_data} {memcardmgr get_memcard_slot_name} kSaveFileSize}
         ; Buttons
         mc_button_yes
         mc_button_no
         ; Default
         opt1
      }
      {$this set_title mc_title_saving}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen save_screen}
         )
         (option2.btn
            {ui goto_screen auto_load_autosave_caution}
         )
      }
   )
}

; BMB: Should be safe to remove, testing. 
;{new UIScreen auto_save_missing_data_screen_old
;   SAVELOAD_DIALOG_SCREEN
;
;   (enter
;      {$this setup_3btn
;         ; Message
;         mc_save_missing_data
;         ; Buttons
;         mc_button_retry
;         mc_button_save_continue
;         mc_button_continue_no_save
;         ; Default
;         opt1
;      }
;   )
;
;   (SELECT_START_MSG
;      {switch $component
;         (option1.btn
;            {ui goto_screen auto_load_screen}
;         )
;         (option2.btn
;            {ui goto_screen save_screen}
;         )
;         (option3.btn
;            {on_saveload_done kSaveDisable}
;         )
;      }
;      kDataUnhandled
;   )
;}

;; BMB: Removable but I'm saving it in a version because it's useful to me.
;{func get_memcard_string1 ($token $word)
;   {do 
;      ($result '')
;      ($instr {sprintf {localize_token $token} {memcardmgr get_memcard_slot_name} $word})
;      {set $result $instr}
;      {if_else {has_substr $instr "@"}
;         {search_replace $instr "@" " " $result}
;         ; else
;         {set $result $instr}
;      }
;      $result
;   }
;}

{new UIScreen auto_save_storage_missing_screen
   SAVELOAD_DIALOG_SCREEN_HELP
   
   (enter
      SAVE_HELPBAR
      {$this setup_2btn_localized
         ; Message
          {sprintf {localize_token mc_save_missing_storage} {memcardmgr get_memcard_slot_name} kSaveFileSize}
         ; Buttons
         mc_button_yes
         mc_button_no
         ; Default
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen disable_autosave_screen}
         )
         (option2.btn
            {ui goto_screen save_screen}
         )
      }
      kDataUnhandled
   )
}
   
{new UIScreen auto_load_storage_missing_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
		SAVE_HELPBAR
      {$this setup_2btn_localized
         ; Message
          {sprintf {localize_token mc_save_missing_storage} {memcardmgr get_memcard_slot_name} kSaveFileSize}
         ; Buttons
         mc_button_yes
         mc_button_no
         ; Default
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen disable_autosave_screen}
         )
         (option2.btn
            {ui goto_screen auto_load_screen}
         )
      }
      kDataUnhandled
   )
}

{new UIScreen save_confirm_overwrite_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
	  SAVE_HELPBAR
		{if {helpbar is_up}
			{helpbar hide_helpbar}
		}
   
      {$this setup_2btn
         ; Message
         mc_save_confirm_overwrite
         ; Buttons
         mc_button_yes
         mc_button_no
         ; Default
         opt2
      }
      {$this set_title mc_title_caution}
   )
   
   (exit
	{helpbar unhide_helpbar}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {goto_save_screen_with_overwrite}
         )
         (option2.btn
            ; There is really no good way to exit here so send them to the 
            ; autosave caution screen.
            {ui goto_screen auto_load_autosave_caution}
         )
      }
      kDataUnhandled
   )
}

{new UIScreen save_not_enough_space_screen
   SAVELOAD_DIALOG_SCREEN_HELP


   (enter
   SAVE_HELPBAR
      {$this setup_2btn_localized
         ; Message
         {sprintf {localize_token mc_save_not_enough_space} {memcardmgr get_memcard_slot_name} {memcardmgr get_memcard_slot_name} kSaveFileSize}
         ; Buttons
         mc_button_yes
         mc_button_no
         ; Default
         opt2
      }

      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
            {ui goto_screen auto_load_autosave_caution}
         )
         (option2.btn
            {ui goto_screen {get_saveload_mode_screen}}
         )
      }
      kDataUnhandled
   )
}

{new UIScreen save_failed_screen
   SAVELOAD_DIALOG_SCREEN_HELP

   (enter
		{if {helpbar is_up}
			{helpbar unhide_helpbar}
		}
		SAVE_HELPBAR
	  {$this setup_3btn_localized
         {sprintf {localize_token mc_save_failed} {memcardmgr get_memcard_slot_name}}
         mc_button_yes
         mc_button_no
         '' ; TODO
         opt2
      }
      {$this set_title mc_title_caution}
   )

   (SELECT_START_MSG
      {switch $component
         (option1.btn
         	{ui goto_screen disable_autosave_screen}
         )
         (option2.btn
            {ui goto_screen save_screen}
         )
      }
      kDataUnhandled
   )
}

; BMB: Testing removing this
{new UIScreen delete_saves_screen
   SAVELOAD_DIALOG_SCREEN

   (enter
      {rnd set_app_draw FALSE}
;      {memcardmgr delete_saves [player_num]}
      {memcardmgr delete_saves $saveload_player_num}
   )

   (MEMCARD_RESULT_MSG
      {rnd set_app_draw TRUE}
      {ui goto_screen save_screen}
   )
}


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;  HELPER FUNCTIONS

;; Save without an overwrite
{func goto_save_screen_no_overwrite
   {save_screen set overwrite FALSE}
   {ui goto_screen save_screen}
}

;; Go to the save screen and overwrite the existing file
{func goto_save_screen_with_overwrite
   {save_screen set overwrite TRUE}
   {ui goto_screen save_screen}
}

;; Push the screen instead of shifting to the screen and overwrite files
{func push_save_screen_with_overwrite
   {save_screen set overwrite TRUE}
   {ui push_screen save_screen}
}

{func push_save_screen_no_overwrite
   {save_screen set overwrite FALSE}
   {ui push_screen save_screen}
}






