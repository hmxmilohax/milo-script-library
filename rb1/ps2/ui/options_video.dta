{new UIPanel options_video_panel
#ifdef HX_XBOX
   (file "options_video_ps2.milo")
#else
   (file "options_video_ps2.milo")
#endif
   (focus progressive_scan.btn)

   (enter
      {$this update_options}
   )

   (SELECT_MSG
      {switch $component
         (progressive_scan.btn
            ; If progressive scan is OFF
            ;   push the warning screen
            ;   push the yes/no confirm screen
            ;     if yes, pop all
            ;     if no, revert to unprogressive
            ; If progressive scan is ON
            ;   turn off progressive scan
            {if_else {profile_mgr get_progressive_scan}
               {do
                  {profile_mgr set_progressive_scan FALSE}
                  {$this update_options}
               }
               ;else
               {ui push_screen progressive_scan_continue_screen}
            }
		         )
         (widescreen.btn
            {do
               ($new_state {! {profile_mgr get_widescreen}})
               {profile_mgr set_widescreen $new_state}
               {$this update_from_profile {$this find widescreen_check.mesh}}
               {$this update_check_help $component}
			  {helpbar refresh_display}
            }
         )
      }
   )
   
   (FOCUS_MSG
	 {switch $new_focus
         (widescreen.btn
		 ; {helpbar set_config (Back Select)}
            ;{if_else {profile_mgr get_widescreen}
            ;   {helpbar set_config (Back Uncheck)}
            ;   {helpbar set_config (Back Check)}
            ;}
         )
         (progressive_scan.btn
			;{helpbar set_config (Back Select)}
            ;{if_else {profile_mgr get_progressive_scan}
            ;   {helpbar set_config (Back Uncheck)}
            ;   {helpbar set_config (Back Check)}
            ;}
         )
      }
	)


   (update_options
      {$this update_from_profile {$this find widescreen_check.mesh}}
      {$this update_from_profile {$this find progressive_scan_check.mesh}}
   )

   (update_from_profile ($component)
      {switch $component
         (widescreen_check.mesh
            {{$this find widescreen_check.mesh} set_showing {profile_mgr get_widescreen}}
         )
         (progressive_scan_check.mesh
            {{$this find progressive_scan_check.mesh} set_showing {profile_mgr get_progressive_scan}}
         )
      }
   )

   (update_check_help ($component)
    ;  {switch $component
     ;    (widescreen.btn
		 ;{helpbar set_config (Back Select)}
            ;{if_else {profile_mgr get_widescreen}
            ;   {helpbar set_config (Back Uncheck)}
            ;   {helpbar set_config (Back Check)}
            ;}
       ;  )
      ;   (progressive_scan.btn
		 ;{helpbar set_config (Back Select)}
          ;  {if_else {profile_mgr get_progressive_scan}
          ;     {helpbar set_config (Back Uncheck)}
          ;     {helpbar set_config (Back Check)}
          ;  }
        ; )
      ;}
   )
}


{new UIScreen progressive_scan_continue_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
;;      {dialog_panel set_custom {localize_token progressive_scan_notice} {localize_token mc_button_continue} {localize_token mc_button_cancel} opt1.btn}
      {dialog_panel set_ok {localize_token progressive_scan_notice}}
      {dialog_panel set_title {localize_token progressive_scan_notice_title}}
   )
   (SELECT_MSG
      {ui goto_screen progressive_scan_confirm_screen}
   )
}

; BMB: To use this, make a panel that extends this and a function called "progressive_scan_timeout" that controls what happens when the user makes a choice or the timer runs out. 
#define PROGRESSIVE_SCAN_CONFIRM_SCREEN
(
   (panels dialog_panel helpbar_dialog)
   (focus dialog_panel)

   ; The count of the timer
   (timer_count 0)
   ; is the timer running?
   (timer_running TRUE)

   (reset_timer
      {set [timer_running] TRUE}
      {set [timer_count] 0}
   )

   (enter
		{helpbar_dialog set_config ('' Select)}
      {profile_mgr set_progressive_scan TRUE}
      {dialog_panel set_yesno {localize_token progressive_scan_confirm} no.btn}
   
      {$this reset_timer}
   )

   ; Every tick capture the amount of time since screen entry and disable
   ; progressive if it his the limit.
   (poll
      {if [timer_running]
         {+= [timer_count] {taskmgr ui_delta_seconds}}
         {if {>= [timer_count] kProgressiveScanConfirmTime}
            {set [timer_running] FALSE}
            {profile_mgr set_progressive_scan FALSE}
            {$this progressive_scan_choice}
         } 
      }
   )

   ; When one of the options have been selected handle it
   (SELECT_MSG
      {switch $component
         (yes.btn
            kDataUnhandled
         )
         (no.btn
            {profile_mgr set_progressive_scan FALSE}
         )
      }
      {$this progressive_scan_choice}
   )
)

{new UIScreen progressive_scan_confirm_screen
   PROGRESSIVE_SCAN_CONFIRM_SCREEN
   
   ; called when the progressive scan timer ends
   (progressive_scan_choice
      {options_video_panel update_options}
      {ui pop_screen}
   )
}

{new UIScreen options_video_screen
   (panels main_lower3rd_panel meta movie_panel options_video_panel helpbar)
   (focus options_video_panel)
   (back options_screen)
   (helpbar (Back Select))
}
