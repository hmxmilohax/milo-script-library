
#define GUITAR_SET
(
   (0
      (normal       gem_green.wid)
      (normal_hopo  gem_green_hopo.wid)
      (star         star_gem.wid)
      (star_hopo    star_hopo.wid)
      (unison       star_gem.wid)
      (unison_hopo  star_hopo.wid)
      (miss         gem_miss.wid)
      (miss_hopo    gem_miss_hopo.wid)
      (mash         gem_mash0.wid)
   )
   (1
      (normal       gem_red.wid)
      (normal_hopo  gem_red_hopo.wid)
      (star         star_gem.wid)
      (star_hopo    star_hopo.wid)
      (unison       star_gem.wid)
      (unison_hopo  star_hopo.wid)
      (miss         gem_miss.wid)
      (miss_hopo    gem_miss_hopo.wid)
      (mash         gem_mash1.wid)
   )
   (2
      (normal       gem_yellow.wid)
      (normal_hopo  gem_yellow_hopo.wid)
      (star         star_gem.wid)
      (star_hopo    star_hopo.wid)
      (unison       star_gem.wid)
      (unison_hopo  star_hopo.wid)
      (miss         gem_miss.wid)
      (miss_hopo    gem_miss_hopo.wid)
      (mash         gem_mash2.wid)
   )
   (3
      (normal       gem_blue.wid)
      (normal_hopo  gem_blue_hopo.wid)
      (star         star_gem.wid)
      (star_hopo    star_hopo.wid)
      (unison       star_gem.wid)
      (unison_hopo  star_hopo.wid)
      (miss         gem_miss.wid)
      (miss_hopo    gem_miss_hopo.wid)
      (mash         gem_mash3.wid)
   )
   (4
      (normal       gem_orange.wid)
      (normal_hopo  gem_orange_hopo.wid)
      (star         star_gem.wid)
      (star_hopo    star_hopo.wid)
      (unison_hopo  star_hopo.wid)
      (unison       star_gem.wid)
      (miss         gem_miss.wid)
      (miss_hopo    gem_miss_hopo.wid)
      (mash         gem_mash4.wid)
   )
)

#define DRUM_SET
(
   (0
      (normal    gem_kick.wid)
      (star      star_kick.wid)
      (unison    star_kick.wid)
      (miss      kick_miss.wid)
   )
   (1
      (normal    drum_red.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash1.wid)
   )
   (2
      (normal    drum_yellow.wid)
      (tom       drum_yellow.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash2.wid)
   )
   (3
      (normal    drum_blue.wid)
      (tom       drum_blue.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash3.wid)
   )
   (4
      (normal    drum_green.wid)
      (tom       drum_green.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash4.wid)
      (crash     dynamic_crash_gem.wid)
   )
)

#define DRUM_LEFTY
(
   (0
      (normal    gem_kick.wid)
      (star      star_kick.wid)
      (unison    star_kick.wid)
      (miss      kick_miss.wid)
   )
   (1
      (normal    drum_green.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash4.wid)
   )
   (2
      (normal    drum_blue.wid)
      (tom       drum_blue.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash3.wid)
   )
   (3
      (normal    drum_yellow.wid)
      (tom       drum_yellow.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash2.wid)
   )
   (4
      (normal    drum_red.wid)
      (tom       drum_red.wid)
      (star      drum_star.wid)
      (unison    drum_star.wid)
      (miss      drum_miss.wid)
      (mash      drum_mash1.wid)
      (crash     dynamic_crash_gem_lefty.wid)
   )
)

;;;;;;;

(use_char_tex TRUE) ; use the char's texture on the surface?

(slot_colors green red yellow blue orange) ; in slot order

(gem
   (fps 30)
   (mat_formats
      (gem       gem_%s)
      (tail      tail_%s)
      (tail_glow tail_glow_%s)
      (star      gem_starpower_%s)
      (dot       dot_top_hopo2_%s)
   )
   (tail_glow_width 1.7)        ; width of the tail glow
   (tail_glow_tight_width 2)  ; I don't know what this is for
   (sparkle_len 1000)            ;; first gem sparkle animation   
   
   (tail_pulse_rate 64) ; speed at which a tail section will go down the track
                        ; higher = faster
   (tail_pulse_smoothing .5)  ; smoothing factor for tail pulse (range 0 1)
                              ; higher = jaggy & responsive
                              ; lower = smooth & laggy
   (tail_offset_x 0)  ; offset of the tails from the center
   
   (tail_min_alpha .5)  ; minimum alpha when whammy = 0
   (tail_max_alpha 1)   ; maximum alpha when whammy = 1
   (tail_alpha_smoothing .25)  ; smoothing factor for tail alpha
                              ; higher = responsive
                              ; lower = smooth & laggy
   
   (tail_fade_distance 20)
   
   (tail_min_freq 15)      ; frequency of the tail at whammy = 0
   (tail_max_freq 4.5)      ; frequency of the tail at whammy = 1
   
   (tail_min_amp .25)       ; amplitude of the tail at whammy = 0
   (tail_max_amp 1.5)      ; amplitude of the tail at whammy = 1
   
   ;; the parts that can vary with each gem type
   (parts
      (
         (gem        (type kMeshGem))     ; required
         (glow       (type kMeshGemGlow)) ; required
         (top        (type kMeshTop))     ; required
         (miss       (type kMeshGemMiss) (default kMeshGem))
         (hopo       (type kMeshHopoTop) (default kMeshTop))
         (star       (type kMeshStar)    (default kMeshGem))
         (top_star   (type kMeshStarTop) (default kMeshTop))
         (gem_bonus  (type kMeshBonus)   (default kMeshGem))
         (gem_bonus2 (type kMeshBonus2)  (default kMeshGem))
      )
   )
   
   (gems 
      (guitar  GUITAR_SET)
      (bass    GUITAR_SET)
      (drum    DRUM_SET)
      (drum_lefty DRUM_LEFTY)
   )
      
   ;; just so we know where to place gems with drum lefty tracks
   (widths ; default is 1
      (kick_line4 4)
      (snare_red3 3)
      (snare_orange3 3)
   )
)

; Clip tails at the now bar so it's less visible
(nowbar_tail_clip 1.5) 
