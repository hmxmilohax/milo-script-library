#include macros.dta

(system
   ; (ng TRUE)
)

(objects
   #include objects.dta
)

(ui
   (color_presets
      #include ../ui/color_presets.dta
   )
)


(rnd
   (overlays
      ;;(render_test (lines 1) (showing FALSE) (color 0 0 0 0.6))
   )
   (title "Band Systest")
   (force_hd TRUE)
)

(quick_cheats
   #include cheats.dta
)

(systest
   (venue_test
      (venues
         ("world/arena/arena.milo" (cams TRUE) (chars TRUE))
         ("world/theater/theater.milo" (cams TRUE) (chars TRUE))
         ("world/big_club/big_club.milo" (cams TRUE) (chars TRUE))
         ("world/small_club/small_club.milo" (cams TRUE) (chars TRUE))
         ("world/arena/arena_01/arena_01.milo" (cams FALSE) (chars TRUE))
         ("world/arena/arena_02/arena_02.milo" (cams FALSE) (chars TRUE))
         ("world/arena/arena_03/arena_03.milo" (cams FALSE) (chars TRUE))
         ("world/arena/arena_04/arena_04.milo" (cams FALSE) (chars TRUE))
         ("world/arena/arena_05/arena_05.milo" (cams FALSE) (chars TRUE))
         ("world/arena/arena_06/arena_06.milo" (cams FALSE) (chars TRUE))
         ("world/arena/arena_07/arena_07.milo" (cams FALSE) (chars TRUE))
         ("world/arena/arena_08/arena_08.milo" (cams TRUE) (chars TRUE))
         ("world/small_club/small_club_01/small_club_01.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_02/small_club_02.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_03/small_club_03.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_04/small_club_04.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_05/small_club_05.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_06/small_club_06.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_07/small_club_07.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_08/small_club_08.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_09/small_club_09.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_10/small_club_10.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_11/small_club_11.milo" (cams FALSE) (chars TRUE))
         ("world/small_club/small_club_12/small_club_12.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_01/theater_01.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_02/theater_02.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_03/theater_03.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_04/theater_04.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_05/theater_05.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_06/theater_06.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_07/theater_07.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_08/theater_08.milo" (cams FALSE) (chars TRUE))
         ("world/theater/theater_09/theater_09.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_01/big_club_01.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_02/big_club_02.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_03/big_club_03.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_04/big_club_04.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_05/big_club_05.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_06/big_club_06.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_07/big_club_07.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_08/big_club_08.milo" (cams TRUE) (chars TRUE))
         ("world/big_club/big_club_09/big_club_09.milo" (cams FALSE) (chars TRUE)) 
         ("world/big_club/big_club_10/big_club_10.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_11/big_club_11.milo" (cams FALSE) (chars TRUE))
         ("world/big_club/big_club_12/big_club_12.milo" (cams FALSE) (chars TRUE))
      )
      
      (extra_shot_columns)  ; TODO
      (extra_venue_columns) ; TODO
      
      (init
         {func init_venue ($dir $is_multiplayer)
            ;TODO
         }
         {func get_venue_column_value ($dir $column)
            ;TODO
         }
         {func get_shot_column_value ($shot $column)
            ;TODO
         }
      )
           
      (set_camera ($shot)        
         {do 
            ($name {$shot name})
            ($mode
               {cond 
                  ({has_substr $name "coop_"} coop)
                  ({has_substr $name "h2hd_"} h2h_drum)
                  ({has_substr $name "h2hg_"} h2h_guitar)
                  ({has_substr $name "h2hv_"} h2h_vocals)
               }
            )
            {if {!= $mode $game.play_mode}
               {set $game.play_mode $mode}
               {$world sync_mode}
            }
         }
      )
      
      ; replace chars/outfits with most expensive ones generated by char test
      (replacements
         ; we delete head-to-head characters by giving them empty proxy files
         (player_guitar1 "")
         (player_bass1   "")
         (player_vocals1 "")
         (player_drum1   "")
      )
   )
   (char_test
      ; used to name categories correctly,
      ; and dump a files of most expensive chars, with these names/instruments
      (tracks
         (guitar 
            (type guitar)
            (instrument guitar)
         )
         (bass   
            (type guitar)
            (instrument bass)
         )
         (drum   
            (type drum)
            (instrument drum)
         )
         (vocals 
            (type vocal)
            (instrument mic)
         )
      )
   
      (chars
         ; we test instruments with the male chars, no need to test with female
         ("char/male/male_guitar.milo" 
            (cats 
               hair heads facehair glasses torso hands 
               legs feet wrist rings earrings guitar bass
            )
            (category guitarist)
         )
         ("char/male/male_vocals.milo" 
            (cats mic)
            (category singer)            
         )
         ("char/male/male_drum.milo" 
            (cats drum)
            (category drummer)            
         )
         ("char/female/female_guitar.milo"
            (cats hair heads torso hands legs feet wrist glasses rings earrings)
            (category guitarist)
         )
         ("char/female/female_vocals.milo"
            (category singer)            
         )
         ("char/female/female_drum.milo"
            (category drummer)
         )
         ("char/crowd/crowd_female01.milo"
            (category crowd)
         )
         ("char/crowd/crowd_female02.milo"
            (category crowd)
         )
         ("char/crowd/crowd_female03.milo"
            (category crowd)
         )
         ("char/crowd/crowd_female04.milo"
            (category crowd)
         )
         ("char/crowd/crowd_female05.milo"
            (category crowd)
         )
         ("char/crowd/crowd_female06.milo"
            (category crowd)
         )
         ("char/crowd/crowd_female07.milo"
            (category crowd)
         )
         ("char/crowd/crowd_female08.milo"
            (category crowd)
         )         
         ("char/crowd/crowd_male01.milo"
            (category crowd)
         )
         ("char/crowd/crowd_male02.milo"
            (category crowd)
         )
         ("char/crowd/crowd_male03.milo"
            (category crowd)
         )
         ("char/crowd/crowd_male04.milo"
            (category crowd)
         )
         ("char/crowd/crowd_male05.milo"
            (category crowd)
         )
         ("char/crowd/crowd_male06.milo"
            (category crowd)
         )
         ("char/crowd/crowd_male07.milo"
            (category crowd)
         )
         ("char/crowd/crowd_male08.milo"
            (category crowd)
         )         
      )
      
      ; make expression
      (make_expression ($char)
         {if {$char exists expression.drv}
            {{$char find expression.drv} play_group normal}
         }
      )
      ; 
      ; TODO (songfile for_lip_sync)
   )
   
   ; For UI panel memory budget
   (mem_budget
      (files
         (preload
            ui/meta_loading.milo
            #ifdef HX_XBOX
            ui/dialog.milo
            ui/helpbar.milo
            ui/pause.milo
            ui/pause_controller.milo
            ui/pause_mics.milo
            ui/qp_endgame.milo
            #else
            ui/dialog_og.milo
            ui/helpbar_og.milo
            ui/pause_og.milo
            ui/pause_controller_og.milo
            ui/pause_mics_og.milo
            ui/qp_endgame_og.milo
            #endif            
            ui/lose.milo
            ui/tour_endgame.milo
            ui/network_busy_icon.milo
            ui/remote_member_available.milo
         )
         (loading
            ui/loading/ls_amsterdam1.milo
            ui/loading/ls_LA1.milo
            ui/loading/ls_stockholm01.milo
            ui/loading/ls_berlin1.milo
            ui/loading/ls_LA4.milo
            ui/loading/ls_nyc4.milo
            ui/loading/ls_chicago3.milo
            ui/loading/ls_sydney4.milo
            ui/loading/ls_london4.milo
            ui/loading/ls_stockholm3.milo
         )
         (misc
            ui/main.milo
            ui/main_lower3rd.milo
            ui/qp_selsong.milo
            #ifndef HX_XBOX
				ui/practice_space_og.milo
			#else
				ui/practice_space.milo
			#endif
            ui/stores/store.milo
            ui/world/tour_worldmap.milo
         )
         (patches
            patchcreator/stickers_sailor_jerry.milo
            patchcreator/tattoos_york_adorned.milo
            patchcreator/tattoos_paul_slifer.milo
            patchcreator/stickers_adam_suerte.milo
            patchcreator/tattoos_anchor_steam_tattoo_gallery.milo
            patchcreator/tattoos_flyrite_studios.milo
            patchcreator/stickers_dare_matheson.milo
            patchcreator/stickers_elliot_clapp.milo 
            patchcreator/stickers_eric_talbot.milo
            patchcreator/stickers_john_dee.milo
            patchcreator/stickers_matt_gilpin.milo
            patchcreator/stickers_matt_perlot.milo
            patchcreator/stickers_mister_reusch.milo
            patchcreator/stickers_shawn_witt.milo 
            patchcreator/stickers_letters_avant_garde.milo 
            patchcreator/stickers_generic_shapes_painterly.milo
            patchcreator/stickers_generic_shapes_thin_line.milo
            patchcreator/stickers_generic_shapes_thick_line.milo
            patchcreator/stickers_generic_shapes_sketchy.milo 
            patchcreator/stickers_generic_shapes_solid.milo 
            patchcreator/stickers_letters_fakir_01.milo
            patchcreator/stickers_david_battilana.milo
            patchcreator/stickers_eliot_min.milo
            patchcreator/stickers_kerry_roan.milo
            patchcreator/stickers_letters_bodoni.milo
            patchcreator/stickers_letters_chalet.milo
            patchcreator/stickers_mallika_sundaramurthy.milo
            patchcreator/stickers_noah_berkley.milo
            patchcreator/stickers_paul_lyons.milo
            patchcreator/stickers_reiko_murakami.milo
            patchcreator/stickers_ryan_lesser.milo
            patchcreator/tattoos_temple_tattoo.milo
         )
      )
   )
)

#merge ../../../system/run/config/systest.dta
