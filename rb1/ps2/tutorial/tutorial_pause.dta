;;;
;;; generic pause panel for the tutorials
;;;
{new UIPanel tutorials_pause_panel
   (file "tutorial_pause_og.milo")
   (enter
      {$this set_focus tut_pause_resume.btn}
   )
   (disable_next_button
      {tut_pause_next.btn set_state kDisabled}
   )
   (disable_prev_button
      {tut_pause_prev.btn set_state kDisabled}
   )
   (disable_restart_button
      {tut_pause_restart_lesson.btn set_state kDisabled}
   )
   (set_lesson_text
      {tut_pause_next.btn set_localized
         {localize {gamemode get next_lesson_text}}}
      {tut_pause_prev.btn set_localized
         {localize {gamemode get previous_lesson_text}}}
      {tut_pause_restart_lesson.btn set_localized
         {localize {gamemode get restart_lesson_text}}}
   )
}


;;;
;;; generic pause screen for the tutorials
;;;
{new UIScreen tutorials_pause_screen
   ;;
   ;; properties
   ;;
   (panels tutorials_pause_panel helpbar)
   (helpbar (helpbar_returntolesson helpbar_select))
   (focus tutorials_pause_panel)
   (allow_back FALSE)
   (animate_transition FALSE)


   ;;
   ;; constructor (pauses the game)
   ;;
   (pre_enter
      {set [is_quitting] FALSE}
      {tutorials_state_panel pause}
   )
   (enter
      {set [is_quitting] FALSE}
      {set [is_done] FALSE}
      {tutorials_pause_panel set_lesson_text}
      {if {!{tutorials_state_panel get can_inc_lesson}}
         {tutorials_pause_panel disable_next_button}
      }
      {if {!{tutorials_state_panel get can_dec_lesson}}
         {tutorials_pause_panel disable_prev_button}
      }
      {if {!{tutorials_state_panel get can_restart_lesson}}
         {tutorials_pause_panel disable_restart_button}
      }
   )
   

   ;;
   ;; destructor
   ;;
   (exit
      {if {! [is_quitting]}
         {tutorials_state_panel unpause}}
   )


   ;;
   ;; resumes the tutorial
   ;;
   (resume_tutorial
      {ui pop_screen}
   )


   ;;
   ;; restarts the tutorial
   ;;
   (restart_tutorial
      {set [is_quitting] TRUE}
		{tutorials_state_panel set_paused FALSE}
		{tutorials_state_panel set is_paused FALSE}
      {tutorials_state_panel reset_tutorial}
      {ui goto_screen tutorials_loading_screen};reset
   )


   ;;
   ;; quits the tutorial
   ;;
   (quit_tutorial
      {set [is_quitting] TRUE}
	  {tutorials_state_panel reset_tutorial}
      {gamemode set main_screen main_screen}
      {ui goto_screen {gamemode get quit_screen}}
   )

   
   ;;
   ;; restart the current lesson
   ;;
   (restart_lesson
      {tutorials_state_panel tutorial_inc 0}
      {ui pop_screen}
   )


   ;;
   ;; goes to next lesson in tutorial
   ;;
   (next_lesson
      {tutorials_state_panel tutorial_inc 1}
      {ui pop_screen}
   )


   ;;
   ;; goes to previous lesson in tutorial
   ;;
   (prev_lesson
      {tutorials_state_panel tutorial_dec 1}
      {ui pop_screen}
   )


   ;;
   ;; handler for selecting a menu item
   ;;
   (SELECT_MSG
      {if_else {&& {== $player_num {{gamemode get main_panel} get_tutorial_player}}
                   {! [is_done]}}
         {do
            {set [is_done] TRUE}            
            {switch $component
               (tut_pause_resume.btn
                  {script_task kTaskUISeconds (delay 0.8) (script {$this resume_tutorial})}
               )
               (tut_pause_restart.btn
                  {script_task kTaskUISeconds (delay 0.8) (script {$this restart_tutorial})}
               )
               (tut_pause_quit.btn
                  {script_task kTaskUISeconds (delay 0.8) (script {$this quit_tutorial})}
               )
               (tut_pause_restart_lesson.btn
                  {script_task kTaskUISeconds (delay 0.8) (script {$this restart_lesson})}
               )
               (tut_pause_next.btn
                  {script_task kTaskUISeconds (delay 0.8) (script {$this next_lesson})}
               )
               (tut_pause_prev.btn
                  {script_task kTaskUISeconds (delay 0.8) (script {$this prev_lesson})}
               )
            }
            kDataUnhandled
         }
         TRUE
      }
   )
   

   ;;
   ;; handler for pressing a button
   ;;
   (BUTTON_DOWN_MSG
      {if_else {&& {== $player_num {{gamemode get main_panel} get_tutorial_player}}
                   {! [is_done]}}
         {do
            {if {|| {== $button kPad_Start}
                    {== $button kPad_Tri}}
               {$this resume_tutorial}
            }
            kDataUnhandled
         }
         TRUE
      }
   )


   ;;
   ;; handler for releasing a button
   ;;
   (BUTTON_UP_MSG
      {if_else {&& {== $player_num {{gamemode get main_panel} get_tutorial_player}}
                   {! [is_done]}}
         {do
            kDataUnhandled
         }
         TRUE
      }
   )

	(JOYPAD_CONNECT_MSG
		{if {&& {! $connected} {== $player_num {{gamemode get main_panel} get_tutorial_player}} }
			{$this resume_tutorial} ; REA - leave pause so game can catch the missing controller and repause
		}
	)

   ;;
   ;; variables
   ;;
   (is_quitting FALSE)
   (is_done     FALSE)
}
