;;;
;;; panels general to the main screen for all tutorials
;;;
#define TUTORIALS_MAIN_SCREEN_GENERAL_PANELS
(
      game
      coop_track_panel
      tutorials_state_panel
)


;;;
;;; properties general to the main screen for all tutorials
;;;
#define TUTORIALS_MAIN_SCREEN_GENERAL_PROPERTIES
(
   (allow_back         FALSE)
   (animate_transition FALSE)
   (disable_screen_saver TRUE)
   (unpause_on_transition FALSE)
   (TRANSITION_COMPLETE_MSG
      {if [unpause_on_transition]
         {set [unpause_on_transition] FALSE}
         {tutorials_state_panel unpause}
      }
      {tutorials_state_panel on_guide_change}
      {tutorials_state_panel on_mics_change}
		{$this check_lost_controller}
   )
	
   (microphones_changed ($vocalists_mic_changed)
      {tutorials_state_panel on_mics_change}
   )
	
	(JOYPAD_CONNECT_MSG
      {$this check_lost_controller}
   )
   
   ;returns TRUE if there is a lost controller, and FALSE if not
   (check_lost_controller
      ; TODO cleanup, make some optional handler for screen, rather than 
      ; checking all of them
      {if_else
          {&&  {ui current_screen}
               {!= {ui current_screen} pause_screen}
               {!= {ui current_screen} {gamemode get confirm_quit_screen}}
               {!= {ui current_screen} {gamemode get confirm_restart_screen}}
               {game missing_controllers}
               {== {session state} kNetInGame}
         }
         {do
				{set [unpause_on_transition] TRUE}
				{tutorials_state_panel pause}
            {band_ui_sink set_net_sync FALSE}
            {ui push_screen tutorials_pause_controller_screen}
            TRUE
         }
         ;else
         FALSE
      }
   )
)


;;;
;;; general handlers for BUTTON_DOWN_MSG for the main screen
;;;
#define TUTORIALS_MAIN_SCREEN_HANDLERS_BUTTON_DOWN_MSG
(
   {if {&& {&& {== $player_num {{gamemode get main_panel} get_tutorial_player}}
               {== $button kPad_Start}}
           {! {tutorials_state_panel get is_paused}}}
       {tutorials_pause_screen pre_enter}
       {ui push_screen tutorials_pause_screen}
   }
   kDataUnhandled
)


;;;
;;; general functions for the tutorial main panels
;;;
#define TUTORIALS_MAIN_PANEL_GENERAL_FUNCTIONS
(  
   ;;
   ;; hides all ui objects (labels, meshes, scoreboards, etc.)
   ;;
   (hide_all_ui
      {HideAll.trig trigger}
      {{coop_track_panel find tutorial_setup.trig} trigger}
   )


   ;;
   ;; callback for finished loading (makes space in the symbol table)
   ;;
   (finish_load
      {$this add_names [num_tutorial_names]}
   )


   ;;
   ;; properties
   ;;
   (lesson_num 0)
)


;;;
;;; just functions to redirect deprecated functions to their
;;; new location until I fix all the references
;;;
#define TUTORIALS_MAIN_PANEL_REDIRECTED_FUNCTIONS
(
   (set_state ($state)
      {tutorials_state_panel set_state $state}
   )
   (get_next_state ($inc)
      {tutorials_state_panel get_next_state $inc}
   )
   (switch_to_state ($state)
      {tutorials_state_panel switch_to_state $state}
   )
   (set_next_state ($state)
      {tutorials_state_panel set_next_state $state}
   )
   (tutorial_inc ($num)
      {tutorials_state_panel tutorial_inc $num}
   )
   (tutorial_dec ($num)
      {tutorials_state_panel tutorial_dec $num}
   )
)


;;;
;;; script that every tutorial should run when it enters the
;;; main screen
;;;
#define TUTORIALS_MAIN_SCREEN_ENTER
(
   {{gamemode get main_panel}
    set_paused
    FALSE
   }
)


;;;
;;; script that every tutorial should run when it enters the
;;; main panel
;;;
#define TUTORIALS_MAIN_PANEL_ENTER
(
   ;{game set_skip_intro TRUE}
   {beatmatch set_time_paused TRUE}
   {game set_showing FALSE}
   {{get_track_panel} set_showing FALSE}
   {tutorials_state_panel set_showing FALSE}
   {tutorials_state_panel start_tutorial}
   #ifndef HX_XBOX
		{beatmatch set_tutorial_mode TRUE}
   #endif
   
  
)



;;;
;;; script that every tutorial should run when it exits the
;;; main panel
;;;
#define TUTORIALS_MAIN_PANEL_EXIT
(
   {taskmgr clear_tasks}
   {$this set_song_volume 0.0}
   ;{game set_skip_intro FALSE}
   {game set_start_paused FALSE}
   {reset_all_callbacks}
   #ifndef HX_XBOX
      {beatmatch set_tutorial_mode FALSE}
   #endif
)


;;;
;;; script to determine which asset file to use for the
;;; tutorial
;;;
#define TUTORIALS_MAIN_PANEL_FILE
(
   (file
      {if_else {gamemode get tutorial_has_no_lefty}
         {gamemode get mixed_assets}
         {if_else {{profile_mgr get_char_options_from_player {gamecfg get leader_num}} get_lefty}
            {gamemode get lefty_assets}
            {gamemode get righty_assets}
         }
      }
   )
)
