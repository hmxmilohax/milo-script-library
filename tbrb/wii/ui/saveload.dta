#define kMetaSaveLoadPush
(0)
#define kMetaSaveLoadGoto
(1)
#define kMetaSaveLoadStay
(2)
#define WANT_TO_SAVELOAD_ACTIONS
({switch
      $goto_type
      (kMetaSaveLoadGoto
         {ui goto_screen save_screen})
      (kMetaSaveLoadPush
         {ui push_screen save_screen})
      (kMetaSaveLoadStay
         {ui goto_screen save_screen})})
#define DONT_WANT_TO_SAVELOAD_ACTIONS
({switch
      $goto_type
      (kMetaSaveLoadGoto
         {ui pop_screen $next_screen})
      (kMetaSaveLoadPush
         {if
            $next_screen
            {if
               {!=
                  $next_screen
                  {ui current_screen}}
               {ui goto_screen $next_screen}}})
      (kMetaSaveLoadStay
         {if
            {!=
               $next_screen
               {ui current_screen}}
            {ui goto_screen $next_screen}})}
   {memcardmgr saveload_all_complete})
{func
   autoload
   {autoload_push ''}}
{func
   autoload_push
   ($next_screen)
   {autoload_start kMetaSaveLoadPush $next_screen}}
{func
   autoload_goto
   ($next_screen)
   {autoload_start kMetaSaveLoadGoto $next_screen}}
{func
   autoload_stay
   ($next_screen)
   {autoload_start kMetaSaveLoadStay $next_screen}}
{func
   autoload_start
   ($goto_type $next_screen)
   {if_else
      {&&
         {!
            {save_screen get is_active}}
         {save_screen is_reason_to_autoload}}
      {do
         {save_screen saveload_init $next_screen $goto_type}
         {save_screen set mode kMeta_SaveAutoload}
         WANT_TO_SAVELOAD_ACTIONS}
      {do DONT_WANT_TO_SAVELOAD_ACTIONS}}}
{func
   autosave
   {autosave_push ''}}
{func
   autosave_push
   ($next_screen)
   {autosave_start kMetaSaveLoadPush $next_screen}}
{func
   autosave_goto
   ($next_screen)
   {autosave_start kMetaSaveLoadGoto $next_screen}}
{func
   autosave_stay
   ($next_screen)
   {autosave_start kMetaSaveLoadStay $next_screen}}
{func
   autosave_start
   ($goto_type $next_screen)
   {if_else
      {&&
         {!
            {save_screen get is_active}}
         {save_screen is_reason_to_autosave}}
      {do
         {save_screen saveload_init $next_screen $goto_type}
         {save_screen set mode kMeta_SaveAutosave}
         WANT_TO_SAVELOAD_ACTIONS}
      {do DONT_WANT_TO_SAVELOAD_ACTIONS}}}
{func
   manual_save
   ($user)
   {manual_save_push $user ''}}
{func
   manual_save_push
   ($user $next_screen)
   {manual_save_start $user kMetaSaveLoadPush $next_screen}}
{func
   manual_save_goto
   ($user $next_screen)
   {manual_save_start $user kMetaSaveLoadGoto $next_screen}}
{func
   manual_save_stay
   ($user $next_screen)
   {manual_save_start $user kMetaSaveLoadStay $next_screen}}
{func
   manual_save_start
   ($user $goto_type $next_screen)
   {if_else
      {!
         {save_screen get is_active}}
      {do
         {save_screen saveload_init $next_screen $goto_type}
         {save_screen set_manual_user $user}
         {save_screen set mode kMeta_SaveManualSave}
         WANT_TO_SAVELOAD_ACTIONS}
      {do DONT_WANT_TO_SAVELOAD_ACTIONS}}}
{func
   manual_load
   ($user)
   {manual_load_push $user ''}}
{func
   manual_load_push
   ($user $next_screen)
   {manual_load_start $user kMetaSaveLoadPush $next_screen}}
{func
   manual_load_goto
   ($user $next_screen)
   {manual_load_start $user kMetaSaveLoadGoto $next_screen}}
{func
   manual_load_stay
   ($user $next_screen)
   {manual_load_start $user kMetaSaveLoadStay $next_screen}}
{func
   manual_load_start
   ($user $goto_type $next_screen)
   {if_else
      {!
         {save_screen get is_active}}
      {do
         {save_screen saveload_init $next_screen $goto_type}
         {save_screen set_manual_user $user}
         {save_screen set mode kMeta_SaveManualLoad}
         WANT_TO_SAVELOAD_ACTIONS}
      {do DONT_WANT_TO_SAVELOAD_ACTIONS}}}
{func
   disable_autosave
   ($user)
   {if_else
      {!
         {save_screen get is_active}}
      {do
         {save_screen saveload_init '' kMetaSaveLoadPush}
         {save_screen set_manual_user $user}
         {save_screen set mode kMeta_SaveDisableAutosave}
         WANT_TO_SAVELOAD_ACTIONS}
      {do DONT_WANT_TO_SAVELOAD_ACTIONS}}}
#define kSaveloadEntered
(1)
#define kSaveloadNormal
(2)
#define kSaveloadMinimized
(3)
{new
   UIPanel
   saveload_dialog_panel
   (file
      "saveload_dialog_3btn.milo")
   (block_event
      ($event)
      TRUE)
   (set_button_text
      ($button $text)
      {$button set_showing TRUE}
      {$this enable $button}
      {$button set text_token $text})
   (set_label_string
      ($button $text)
      {$button set_showing TRUE}
      {$this enable $button}
      {$button set_token_fmt $text})
   (set_button_focus
      ($button)
      {$this enable $button}
      {$this set_focus $button})
   (hide_button
      ($button)
      {$this disable $button}
      {$button set_showing FALSE})
   (enable_button
      ($button)
      {$this enable $button})
   (disable_button
      ($button)
      {$this disable $button})
   (set_username
      {username.lbl set_dialog_title save_screen}
      {minimized_username.lbl set_dialog_title save_screen})
   (setup_2btn
      ($msg $opt1_token $opt2_token $default_option)
      {switch
         $default_option
         ((opt1 opt2 none)
            0)
         {fail
            "Expected opt1/opt2/none, got: "
            $default_option}}
      {$this setup_3btn $msg $opt1_token $opt2_token '' $default_option FALSE})
   (setup_3btn
      ($msg $opt1_token $opt2_token $opt3_token $default_option $show_waiting)
      {waiting.grp set_showing $show_waiting}
      {$this set_username}
      {msg.lbl set_token_fmt $msg}
      {minimized_msg.lbl set_token_fmt $msg}
      {do
         ($b1 option1.btn)
         ($b2 option2.btn)
         ($b3 option3.btn)
         ($max_opt 0)
         {if_else
            {!= $opt1_token ''}
            {do
               {$this set_button_text $b1 $opt1_token}
               {set $max_opt 1}}
            {$this hide_button $b1}}
         {if_else
            {!= $opt2_token ''}
            {do
               {$this set_button_text $b2 $opt2_token}
               {set $max_opt 2}}
            {$this hide_button $b2}}
         {if_else
            {!= $opt3_token ''}
            {do
               {$this set_button_text $b3 $opt3_token}
               {set $max_opt 3}}
            {$this hide_button $b3}}
         {if
            {!= $default_option none}
            {if_else
               {save_screen can_back_out}
               {helpbar
                  set_config
                  ((cancel helpbar_back)
                     (confirm helpbar_select))}
               {helpbar
                  set_config
                  ((confirm helpbar_select))}}}
         {switch
            $default_option
            (opt1
               {$this set_button_focus $b1})
            (opt2
               {$this set_button_focus $b2})
            (opt3
               {$this set_button_focus $b3})
            (none
               {helpbar
                  set_config
                  ()})
            {fail
               "Expected opt1/opt2/opt3/none, got: "
               $default_option}}
         {$this update_height $max_opt}
         {$this set_display_mode $max_opt $msg}})
   (display_mode kSaveloadEntered)
   (set_display_mode
      ($num_opts $msg)
      {if
         {!= $msg ''}
         {do
            ($display_mode
               {if_else
                  {&&
                     {meta_loading is_up}
                     {== $max_opt 0}}
                  kSaveloadMinimized
                  kSaveloadNormal})
            {if
               {!=
                  $display_mode
                  [display_mode]}
               {start.trg trigger}
               {set
                  [display_mode]
                  $display_mode}
               {minimized.grp
                  set_showing
                  {== $display_mode kSaveloadMinimized}}
               {all.grp
                  set_showing
                  {== $display_mode kSaveloadNormal}}}}})
   (enter
      {set
         [display_mode]
         kSaveloadEntered}
      {minimized.grp set_showing FALSE}
      {all.grp set_showing FALSE})
   (setup_msg
      ($msg)
      {$this setup_3btn $msg '' '' '' none FALSE})
   (setup_continue
      ($msg)
      {$this setup_3btn $msg mc_button_continue '' '' opt1 FALSE})
   (setup_msg_waiting
      ($msg)
      {$this setup_3btn $msg '' '' '' none TRUE})
   (update_height
      ($option_count)
      {do
         ($end_frame 0)
         {set
            $end_frame
            {switch
               $option_count
               (0 10.81)
               (1 11.66)
               (2 12.7)
               (3 15.0)
               {fail
                  "saveload - update_height cannot handle "
                  $option_count
                  " options (max 3)\n"}}}})}
{new
   SaveScreen
   save_screen
   (panels saveload_dialog_panel)
   (focus saveload_dialog_panel)
   (allow_event
      ($event)
      {!= $event pad_lost})
   (mode -1)
   (is_active FALSE)
   (next_screen '')
   (sync_state 0)
   (user_state 0)
   (goto_type -1)
   (is_meta_loading FALSE)
   (update_clear
      {saveload_dialog_panel setup_msg ''})
   (on_done
      {switch
         [goto_type]
         (kMetaSaveLoadGoto
            {if_else
               [next_screen]
               {ui
                  pop_screen
                  [next_screen]}
               {ui pop_screen}})
         (kMetaSaveLoadPush
            {if_else
               [next_screen]
               {ui
                  pop_screen
                  [next_screen]}
               {ui pop_screen}})
         (kMetaSaveLoadStay
            {ui
               goto_screen
               [next_screen]})})
   (saveload_init
      ($next_screen $goto_type)
      {if
         [is_active]
         {fail
            "saveload_init called, but [is_active] is true.\n"}}
      {set
         [is_active]
         TRUE}
      {set
         [next_screen]
         $next_screen}
      {set
         [goto_type]
         $goto_type}
      {set
         [sync_state]
         {net_sync get_ui_state}}
      {set
         [user_state]
         {input_mgr get_user}}
      {input_mgr clear_user}
      {net_sync set_ui_state kNetUI_SaveLoad})
   (enter
      {if
         {!
            [is_active]}
         {fail
            "save_screen entered, but [is_active] is false.\n"}}
      {if
         {==
            {ui_event_mgr current_event}
            pad_lost}
         {ui_event_mgr dismiss_event}})
   (exit
      {if
         {!
            [is_active]}
         {fail
            "save_screen exit called, but [is_active] is false.\n"}}
      {$this set is_meta_loading FALSE}
      {net_sync
         set_ui_state
         [sync_state]}
      {input_mgr
         set_user
         [user_state]}
      {set
         [is_active]
         FALSE}
      {input_mgr check_controllers})
   (update_autoload_autosave_warning
      {saveload_dialog_panel setup_continue mc_auto_warning})
   (update_autoload_search
      {saveload_dialog_panel setup_msg mc_auto_load_looking})
   (update_autoload_no_save_found
      ($name $controller)
      {saveload_dialog_panel
         setup_2btn
         (mc_auto_load_no_save_found_fmt $name $controller)
         mc_button_create_data
         mc_button_cancel
         opt1})
   (update_autoload_multiple_saves_found
      ($name $controller)
      {saveload_dialog_panel
         setup_2btn
         (mc_auto_load_multiple_saves_found_fmt $name $controller)
         mc_button_choose_device
         mc_button_cancel
         opt1})
   (update_autoload_load
      {saveload_dialog_panel setup_msg mc_auto_load_looking})
   (update_autoload_device_missing
      ($name $controller)
      {saveload_dialog_panel
         setup_2btn
         (mc_load_device_missing_fmt $name $controller)
         mc_button_choose_device
         mc_button_cancel
         opt1})
   (update_autoload_corrupt
      {saveload_dialog_panel setup_2btn wii_error_nand07 mc_button_overwrite mc_button_continue_no_save opt1})
   (update_autoload_not_owner
      {saveload_dialog_panel setup_2btn mc_auto_load_not_owner mc_button_overwrite mc_button_continue_no_save opt1})
   (update_autoload_obsolete
      ($name $controller)
      {saveload_dialog_panel
         setup_2btn
         {if_else
            {== $controller -1}
            mc_auto_load_obsolete_version
            (mc_auto_load_obsolete_version_fmt $name $controller)}
         mc_button_overwrite
         mc_button_continue_no_save
         opt1})
   (update_autoload_future
      ($name $controller)
      {saveload_dialog_panel
         setup_2btn
         {if_else
            {== $controller -1}
            mc_auto_load_newer_version
            (mc_auto_load_newer_version_fmt $name $controller)}
         mc_button_overwrite
         mc_button_continue_no_save
         opt2})
   (update_song_cache_search
      {saveload_dialog_panel setup_msg song_info_cache_search})
   (update_song_cache_not_found
      {saveload_dialog_panel setup_2btn song_info_cache_create song_info_cache_button_create song_info_cache_button_cancel opt1})
   (update_song_cache_missing
      {saveload_dialog_panel setup_2btn song_info_cache_missing song_info_cache_button_create song_info_cache_button_cancel opt1})
   (update_song_cache_write
      {saveload_dialog_panel setup_msg song_info_cache_saving})
   (update_song_cache_write_long
      {saveload_dialog_panel setup_msg song_info_cache_saving_long})
   (update_song_cache_read
      {saveload_dialog_panel setup_msg song_info_cache_loading})
   (update_song_cache_corrupt
      {saveload_dialog_panel setup_2btn song_info_cache_corrupt song_info_cache_button_corrupt_overwrite song_info_cache_button_cancel opt1})
   (update_global_options_search
      {saveload_dialog_panel setup_msg global_options_search})
   (update_global_options_not_found
      {saveload_dialog_panel setup_2btn global_options_create global_options_button_create global_options_button_cancel opt1})
   (update_global_options_missing
      {saveload_dialog_panel setup_2btn global_options_missing global_options_button_create global_options_button_cancel opt1})
   (update_global_options_write
      {saveload_dialog_panel setup_msg global_options_saving})
   (update_global_options_write_long
      {saveload_dialog_panel setup_msg global_options_saving_long})
   (update_global_options_read
      {saveload_dialog_panel setup_msg global_options_loading})
   (update_global_options_corrupt
      {saveload_dialog_panel setup_2btn global_options_corrupt global_options_button_corrupt_overwrite global_options_button_cancel opt1})
   (update_save_look_for_file
      {saveload_dialog_panel setup_msg mc_save_preparing})
   (update_save_game
      {saveload_dialog_panel setup_msg mc_save})
   (update_save_game_nand_09
      {saveload_dialog_panel setup_msg wii_error_nand09})
   (update_save_game_long
      {saveload_dialog_panel setup_msg mc_save_long})
   (update_save_confirm_overwrite
      {saveload_dialog_panel setup_2btn mc_save_confirm_overwrite mc_button_overwrite mc_button_cancel opt1})
   (update_save_not_enough_space
      {saveload_dialog_panel setup_continue mc_save_not_enough_space})
   (update_save_not_enough_space_wii
      {saveload_dialog_panel setup_2btn '' mc_save_cont_no_save_wii mc_return_to_home_wii opt1}
      {set
         $msg
         {saveload_dialog_panel find msg.lbl}}
      {set
         $needed_space
         {memcardmgr user_blocks_needed}}
      {if_else
         {> 2 $needed_space}
         {do
            {set $needed_space 1}
            {$msg
               set_token_fmt
               (wii_error_nand02_singular $needed_space)}}
         {$msg
            set_token_fmt
            (wii_error_nand02_plural $needed_space)}})
   (update_confirm_continue_no_save_wii
      {saveload_dialog_panel setup_2btn mc_confirm_no_save_cont_wii mc_button_continue_no_save mc_button_no_save_cancel opt1})
   (update_save_not_enough_inodes_wii
      {saveload_dialog_panel setup_2btn wii_error_nand03 mc_save_cont_no_save_wii mc_return_to_home_wii opt1})
   (update_save_not_enough_space_ps3
      {saveload_dialog_panel
         setup_3btn
         (mc_save_not_enough_space
            {-
               {memcardmgr save_game_space_needed}})
         mc_button_delete_saves
         mc_button_retry
         mc_button_continue_no_save
         opt1
         FALSE}
      {saveload_dialog_panel
         set_label_string
         msg.lbl
         (mc_save_not_enough_space
            {-
               {memcardmgr save_game_space_needed}})})
   (update_save_device_invalid
      ($name $controller)
      {saveload_dialog_panel
         setup_2btn
         (mc_save_device_missing_fmt $name $controller)
         mc_button_choose_device
         mc_button_disable_autosave
         opt1})
   (update_save_failed
      {saveload_dialog_panel setup_continue mc_save_failed})
   (update_save_disabled_by_cheat
      {saveload_dialog_panel setup_continue mc_save_disabled_by_cheat})
   (update_load_failed
      {saveload_dialog_panel setup_continue mc_load_failed})
   (update_autosave_disabled
      {saveload_dialog_panel setup_continue mc_autosave_disabled})
   (update_unknown_nand_failure
      {saveload_dialog_panel setup_msg wii_error_nand12})
   (update_upload
      {saveload_dialog_panel setup_msg_waiting upload_uploading})
   (update_upload_error_start
      ($count)
      {saveload_dialog_panel
         setup_2btn
         {if_else
            {== $count 1}
            upload_error_start_single
            (upload_error_start_fmt $count)}
         upload_button_view_first
         upload_button_return
         opt1})
   (update_upload_error_view
      ($error_array $error_num $error_count)
      {do
         ($current_error_msg_token
            {switch
               {elem $error_array 0}
               (RB_RETCODE_SERVER_DOWN upload_error_server_down)
               (RB_RETCODE_BAND_NAME_PROFANE upload_error_band_name_profane)
               (RB_RETCODE_BAND_MOTTO_PROFANE upload_error_band_motto_profane)
               (RB_RETCODE_CHAR_NAME_PROFANE upload_error_char_name_profane)
               (RB_RETCODE_BAND_NAME_DUP upload_error_band_name_dup)
               (RB_RETCODE_BAND_NAME_IP upload_error_band_name_ip)
               (RB_RETCODE_BAND_MOTTO_IP upload_error_band_motto_ip)
               (RB_RETCODE_CHAR_NAME_IP upload_error_char_name_ip)
               (RB_RETCODE_CHAR_MOTTO_PROFANE upload_error_char_motto_profane)
               (RB_RETCODE_CHAR_MOTTO_IP upload_error_char_motto_ip)
               (RB_RETCODE_OUT_OF_CONTEXTS upload_error_server_down)
               {fail
                  "Unknown RB_RETCODE error: "
                  {elem $error_array 0}
                  "\n"}})
         ($current_error_msg
            {if_else
               {== $current_error_msg_token upload_error_server_down}
               $current_error_msg_token
               ($current_error_msg_token
                  {elem $error_array 1})})
         {if_else
            {== $error_count 1}
            {saveload_dialog_panel setup_3btn $current_error_msg '' '' upload_button_return opt3 FALSE}
            {do
               {saveload_dialog_panel
                  setup_3btn
                  (upload_error_next_fmt
                     {'+' $error_num 1}
                     $error_count
                     $current_error_msg)
                  upload_button_view_prev
                  upload_button_view_next
                  upload_button_return
                  opt1}
               {if
                  {== $error_num 0}
                  {saveload_dialog_panel disable_button option1.btn}}
               {if
                  {==
                     $error_num
                     {- $error_count 1}}
                  {saveload_dialog_panel disable_button option2.btn}
                  {saveload_dialog_panel set_button_focus option3.btn}}}}})
   (update_manualsave_choose_device
      {saveload_dialog_panel setup_msg mc_manual_save_start})
   (update_manualsave_no_device
      {saveload_dialog_panel setup_2btn mc_manual_save_no_selection mc_button_choose_device mc_button_cancel opt1})
   (update_manualload_confirm_unsaved
      ($name $controller)
      {saveload_dialog_panel
         setup_2btn
         {if_else
            {== $controller -1}
            mc_manual_load_confirm_unsaved
            (mc_manual_load_confirm_unsaved_fmt $name $controller)}
         mc_button_continue
         mc_button_cancel
         opt1})
   (update_manualload_confirm
      {saveload_dialog_panel setup_2btn mc_manual_load_confirm mc_button_yes mc_button_no opt2})
   (update_manualload_choose_device
      {saveload_dialog_panel setup_msg mc_manual_load_start})
   (update_manualload_no_device
      {saveload_dialog_panel setup_2btn mc_manual_load_no_selection mc_button_choose_device mc_button_cancel opt1})
   (update_manualload_missing
      {saveload_dialog_panel setup_continue mc_manual_load_storage_missing})
   (update_manualload_load
      {saveload_dialog_panel setup_msg mc_manual_load})
   (update_manualload_no_file
      {$this setup_continue mc_manual_load_no_file})
   (update_manualload_corrupt
      {$this setup_continue wii_error_nand07})
   (update_manualload_not_owner
      {$this setup_continue mc_manual_load_not_owner})
   (update_manualload_done
      {$this setup_msg mc_manual_load_complete})}