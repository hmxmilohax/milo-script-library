{new
   SessionPanel
   practice_mode_panel
   (enter
      {gamecfg set practice_mode TRUE})
   (exit
      {gamecfg set practice_mode FALSE})}
{new
   UIPanel
   practice_background_panel
   (file
      "practice_background.milo")
   (select_background
      {do
         ($leader_user
            {session_mgr get_leader_user})
         {drum_trainer.mesh set_showing FALSE}
         {vocal_trainer.mesh set_showing FALSE}
         {guitar_trainer.mesh set_showing FALSE}
         {switch
            {$leader_user get_controller_type}
            (kControllerVocals
               {vocal_trainer.mesh set_showing TRUE})
            (kControllerDrum
               {drum_trainer.mesh set_showing TRUE})
            (kControllerGuitar
               {guitar_trainer.mesh set_showing TRUE})}})}
{new
   PreloadPanel
   practice_preload_panel
   (content_name
      "")
   (corrupt FALSE)
   (enter
      {if_else
         [preload_ok]
         {ui goto_screen practice_pre_sel_section_screen}
         {ui
            content_file_read_failed
            [content_name]
            [corrupt]}})}
{new
   BandScreen
   practice_preloading_screen
   (panels meta practice_preload_panel)
   (focus practice_preload_panel)}
{new
   BandScreen
   practice_pre_sel_section_screen
   (panels meta)
   (enter
      {practice_panel
         set_in_vocal_mode
         {==
            {{session_mgr get_leader_user}
               get_controller_type}
            kControllerVocals}}
      {ui goto_screen practice_sel_section_screen})}
{new
   MultiSelectListPanel
   practice_sel_section_panel
   (file practice_sel_section.milo)
   (focus sel_section.lst)
   (initial_section 0)
   (selected_first_section 0)
   (enter
      {gamecfg set_section 0 -1}
      {gamecfg set_section 1 -1}
      {sel_section.lst set_provider practice_section_provider}
      {set
         [section]
         0}
      {title.lbl set text_token practice_select_start}
      {if
         {!
            {==
               [selected_first_section]
               0}}
         {gamecfg
            set_section
            0
            [selected_first_section]}
         {title.lbl set text_token practice_select_end}
         {set
            [section]
            1}
         {sel_section.lst
            set_selected
            [selected_first_section]}
         {$this fake_component_select}
         {practice_section_provider
            set_start_section
            {-
               [selected_first_section]
               1}}}
      {if
         {!
            {==
               [initial_section]
               0}}
         {sel_section.lst
            set_selected
            [initial_section]}
         {$this fake_component_scroll}}
      {platform_mgr disable_xmp}
      {$this play_preview})
   (set_initial_section
      ($section)
      {set
         [initial_section]
         $section}
      {set
         [selected_first_section]
         0})
   (clear_state
      {set
         [initial_section]
         0}
      {set
         [selected_first_section]
         0})
   (exit
      {song_preview ''})
   (SELECT_MSG
      {do
         ($idx
            {-
               {sel_section.lst selected_pos}
               1})
         {if_else
            [section]
            {do
               {gamecfg set_section 1 $idx}
               {set
                  [initial_section]
                  {'+' $idx 1}}
               {$this goto_next_screen}}
            {if_else
               {'||'
                  {== $idx -1}
                  {==
                     $idx
                     {-
                        {practice_section_provider num_data}
                        2}}}
               {if_else
                  {== $idx -1}
                  {do
                     {gamecfg set_section 0 -1}
                     {gamecfg set_section 1 -1}
                     {set
                        [initial_section]
                        full_song}
                     {set
                        [selected_first_section]
                        0}
                     {$this goto_next_screen}}
                  {do
                     {gamecfg set_section 0 $idx}
                     {gamecfg set_section 1 $idx}
                     {set
                        [initial_section]
                        {'+' $idx 1}}
                     {set
                        [selected_first_section]
                        0}
                     {$this goto_next_screen}}}
               {do
                  {gamecfg set_section 0 $idx}
                  {title.lbl set text_token practice_select_end}
                  {set
                     [section]
                     1}
                  {set
                     [selected_first_section]
                     {'+' $idx 1}}
                  {practice_section_provider set_start_section $idx}}}}})
   (goto_next_screen
      {if_else
         {practice_panel in_vocal_mode}
         {do
            {gamecfg set_active_roster TRUE}
            {gamecfg set practice_speed 0}
            {ui goto_screen practice_loading_screen}}
         {do
            {gamecfg set_active_roster TRUE}
            {gamecfg set practice_speed 0}
            {ui goto_screen practice_loading_screen}}})
   (SCROLL_MSG
      {$this play_preview})
   (BUTTON_DOWN_MSG
      {cond
         ({&&
               {== $action kAction_Cancel}
               {==
                  [section]
                  0}}
            {play_instr_sfx $user button_back}
            {ui goto_screen qp_seldiff_screen}
            {platform_mgr enable_xmp}
            {$this clear_state}
            TRUE)
         ({&&
               {== $action kAction_Cancel}
               {==
                  [section]
                  1}}
            {play_instr_sfx $user button_back}
            {set
               [section]
               0}
            {practice_section_provider set_start_section -1}
            {title.lbl set text_token practice_select_start}
            {$this un_choose}
            TRUE)
         (TRUE kDataUnhandled)}
      kDataUnhandled)
   (play_preview
      {set
         $sec
         {-
            {sel_section.lst selected_pos}
            1}}
      {set
         $start
         {practice_section_provider get_section_start_ms $sec}}
      {set
         $end
         {practice_section_provider get_section_end_ms $sec}}
      {set
         $start
         {- $start 500.0}}
      {if
         {< $start 0.0}
         {set $start 0.0}}
      {song_preview
         {meta_performer song}
         $start
         $end})
   (section 0)}
{new
   BandScreen
   practice_sel_section_screen
   (panels meta postsong_sfx_panel practice_sel_section_panel practice_mode_panel)
   (focus practice_sel_section_panel)
   (helpbar
      ((cancel helpbar_back)
         (confirm helpbar_select)))
   (TRANSITION_COMPLETE_MSG
      {input_mgr check_controllers})}
{new
   UIPanel
   sel_speed_panel
   (file sel_speed.milo)
   (focus speed0.btn)
   (SELECT_MSG
      {switch
         $component
         (speed0.btn
            {gamecfg set practice_speed 0})
         (speed1.btn
            {gamecfg set practice_speed 1})
         (speed2.btn
            {gamecfg set practice_speed 2})
         (speed3.btn
            {gamecfg set practice_speed 3})}
      {gamecfg set_active_roster TRUE}
      {ui goto_screen practice_loading_screen})}
{new
   BandScreen
   practice_sel_speed_screen
   (panels meta postsong_sfx_panel sel_speed_panel practice_mode_panel)
   (focus sel_speed_panel)
   (back practice_sel_section_screen)
   (helpbar
      ((cancel helpbar_back)
         (confirm helpbar_select)))}
{new
   BandScreen
   practice_loading_screen
   (panels loading_panel practice_mode_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (TRANSITION_COMPLETE_MSG
      {ui
         goto_screen
         {gamemode get game_screen}})
   (exit)}
{new
   Object
   percentage_callback
   (hit
      {$this update_percentage})
   (miss
      {$this update_percentage})
   (pass
      {$this update_percentage})
   (update_percentage
      {do
         ($slot
            {{session_mgr get_leader_user}
               get_slot_num})
         {set
            [percent]
            {{beatmatch active_player 0}
               percent_hit_gems_practice
               $slot
               [startMs]
               [endMs]}}
         {if
            {>
               [percent]
               100.0}
            {set
               [percent]
               100.0}}
         {practice_panel
            set_hit_percent
            [percent]}})
   (update_vocal_percentage
      {do
         ($divisor
            {{beatmatch active_player 0}
               get_num_phrases
               {int
                  [startTick]}
               {int
                  [endTick]}
               {practice_panel get_score_part}})
         {if
            {== $divisor 0.0}
            {set $divisor 1.0}}
         {set
            [percent]
            {'*'
               100.0
               {/
                  [fab_count]
                  $divisor}}}
         {practice_panel
            set_hit_percent
            [percent]}})
   (reset
      ($startMs $endMs)
      {set
         [startMs]
         $startMs}
      {set
         [endMs]
         $endMs}
      {set
         [startTick]
         {ms_to_tick $startMs}}
      {set
         [endTick]
         {ms_to_tick $endMs}}
      {set
         [percent]
         0.0}
      {set
         [total]
         0.0}
      {set
         [fab_count]
         0.0})
   (phrase_rating
      ($rating)
      {if
         {> $rating 3}
         {set
            [fab_count]
            {'+'
               [fab_count]
               1.0}}}
      {$this update_vocal_percentage})
   (percent 0.0)
   (startMs 0.0)
   (endMs 0.0)
   (startTick 0)
   (endTick 0)
   (total 0.0)
   (fab_count 0.0)}
{new
   Object
   countoff_callback
   (beat
      {if
         {'||'
            [enabled]
            {gamecfg get practice_speed}}
         {synth play click}
         {'++'
            [count]}
         {if
            {>
               [count]
               3}
            {set
               [enabled]
               FALSE}}})
   (reset
      {set
         [enabled]
         TRUE}
      {set
         [count]
         0})
   (enabled TRUE)
   (count 0)}
{new
   PracticePanel
   practice_panel
   (file practice_panel.milo)
   (enter
      {synth stop_all_sfx}
      {events_parser
         add_sink
         $this
         (section)}
      {platform_mgr
         add_sink
         $this
         (ui_changed)}
      {game add_sink $this}
      {coop_track_panel reset}
      {{beatmatch active_player 0}
         set_crowd_rating_active
         FALSE}
      {$this update}
      {{beatmatch active_player 0}
         add_sink
         percentage_callback
         (hit miss pass phrase_rating)}
      {$world
         add_sink
         countoff_callback
         (beat)}
      {do
         ($real_speed
            {gamecfg get practice_speed})
         {gamecfg set practice_speed 0}
         {$this update_speed $real_speed}}
      {gamecfg
         get_section_bounds
         {gamecfg get_section 0}
         $start_ms
         $end_ms}
      {gamecfg
         get_section_bounds
         {gamecfg get_section 1}
         $start_ms2
         $end_ms2}
      {if
         {==
            {{beatmatch active_player 0}
               instrument}
            vocals}
         {beatmatch adjust_for_vocal_phrases $start_ms $end_ms2}}
      {percentage_callback reset $start_ms $end_ms2}
      {countoff_callback reset}
      {if_else
         {$this in_vocal_mode}
         {hide_speed.trig trigger}
         {show_speed.trig trigger}}
      {if
         [update_best_percent]
         {set
            [best_percent]
            -1.0}
         {$this set_best_percent 0.0}}
      {set
         [update_best_percent]
         TRUE}
      {$this
         set_uses_harmony
         [uses_harmony]}
      {$this
         update_guide_track
         {meta_performer song}}
      {if_else
         [uses_harmony]
         {harmony_vox.trig trigger}
         {solo_vox.trig trigger}}
      {practice_game_screen set jump_delay 130}
      {practice_background_panel select_background}
      {$this update_guide_label}
      {$this update_score_label}
      {hide_score.trig trigger}
      {show_score.trig trigger}
      {$this jump_to_start})
   (exit
      {events_parser remove_sink $this}
      {game remove_sink $this}
      {{beatmatch active_player 0}
         remove_sink
         percentage_callback}
      {$world remove_sink countoff_callback beat}
      {platform_mgr remove_sink $this ui_changed}
      {{beatmatch active_player 0}
         remove_sink
         percentage_callback}
      {synth stop practice_hum.cue}
      {if
         {$this in_vocal_mode}
         {{{{get_track_panel}
                  get_first_track}
               get_dir}
            show_all_parts}}
      {{beatmatch active_player 0}
         set_crowd_rating_active
         TRUE})
   (jump_to_start
      {section.lbl set text_token ''}
      {gamecfg
         get_section_bounds
         {gamecfg get_section 0}
         $start_ms
         $end_ms}
      {gamecfg
         get_section_bounds
         {gamecfg get_section 1}
         $start_ms2
         $end_ms2}
      {if
         {==
            {{beatmatch active_player 0}
               instrument}
            vocals}
         {beatmatch adjust_for_vocal_phrases $start_ms $end_ms2}}
      {percentage_callback reset $start_ms $end_ms2}
      {countoff_callback reset}
      {$this set_hit_percent 0.0}
      {do
         ($rewind_ms
            {'*'
               4.0
               {beatmatch ms_per_beat}})
         {if
            {< $rewind_ms 2000.0}
            {'*=' $rewind_ms 2.0}}
         {-= $start_ms $rewind_ms}
         {if
            {<= $start_ms 0.0}
            {set $start_ms 0.0}}}
      {practice_game_screen set already_ended FALSE}
      {{coop_track_panel find ending_bonus}
         reset}
      {{coop_track_panel find ending_bonus.tnm}
         set_frame
         0}
      {beatmatch jump $start_ms}
      {practice_game_screen set bring_track_in TRUE})
   (inc_speed
      {set
         $p_speed
         {gamecfg get practice_speed}}
      {if
         {> $p_speed 0}
         {-- $p_speed}
         {$this update_speed $p_speed}})
   (dec_speed
      {set
         $p_speed
         {gamecfg get practice_speed}}
      {if
         {< $p_speed 3}
         {'++' $p_speed}
         {$this update_speed $p_speed}})
   (update_speed
      ($p_speed)
      {do
         ($modifier
            {elem
               [speed_modifier]
               $p_speed})
         ($old_speed
            {gamecfg get practice_speed})
         {beatmatch set_music_speed $modifier}
         {'*=' $modifier 100.0}
         {practice_panel set_speed_percent $modifier}
         {gamecfg set practice_speed $p_speed}
         {if_else
            {== 0 $p_speed}
            {do
               {synth stop practice_hum.cue}}
            {do
               {if
                  {== 0 $old_speed}
                  {synth play practice_hum.cue}}}}})
   (update
      {if
         {!
            [keep_section_text]}
         {section.lbl set text_token ''}}
      {set
         [keep_section_text]
         FALSE})
   (midi_parser
      ($msg)
      {$this $msg})
   (section
      ($sec)
      {section.lbl
         set
         text_token
         {if_else
            {==
               $sec
               [ignore_section]}
            ''
            $sec}})
   (set_hit_percent
      ($percentage)
      {hit_percent.lbl
         set_token_fmt
         eg_percent_format
         {int $percentage}})
   (set_speed_percent
      ($percentage)
      {speed_percent.lbl
         set_token_fmt
         eg_percent_format
         {int $percentage}}
      {set
         $ratio
         {/ 100.0 $percentage}}
      {practice_panel set_pitch_shift_ratio $ratio})
   (set_best_percent
      ($percentage)
      {if
         {>
            $percentage
            [best_percent]}
         {set
            [best_percent]
            $percentage}
         {best_percent.lbl
            set_token_fmt
            eg_percent_format
            {int $percentage}}})
   (pause
      {$this pause_guide_track})
   (unpause
      {$this unpause_guide_track})
   (isolate_vocal_track
      ($t)
      {if_else
         {== $t -1}
         {{{{get_track_panel}
                  get_first_track}
               get_dir}
            show_all_parts}
         {{{{get_track_panel}
                  get_first_track}
               get_dir}
            isolate_vocal_part
            $t}})
   (update_guide_label
      {if_else
         [uses_harmony]
         {do
            {guide_part.lbl
               set
               text_token
               {elem
                  [harmony_guide_part_labels]
                  {'+'
                     1
                     {$this get_guide_part}}}}
            {guide_part.lbl
               set
               color_override
               {$this
                  find
                  {elem
                     [harmony_part_colors]
                     {'+'
                        1
                        {$this get_guide_part}}}}}}
         {guide_part.lbl
            set
            text_token
            {elem
               [no_harmony_guide_part_labels]
               {'+'
                  1
                  {$this get_guide_part}}}}})
   (update_score_label
      {if
         [uses_harmony]
         {score_part.lbl
            set
            text_token
            {elem
               [harmony_score_part_labels]
               {'+'
                  1
                  {$this get_score_part}}}}
         {score_part.lbl
            set
            color_override
            {$this
               find
               {elem
                  [harmony_part_colors]
                  {'+'
                     1
                     {$this get_score_part}}}}}})
   (UI_CHANGED_MSG
      {if
         {&&
            {ui current_screen}
            {==
               {{ui current_screen}
                  focus_panel}
               $this}
            {session is_local}}
         {if_else
            {platform_mgr guide_showing}
            {do
               {$this pause}}
            {do
               {$this unpause}}}})
   (keep_section_text FALSE)
   (ignore_section '')
   (speed_modifier
      (1.0 0.9 0.8 0.7))
   (best_percent 0.0)
   (update_best_percent TRUE)
   (uses_harmony FALSE)
   (no_harmony_guide_part_labels
      (guide_pitch_off guide_pitch_composite))
   (harmony_guide_part_labels
      (guide_pitch_off guide_pitch_lead guide_pitch_harmony1 guide_pitch_harmony2))
   (harmony_part_colors
      (P9_text.color lead.color harm1.color harm2.color))
   (harmony_score_part_labels
      (score_lead_and_harmonies score_lead score_harmony1 score_harmony2))}
#define PRACTICE_PANELS
(game sync_audio_net_panel practice_background_panel practice_panel coop_track_panel)
{new
   BandScreen
   practice_game_screen
   (panels practice_mode_panel PRACTICE_PANELS)
   (allow_back FALSE)
   (animate_transition FALSE)
   (in_game TRUE)
   (focus practice_panel)
   #ifdef HX_WII
   (guide_part_selection_delay 0)
   (score_part_selection_delay 0)
   #endif
   GAME_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {do
         ($track_sym
            {$user get_track_sym})
         {if
            {&&
               {!= none $track_sym}
               {!
                  {game is_game_over}}
               {session is_in_game}}
            {if
               {&&
                  {== $action kAction_Start}
                  {game can_pause}}
               {practice_panel pause}
               {input_mgr set_user $user}
               {net_sync disable}
               {ui push_screen pause_screen}}
            #ifdef HX_WII
            {if
               {&&
                  {practice_panel in_vocal_mode}
                  {== $action kAction_Cancel}}
               {if_else
                  {&&
                     {practice_panel get uses_harmony}
                     {==
                        {$this get_score_part}
                        -1}}
                  {practice_panel inc_guide_part}
                  {practice_panel toggle_guide_part}}
               {practice_panel update_guide_label}}
            {if
               {&&
                  {practice_panel in_vocal_mode}
                  {practice_panel get uses_harmony}
                  {== $action kAction_Confirm}}
               {practice_panel inc_score_part}
               {do
                  ($start_ms 0.0)
                  ($end_ms 0.0)
                  {gamecfg
                     get_section_bounds
                     {gamecfg get_section 1}
                     $start_ms
                     $end_ms}
                  {beatmatch adjust_for_vocal_phrases $start_ms $end_ms}
                  {percentage_callback
                     reset
                     {beatmatch get_song_ms}
                     $end_ms}}
               {practice_panel set_hit_percent 0.0}
               {practice_panel update_score_label}
               {practice_panel update_guide_label}}
            #else
            {if
               {&&
                  {practice_panel in_vocal_mode}
                  {== $action kAction_PageDown}}
               {if_else
                  {&&
                     {practice_panel get uses_harmony}
                     {==
                        {$this get_score_part}
                        -1}}
                  {practice_panel inc_guide_part}
                  {practice_panel toggle_guide_part}}
               {practice_panel update_guide_label}}
            {if
               {&&
                  {practice_panel in_vocal_mode}
                  {practice_panel get uses_harmony}
                  {== $action kAction_PageUp}}
               {practice_panel inc_score_part}
               {do
                  ($start_ms 0.0)
                  ($end_ms 0.0)
                  {gamecfg
                     get_section_bounds
                     {gamecfg get_section 1}
                     $start_ms
                     $end_ms}
                  {beatmatch adjust_for_vocal_phrases $start_ms $end_ms}
                  {percentage_callback
                     reset
                     {beatmatch get_song_ms}
                     $end_ms}}
               {practice_panel set_hit_percent 0.0}
               {practice_panel update_score_label}
               {practice_panel update_guide_label}}
            #endif}}
      kDataUnhandled)
   (poll
      {if_else
         {&&
            {==
               {ui current_screen}
               $this}
            {!
               {ui in_transition}}
            {!
               {beatmatch is_waiting}}}
         {do
            {if
               [bring_track_in]
               {{{beatmatch active_player 0}
                     track}
                  track_in}
               {{{beatmatch active_player 0}
                     track}
                  set_playing_intro
                  1000}
               {set
                  [bring_track_in]
                  FALSE}
               {practice_panel track_in}
               {if
                  {==
                     {{beatmatch active_player 0}
                        instrument}
                     vocals}
                  {{beatmatch active_player 0}
                     reset_scoring}}}
            {if
               {!
                  {beatmatch get_paused}}
               {if
                  [guide_pitch_paused]
                  {practice_panel set_guide_pitch_paused FALSE}
                  {set
                     [guide_pitch_paused]
                     FALSE}}}
            {coop_track_panel set_showing TRUE}
            {{beatmatch active_player 0}
               set_crowd_rating
               0.66}
            {gamecfg
               get_section_bounds
               {gamecfg get_section 0}
               $start_ms
               $end_ms}
            {gamecfg
               get_section_bounds
               {gamecfg get_section 1}
               $start_ms2
               $end_ms2}
            {if
               {==
                  {{beatmatch active_player 0}
                     instrument}
                  vocals}
               {beatmatch adjust_for_vocal_phrases $start_ms $end_ms2}}
            {set
               $end
               {ms_to_tick $end_ms2}}
            {set
               $curr
               {taskmgr total_tick}}
            {set
               $loop_point
               {'+' $end 2000.0}}
            {if
               {>
                  [jump_delay]
                  0}
               {--
                  [jump_delay]}}
            {if
               {<=
                  [jump_delay]
                  0}
               {if_else
                  {> $curr $loop_point}
                  {do
                     {practice_panel
                        set_best_percent
                        {percentage_callback get percent}}
                     {coop_track_panel set_showing FALSE}
                     {practice_panel jump_to_start}
                     {practice_panel
                        fade_song_in
                        {/
                           {'*'
                              4.0
                              {beatmatch ms_per_beat}}
                           1000.0}}
                     {set
                        [jump_delay]
                        10}
                     {set
                        [already_ended]
                        FALSE}}
                  {do
                     {if
                        {> $curr $end}
                        {$this end_play}}}}}
            #ifdef HX_WII
            {if
               {> $guide_part_selection_delay 0}
               {set
                  $guide_part_selection_delay
                  {- $guide_part_selection_delay 1}}}
            {if
               {> $score_part_selection_delay 0}
               {set
                  $score_part_selection_delay
                  {- $score_part_selection_delay 1}}}
            #endif}
         {do
            {coop_track_panel set_showing FALSE}
            {practice_panel set_guide_pitch_paused TRUE}
            {set
               [guide_pitch_paused]
               TRUE}}})
   (end_play
      {if
         {!
            [already_ended]}
         {if
            {!=
               {beatmatch active_player 0}
               ''}
            {{{beatmatch active_player 0}
                  track}
               track_out}
            {practice_panel track_out}
            {practice_panel fade_song_out 1.5}
            {set
               [already_ended]
               TRUE}}})
   (jump_delay 10)
   (first_poll TRUE)
   (already_ended FALSE)
   (bring_track_in FALSE)
   (guide_pitch_paused FALSE)}