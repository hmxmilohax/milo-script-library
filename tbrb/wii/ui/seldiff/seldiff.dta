{new
   MicInputPanel
   seldiff_panel
   (file
      "seldiff.milo")
   (enter
      {platform_mgr enable_xmp}
      {if_else
         {&&
            {story performer}
            {{story performer}
               in_chapter_challenge}}
         {song.lbl
            set_token_fmt
            chapter_challenge_seldiff_title
            {{story performer}
               get_current_songset}}
         {if_else
            {==
               {meta_performer num_songs}
               1}
            {song.lbl
               set_song_name
               {meta_performer song}}
            {song.lbl set text_token set_list_title}}}
      {do
         ($mode_frame
            {cond
               ({gamemode in_mode h2h}
                  2)
               (TRUE 0)})
         {pos_slot_00.tnm set_frame $mode_frame}
         {pos_slot_01.tnm set_frame $mode_frame}
         {pos_slot_02.tnm set_frame $mode_frame}
         {pos_slot_03.tnm set_frame $mode_frame}}
      {seldiff_02.grp
         set_showing
         {!
            {gamemode in_mode h2h}}}
      {seldiff_03.grp
         set_showing
         {!
            {gamemode in_mode h2h}}})}
#define SELDIFF_SCREEN_PANELS
((slots COOP_SLOTS_ORDER)
   (type
      (slot_num 0)
      (user
         {user_mgr
            get_user_from_slot
            [slot_num]})
      (parent_screen '')
      (slot none)
      (option '')
      (current_option
         {cond
            ({!
                  {$this is_active}}
               inactive)
            ({&&
                  {$this is_playing_set}
                  {'||'
                     {&&
                        {$this is_guitar_slot}
                        {!
                           {$this is_track_set}}}
                     {&&
                        {$this is_vocals_slot}
                        {!
                           {[parent_screen]
                              get
                              is_harmony_set}}}}}
               part_select)
            ({&&
                  {$this is_guitar_slot}
                  {!
                     {$this is_only_guitarist}}
                  {$this can_play_set_with_controller}
                  {'||'
                     {==
                        {$this other_track_type}
                        kTrackNone}
                     {&&
                        {!
                           {gamemode in_mode h2h}}
                        {==
                           {$this other_track_type}
                           {[user]
                              get_track_type}}}}
                  {!
                     {==
                        [option]
                        diff_select}}
                  {!
                     {==
                        [option]
                        diff_selected}}}
               part_select_wait)
            ({&&
                  {$this is_playing_set}
                  {!
                     {[user]
                        is_ready_to_load}}}
               diff_select)
            diff_selected})
      (enter
         {if
            {$this is_active}
            {if
               {&&
                  {!
                     {gamemode in_mode h2h}}
                  {[user]
                     is_local}}
               {switch
                  {[user]
                     get_controller_type}
                  (kControllerDrum
                     {[user]
                        set_track_type
                        kTrackDrum})
                  (kControllerVocals
                     {[user]
                        set_track_type
                        kTrackVocals})
                  (TRUE
                     {if_else
                        {==
                           {$this limit_track}
                           ''}
                        {[user]
                           set_track_type
                           kTrackNone}
                        {[user]
                           set_track_type
                           {$this limit_track}}})}}
            {if
               {!
                  {$this can_play_set_with_controller}}
               {if
                  {[user]
                     is_local}
                  {[user]
                     set_ready_to_load
                     TRUE}}}
            {if_else
               {gamemode in_mode h2h}
               {[parent_screen]
                  set
                  is_harmony_set
                  TRUE}
               {[parent_screen]
                  set
                  is_harmony_set
                  FALSE}}})
      (limit_track '')
      (is_ready
         {'||'
            {!
               {[user]
                  is_participating}}
            {[user]
               is_ready_to_load}})
      (is_active
         {&&
            [user]
            {[user]
               is_participating}})
      (can_play_set_with_controller
         {if_else
            {==
               {[user]
                  get_controller_sym}
               guitar}
            {'||'
               {meta_performer part_plays_in_set guitar}
               {meta_performer part_plays_in_set bass}}
            {meta_performer
               part_plays_in_set
               {[user]
                  get_controller_sym}}})
      (is_playing_set
         {if_else
            {$this can_play_set_with_controller}
            {if_else
               {$this is_track_set}
               {meta_performer
                  part_plays_in_set
                  {[user]
                     get_track_sym}}
               TRUE}
            FALSE})
      (can_play_set_with_guitar_as
         ($track)
         {do
            ($vocalist 0)
            ($drummer 0)
            ($guitarists 0)
            {user_mgr
               foreach_user
               $user
               {if
                  {$user is_participating}
                  {switch
                     {$user get_controller_type}
                     (kControllerGuitar
                        {'+=' $guitarists 1})
                     (kControllerVocals
                        {'+=' $vocalist 1})
                     (kControllerDrum
                        {'+=' $drummer 1})}}}
            {if_else
               {== $guitarists 1}
               {if_else
                  {== $track bass}
                  {meta_performer is_set_playable_with_parts $drummer $vocalist FALSE TRUE}
                  {meta_performer is_set_playable_with_parts $drummer $vocalist TRUE FALSE}}
               TRUE}})
      (is_guitar_slot
         {if_else
            {gamemode in_mode h2h}
            {==
               {[user]
                  get_controller_sym}
               guitar}
            {==
               [slot]
               guitar}})
      (is_vocals_slot
         {if_else
            {gamemode in_mode h2h}
            {==
               {[user]
                  get_controller_sym}
               vocals}
            {==
               [slot]
               vocals}})
      (is_track_set
         {!=
            {[user]
               get_track_type}
            kTrackNone})
      (is_part_locked
         {&&
            {$this is_guitar_slot}
            {[parent_screen]
               guitar_parts_locked}})
      (is_other_track_set
         {do
            ($ret TRUE)
            {user_mgr
               foreach_user
               $user
               {if
                  {&&
                     {$user is_participating}
                     {!=
                        $user
                        [user]}
                     {==
                        {$user get_controller_type}
                        kControllerGuitar}
                     {==
                        {$user get_track_type}
                        kTrackNone}}
                  {set $ret FALSE}}}
            $ret})
      (other_track_type
         {do
            ($ret kTrackNone)
            {user_mgr
               foreach_user
               $user
               {if
                  {&&
                     {$user is_participating}
                     {!=
                        $user
                        [user]}
                     {==
                        {$user get_controller_type}
                        kControllerGuitar}}
                  {set
                     $ret
                     {$user get_track_type}}}}
            $ret})
      (is_only_guitarist
         {do
            ($num_guitarists 0)
            {user_mgr
               foreach_user
               $user
               {if
                  {&&
                     {$user is_participating}
                     {==
                        {$user get_controller_type}
                        kControllerGuitar}}
                  {'+=' $num_guitarists 1}}}
            {&&
               {$this is_guitar_slot}
               {== $num_guitarists 1}}})
      (update_style_label
         {style.lbl
            set
            text_token
            {cond
               ({'||'
                     {==
                        {[user]
                           get_controller_type}
                        kControllerGuitar}
                     {==
                        {[user]
                           get_controller_type}
                        kControllerDrum}}
                  {do
                     ($opts
                        {[user]
                           get_gameplay_options})
                     {if_else
                        {$opts get_lefty}
                        lefty
                        righty}})
               ({==
                     {[user]
                        get_controller_type}
                     kControllerVocals}
                  {do
                     ($opts
                        {[user]
                           get_gameplay_options})
                     {if_else
                        {==
                           {$opts get_vocal_style}
                           kVocalStyleStatic}
                        vocalstyle_static
                        vocalstyle_scrolling}})
               {fail
                  "user has no controller_type"}}})
      (BUTTON_DOWN_MSG
         {switch
            $action
            (kAction_ViewModify
               {if
                  {$this is_playing_set}
                  {cond
                     ({'||'
                           {==
                              {[user]
                                 get_controller_type}
                              kControllerGuitar}
                           {==
                              {[user]
                                 get_controller_type}
                              kControllerDrum}}
                        {do
                           ($opts
                              {$user get_gameplay_options})
                           {if_else
                              {$opts get_lefty}
                              {$opts set_lefty FALSE}
                              {$opts set_lefty TRUE}}}
                        {$this update_style_label}
                        {play_instr_sfx $user button_toggle}
                        {style_pulse.tnm animate})
                     ({==
                           {[user]
                              get_controller_type}
                           kControllerVocals}
                        {do
                           ($opts
                              {$user get_gameplay_options})
                           {if_else
                              {==
                                 {$opts get_vocal_style}
                                 kVocalStyleStatic}
                              {$opts set_vocal_style kVocalStyleScrolling}
                              {$opts set_vocal_style kVocalStyleStatic}}}
                        {$this update_style_label}
                        {play_instr_sfx $user button_toggle}
                        {style_pulse.tnm animate})
                     {fail
                        "user has no controller_type"}}})
            kDataUnhandled})
      (send_focus_msg TRUE)
      (general_init
         {select.grp set_showing TRUE}
         {seldiff.grp set_showing FALSE}
         {selpart.grp set_showing FALSE}
         {arrows.grp set_showing FALSE}
         {style_icon.lbl
            set
            icon
            "s"}
         {ready.lbl set text_token seldiffpart_player_ready}
         {unless
            {gamemode is_solo}
            {{seldiff_panel
                  find
                  {sprintf
                     "remote%i.mnm"
                     [slot_num]}}
               set_frame
               {!
                  {[user]
                     is_local}}}})
      (general_update
         ($user)
         {player.lbl set_intro_name $user}
         {if_else
            {$user is_local}
            {padnum.lbl
               set_int
               {'+'
                  {$user get_pad_num}
                  1}}
            {padnum.lbl set_showing FALSE}}
         {if_else
            {&&
               {$user is_local}
               {$this is_playing_set}}
            {$this update_style_label}
            {style.grp set_showing FALSE}}
         {if_else
            {!=
               {$user get_track_type}
               kTrackNone}
            {difficulty.idd
               set
               instrument_type
               {$user get_track_sym}}
            {if_else
               {==
                  {$this focus_name}
                  bass.btn}
               {difficulty.idd set instrument_type bass}
               {difficulty.idd set instrument_type guitar}}}
         {difficulty.idd set_setlist})
      (part_select_init
         {$this general_init}
         {selpart.grp set_showing TRUE}
         {guitar.btn set text_token guitar}
         {bass.btn set text_token bass}
         {$this enable guitar.lbl}
         {$this enable guitar.btn}
         {$this enable bass.lbl}
         {$this enable bass.btn}
         {switch
            {[user]
               get_controller_type}
            (kControllerGuitar
               {do
                  ($icon_level
                     {[user]
                        get_hardcore_icon_level})
                  {guitar.lbl
                     set
                     icon
                     {get_font_char_from_track_type kTrackGuitar $icon_level}}
                  {bass.lbl
                     set
                     icon
                     {get_font_char_from_track_type kTrackBass $icon_level}}}
               {if_else
                  {$this is_only_guitarist}
                  {do
                     {unless
                        {$this can_play_set_with_guitar_as guitar}
                        {$this disable guitar.lbl}
                        {$this disable guitar.btn}
                        {guitar.btn set text_token no_part}
                        {$this set_focus bass.btn}}
                     {unless
                        {$this can_play_set_with_guitar_as bass}
                        {$this disable bass.lbl}
                        {$this disable bass.btn}
                        {bass.btn set text_token no_part}
                        {$this set_focus guitar.btn}}
                     {unless
                        {meta_performer part_plays_in_set guitar}
                        {$this disable guitar.lbl}}
                     {unless
                        {meta_performer part_plays_in_set bass}
                        {$this disable bass.lbl}}}
                  {do
                     {unless
                        {meta_performer part_plays_in_set guitar}
                        {$this disable guitar.lbl}
                        {guitar.btn set text_token no_part}}
                     {unless
                        {meta_performer part_plays_in_set bass}
                        {$this disable bass.lbl}
                        {bass.btn set text_token no_part}}}})
            (kControllerVocals
               {bass.lbl
                  set
                  icon
                  {[user]
                     get_track_icon}}
               {bass.btn set text_token st_vocals}
               {if_else
                  {==
                     {song_mgr
                        num_vocal_parts
                        {meta_performer song}}
                     3}
                  {guitar.lbl
                     set
                     icon
                     {get_font_char_for_harmony_mics
                        3
                        {[user]
                           get_hardcore_icon_level}}}
                  {guitar.lbl
                     set
                     icon
                     {get_font_char_for_harmony_mics
                        2
                        {[user]
                           get_hardcore_icon_level}}}}
               {guitar.btn set text_token st_harmony}
               {unless
                  {meta_performer set_has_vocal_harmony}
                  {$this disable guitar.lbl}
                  {$this disable guitar.btn}
                  {$this set_focus bass.btn}})})
      (part_select_update
         ($user)
         {$this general_update $user}
         {if
            {&&
               {==
                  {$user get_controller_type}
                  kControllerGuitar}
               {!
                  {$this is_only_guitarist}}}
            {if_else
               {$this is_part_locked}
               {switch
                  {$this other_track_type}
                  (kTrackGuitar
                     {$this disable guitar.btn}
                     {$this disable guitar.lbl}
                     {$this set_focus bass.btn})
                  (kTrackBass
                     {$this disable bass.btn}
                     {$this disable bass.lbl}
                     {$this set_focus guitar.btn})}
               {do
                  {$this enable guitar.btn}
                  {if
                     {meta_performer part_plays_in_set guitar}
                     {$this enable guitar.lbl}}
                  {$this enable bass.btn}
                  {if
                     {meta_performer part_plays_in_set bass}
                     {$this enable bass.lbl}}}}})
      (diff_select_init
         {$this general_init}
         {seldiff.grp set_showing TRUE}
         {arrows.grp
            set_showing
            {&&
               {$this is_vocals_slot}
               {[user]
                  is_local}
               {[parent_screen]
                  get
                  is_harmony_set}}}
         {if_else
            {$this is_vocals_slot}
            {if_else
               {&&
                  {==
                     {[user]
                        get_preferred_score_type}
                     kScoreHarmony}
                  {meta_performer set_has_vocal_harmony}
                  {!
                     {gamemode in_mode h2h}}}
               {if_else
                  {==
                     {song_mgr
                        num_vocal_parts
                        {meta_performer song}}
                     3}
                  {instrument.lbl
                     set
                     icon
                     {get_font_char_for_harmony_mics
                        3
                        {[user]
                           get_hardcore_icon_level}}}
                  {instrument.lbl
                     set
                     icon
                     {get_font_char_for_harmony_mics
                        2
                        {[user]
                           get_hardcore_icon_level}}}}
               {instrument.lbl
                  set
                  icon
                  {[user]
                     get_track_icon}}}
            {instrument.lbl
               set
               icon
               {[user]
                  get_track_icon}}}
         {ready.lbl set_showing FALSE}
         {do
            ($user
               [user])
            ($ready
               {$user is_ready_to_load})
            ($diff
               {$user get_difficulty_sym})
            {if
               {$this is_playing_set}
               {$this
                  iterate
                  BandButton
                  $b
                  {if_else
                     {==
                        {$b get text_token}
                        $diff}
                     {do
                        {$this set_focus $b}
                        {$b set_showing TRUE}}
                     {$b
                        set_showing
                        {! $ready}}}}}}
         {diff_buttons.grp set_showing TRUE}
         {$this enable instrument.lbl}
         {disable_pos.tnm set_frame 0}
         {ready.lbl set text_token seldiffpart_player_ready}
         {if_else
            {!
               {$this is_playing_set}}
            {do
               {diff_buttons.grp set_showing FALSE}
               {$this disable instrument.lbl}
               {disable_pos.tnm set_frame 1}
               {ready.lbl set text_token not_playing}}
            {do
               ($part
                  {[user]
                     get_controller_sym})
               {if
                  {== $part guitar}
                  {set
                     $part
                     {[user]
                        get_track_sym}}}
               {if
                  {!
                     {meta_performer part_plays_in_song $part}}
                  {$this disable instrument.lbl}
                  {disable_pos.tnm set_frame 1}
                  {ready.lbl set text_token not_playing_first_song}
                  {ready.lbl set_showing TRUE}}}}
         {do
            ($diff 0)
            {foreach
               $diff_sym
               (DIFF_SYMBOLS)
               {if
                  {< $diff $min_diff}
                  {$this
                     disable
                     {sprint
                        $diff_sym
                        ".btn"}}}
               {'++' $diff}}})
      (diff_select_update
         ($user)
         {$this general_update $user}
         {if
            {$this is_guitar_slot}
            {instrument.lbl
               set
               icon
               {$user get_track_icon}}}))
   (options
      (inactive
         (BUTTON_DOWN_MSG TRUE)
         (init
            {select.grp set_showing FALSE})
         (update))
      (part_select
         (init
            {$this part_select_init}
            {if
               {&&
                  {!=
                     {bass.btn get_state}
                     kComponentDisabled}
                  {'||'
                     {&&
                        {$this is_vocals_slot}
                        {==
                           {[user]
                              get_preferred_score_type}
                           kScoreVocals}}
                     {&&
                        {$this is_guitar_slot}
                        {==
                           {[user]
                              get_preferred_score_type}
                           kScoreBass}}}}
               {$this set_focus bass.btn}}
            {guitar.grp set_showing TRUE}
            {bass.grp set_showing TRUE}
            {waiting_part.lbl set_showing FALSE}
            {if
               {&&
                  {!=
                     {$this focus_name}
                     guitar.btn}
                  {!=
                     {$this focus_name}
                     bass.btn}}
               {if_else
                  {'||'
                     {==
                        {guitar.btn get_state}
                        kComponentDisabled}
                     {&&
                        {$this is_vocals_slot}
                        {==
                           {[user]
                              get_preferred_score_type}
                           kScoreVocals}
                        {!=
                           {bass.btn get_state}
                           kComponentDisabled}}}
                  {$this set_focus bass.btn}
                  {$this set_focus guitar.btn}}}
            {if
               {&&
                  {==
                     {guitar.btn get_state}
                     kComponentFocused}
                  {==
                     {bass.btn get_state}
                     kComponentFocused}}
               {guitar.btn set_state kComponentNormal}
               {$this set_focus bass.btn}})
         (update
            {$this
               part_select_update
               [user]})
         (FOCUS_MSG
            {if
               [send_focus_msg]
               {net_sync
                  send_net_focus
                  [user]
                  $new_focus}}
            {if
               {$this is_guitar_slot}
               {if_else
                  {==
                     {$new_focus name}
                     guitar.btn}
                  {do
                     {difficulty.idd set instrument_type guitar}}
                  {do
                     {difficulty.idd set instrument_type bass}}}
               {difficulty.idd set_setlist}})
         (net_component_focus
            ($user $new_focus_name)
            {set
               [send_focus_msg]
               FALSE}
            {$this
               set_focus
               {$this find $new_focus_name}}
            {set
               [send_focus_msg]
               TRUE})
         (SELECT_MSG
            {if_else
               {$this is_guitar_slot}
               {do
                  {switch
                     $component
                     (guitar.btn
                        {$user set_track_type kTrackGuitar}
                        {if
                           {meta_performer part_plays_in_set bass}
                           {$user set_preferred_score_type kScoreGuitar}
                           {[parent_screen]
                              set_prefer_bass_leaderboard
                              FALSE}})
                     (bass.btn
                        {$user set_track_type kTrackBass}
                        {if
                           {meta_performer part_plays_in_set guitar}
                           {$user set_preferred_score_type kScoreBass}
                           {[parent_screen]
                              set_prefer_bass_leaderboard
                              TRUE}})}
                  {[parent_screen]
                     verify_player_change
                     $user}}
               {do
                  {switch
                     $component
                     (guitar.btn
                        {practice_panel set uses_harmony TRUE}
                        {$user set_preferred_score_type kScoreHarmony}
                        {[parent_screen]
                           set_prefer_harmony_leaderboard
                           TRUE})
                     (bass.btn
                        {practice_panel set uses_harmony FALSE}
                        {if
                           {meta_performer set_has_vocal_harmony}
                           {$user set_preferred_score_type kScoreVocals}
                           {[parent_screen]
                              set_prefer_harmony_leaderboard
                              FALSE}})}
                  {[parent_screen]
                     set_is_harmony_set
                     TRUE}
                  {session
                     send_msg_to_all
                     {'`'
                        ({','
                              [parent_screen]}
                           set_is_harmony_set
                           TRUE)}
                     kNetReliable}}}
            {[parent_screen]
               export_all
               update}
            {if
               {!
                  {$this is_playing_set}}
               {[parent_screen]
                  check_ready_to_start_loading}}
            kDataUnhandled))
      (part_select_wait
         (init
            {$this part_select_init}
            {waiting_part.lbl set_showing TRUE}
            {do
               ($track
                  {[user]
                     get_track_type})
               {guitar.grp
                  set_showing
                  {== $track kTrackGuitar}}
               {bass.grp
                  set_showing
                  {== $track kTrackBass}}})
         (update
            {$this
               part_select_update
               [user]})
         (BUTTON_DOWN_MSG
            {if_else
               {== $action kAction_Cancel}
               {do
                  {[user]
                     set_track_type
                     kTrackNone}
                  {play_instr_sfx $user button_back}
                  {[parent_screen]
                     export_all
                     update}}
               {if
                  {input_mgr
                     is_valid_button_for_shell
                     $raw_button
                     {$user connected_controller_type}}
                  {play_instr_sfx $user button_error}}}))
      (diff_select
         (init
            {$this diff_select_init})
         (update
            {$this
               diff_select_update
               [user]})
         (FOCUS_MSG
            {if
               [send_focus_msg]
               {net_sync
                  send_net_focus
                  [user]
                  $new_focus}}
            {if
               {[user]
                  is_local}
               {switch
                  {$new_focus name}
                  (easy.btn
                     {[user]
                        set_difficulty
                        easy})
                  (medium.btn
                     {[user]
                        set_difficulty
                        medium})
                  (hard.btn
                     {[user]
                        set_difficulty
                        hard})
                  (expert.btn
                     {[user]
                        set_difficulty
                        expert})}}
            kDataUnhandled)
         (net_component_focus
            ($user $new_focus_name)
            {set
               [send_focus_msg]
               FALSE}
            {$this
               set_focus
               {$this find $new_focus_name}}
            {set
               [send_focus_msg]
               TRUE})
         (BUTTON_DOWN_MSG
            {if_else
               {&&
                  {== $action kAction_Cancel}
                  {!
                     {gamemode in_mode h2h}}}
               {cond
                  ({$this is_guitar_slot}
                     {if_else
                        {==
                           {$user get_track_type}
                           kTrackGuitar}
                        {$this set_focus guitar.btn}
                        {$this set_focus bass.btn}}
                     {[user]
                        set_track_type
                        kTrackNone}
                     {play_instr_sfx $user button_back}
                     {[parent_screen]
                        export_all
                        update})
                  ({$this is_vocals_slot}
                     {[parent_screen]
                        set_is_harmony_set
                        FALSE}
                     {session
                        send_msg_to_all
                        {'`'
                           ({','
                                 [parent_screen]}
                              set_is_harmony_set
                              FALSE)}
                        kNetReliable}
                     {play_instr_sfx $user button_back}
                     {[parent_screen]
                        export_all
                        update})
                  kDataUnhandled}
               kDataUnhandled})
         (SELECT_MSG
            {if_else
               {gamemode in_mode practice}
               {ui goto_screen practice_preloading_screen}
               {do
                  {$user set_ready_to_load TRUE}
                  {[parent_screen]
                     check_ready_to_start_loading}
                  {[parent_screen]
                     update
                     $this}}}
            kDataUnhandled))
      (diff_selected
         (init
            {$this diff_select_init}
            {ready.lbl set_showing TRUE}
            {if
               {[user]
                  is_local}
               {[user]
                  set_ready_to_load
                  TRUE}})
         (update
            {$this
               diff_select_update
               [user]})
         (BUTTON_DOWN_MSG
            {switch
               $action
               (kAction_Cancel
                  {if_else
                     {$this can_play_set_with_controller}
                     {do
                        {if
                           {&&
                              {$this is_guitar_slot}
                              {!
                                 {$this is_playing_set}}}
                           {if_else
                              {==
                                 {$user get_track_type}
                                 kTrackGuitar}
                              {$this set_focus guitar.btn}
                              {$this set_focus bass.btn}}
                           {[user]
                              set_track_type
                              kTrackNone}}
                        {play_instr_sfx $user button_back}
                        {[user]
                           set_ready_to_load
                           FALSE}
                        {[parent_screen]
                           export_all
                           update}}
                     kDataUnhandled})
               (kAction_ViewModify kDataUnhandled)
               TRUE}))))
#define SELDIFF_SCREEN_HANDLERS
((background_view seldiff)
   (player_panels
      (panel seldiff_panel)
      SELDIFF_SCREEN_PANELS)
   (is_harmony_set FALSE)
   (set_is_harmony_set
      ($val)
      {$this set is_harmony_set $val}
      {$this export_all update})
   (verify_player_change
      ($user)
      {unless
         {gamemode in_mode h2h}
         {do
            ($g0_pcfg 0)
            ($g1_pcfg 0)
            {user_mgr
               foreach_user
               $gtr_user
               {if
                  {&&
                     {$gtr_user is_participating}
                     {==
                        {$gtr_user get_controller_type}
                        kControllerGuitar}}
                  {if_else
                     $g0_pcfg
                     {set $g1_pcfg $gtr_user}
                     {set $g0_pcfg $gtr_user}}}}
            {if
               {&&
                  $g0_pcfg
                  $g1_pcfg
                  {'||'
                     {== $g0_pcfg $user}
                     {== $g1_pcfg $user}}
                  {!=
                     {$g0_pcfg get_track_type}
                     kTrackNone}
                  {!=
                     {$g1_pcfg get_track_type}
                     kTrackNone}
                  {==
                     {$g0_pcfg get_track_type}
                     {$g1_pcfg get_track_type}}
                  {is_leader_local}}
               {do
                  ($user_to_change '')
                  ($new_track_type '')
                  {if_else
                     {random 0 1}
                     {set $user_to_change $g0_pcfg}
                     {set $user_to_change $g1_pcfg}}
                  {if_else
                     {==
                        {$user_to_change get_track_type}
                        kTrackGuitar}
                     {set $new_track_type kTrackBass}
                     {set $new_track_type kTrackGuitar}}
                  {if_else
                     {$user_to_change is_local}
                     {$user_to_change set_track_type $new_track_type}
                     {gamecfg reassign_user_track_type $user_to_change $new_track_type}}}}}})
   (REMOTE_USER_UPDATED_MSG
      {$this verify_player_change $user}
      {$this check_ready_to_start_loading}
      {$this export_all update})
   (REMOTE_USER_LEFT_MSG
      {if
         {!
            {meta_performer disband_if_bad_configuration}}
         {$this check_ready_to_start_loading}
         {$this export_all update}})
   (BUTTON_DOWN_MSG
      {switch
         $action
         (kAction_Cancel
            {if_else
               {is_leader_local}
               {if_else
                  {&&
                     {>
                        {meta_performer num_songs}
                        1}
                     {==
                        {gamemode get song_select_mode}
                        song_select_quickplay}
                     {!
                        {gamemode in_mode h2h}}}
                  {do
                     {net_sync disable}
                     {play_instr_sfx $user button_back}
                     {ui push_screen setlist_warning_screen}}
                  kDataUnhandled}
               {ui_event_mgr trigger_event remote_exit}})
         kDataUnhandled})
   (check_ready_to_start_loading
      {if
         {is_leader_local}
         {do
            ($ready TRUE)
            {user_mgr
               foreach_user
               $user
               {if
                  {&&
                     {$user is_participating}
                     {!
                        {$user is_ready_to_load}}}
                  {set $ready FALSE}}}
            {if
               {&&
                  $ready
                  {!
                     {meta_performer disband_if_bad_configuration}}}
               {if
                  {&&
                     {!
                        {ui_event_mgr has_active_transition_event}}
                     {!
                        {ui in_transition}}}
                  {$this export_all update}
                  {ui goto_screen loading_screen}}}}})
   (load_panels
      {user_mgr
         foreach_user
         $user
         {if
            {&&
               {$user is_participating}
               {$user is_local}}
            {$user set_ready_to_load FALSE}}})
   (enter
      {do
         {switch
            {{session_mgr get_leader_user}
               get_controller_type}
            (kControllerVocals
               {practice_panel set_in_vocal_mode TRUE})
            (kControllerDrum
               {practice_panel set_in_vocal_mode FALSE})
            (kControllerGuitar
               {practice_panel set_in_vocal_mode FALSE})}}
      kDataUnhandled)
   (TRANSITION_COMPLETE_MSG
      {input_mgr set_limit kLimitSession}
      {$this update_helpbar}
      {meta_performer disband_if_bad_configuration})
   (update_helpbar
      {helpbar
         set_config
         ((confirm
               {if_else
                  {{ui current_screen}
                     locals_can_select}
                  helpbar_select
                  ''})
            (cancel
               {if_else
                  {is_leader_local}
                  helpbar_back
                  endgame_hb_leave_session}))}))
{new
   MultiFocusScreen
   qp_seldiff_screen
   (panels meta background_panel postsong_sfx_panel seldiff_panel)
   (back
      {if_else
         {&&
            {gamemode in_mode h2h}
            {gamecfg has_participating_guitar_controller}}
         h2h_seltrack_screen
         song_select_screen})
   SELDIFF_SCREEN_HANDLERS}
{new
   MultiFocusScreen
   story_chapter_seldiff_screen
   (panels meta background_panel seldiff_panel postsong_sfx_panel)
   (back story_chapter_songselect_screen)
   SELDIFF_SCREEN_HANDLERS}
{new
   MultiFocusScreen
   story_chapterchallenge_seldiff_screen
   (panels meta background_panel seldiff_panel)
   (back story_chapter_challenges_screen)
   SELDIFF_SCREEN_HANDLERS}
{new
   BandScreen
   setlist_warning_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      {input_mgr set_limit kLimitSessionLeader}
      {dialog_panel set_yesno setlist_warning no.btn})
   (SELECT_MSG
      {switch
         $component
         (yes.btn
            {ui sync_screen song_select_screen 0})
         (no.btn
            {ui pop_screen}
            {net_sync enable})})}
{new
   UIPanel
   h2h_seldiff_panel
   (file
      "h2h_seldiff.milo")
   (enter
      {player.lbl set_showing FALSE}
      {padnum.lbl set_showing FALSE}
      {waiting_part.lbl set_showing FALSE}
      {ready.lbl set_showing FALSE}
      {if_else
         {==
            {meta_performer num_songs}
            1}
         {song.lbl
            set_song_name
            {meta_performer song}}
         {song.lbl set text_token set_list_title}}
      {do
         ($leader
            {session_mgr get_leader_user})
         {$this
            set_focus
            {if_else
               {==
                  {$leader get_track_type}
                  kTrackNone}
               guitar.btn
               {sprint
                  {$leader get_difficulty_sym}
                  ".btn"}}}}
      {session add_sink $this}
      {$this update})
   (exit
      {session remove_sink $this})
   (REMOTE_USER_UPDATED_MSG
      {$this update})
   (update
      {do
         ($leader
            {session_mgr get_leader_user})
         ($has_part
            {!=
               {$leader get_track_type}
               kTrackNone})
         {selpart.grp
            set_showing
            {! $has_part}}
         {seldiff.grp set_showing $has_part}
         {if
            $has_part
            {instrument.lbl
               set
               icon
               {cnv_instrumenttoicon
                  {$leader get_track_sym}}}}}
      {foreach
         $part
         (guitar bass)
         {do
            ($button
               {sprint
                  $part
                  ".btn"})
            ($label
               {sprint
                  $part
                  ".lbl"})
            {if_else
               {song_mgr
                  song_part_rank
                  {meta_performer song}
                  $part}
               {do
                  {$this enable $button}
                  {$this enable $label}}
               {do
                  {$this disable $button}
                  {$this disable $label}}}}}
      {do
         ($user
            {session_mgr get_leader_user})
         {if_else
            {!=
               {$user get_track_type}
               kTrackNone}
            {difficulty.idd
               set
               instrument_type
               {$user get_track_sym}}
            {if_else
               {==
                  {$this focus_name}
                  bass.btn}
               {difficulty.idd set instrument_type bass}
               {difficulty.idd set instrument_type guitar}}}
         {difficulty.idd set_setlist}})
   (BUTTON_DOWN_MSG
      {do
         ($leader
            {session_mgr get_leader_user})
         {if_else
            {&&
               {== $action kAction_Cancel}
               {!=
                  {$leader get_track_type}
                  kTrackNone}
               {==
                  {$leader get_controller_type}
                  kControllerGuitar}}
            {do
               {play_instr_sfx $user button_back}
               {$this
                  set_focus
                  {sprint
                     {$leader get_track_sym}
                     ".btn"}}
               {$this update_track none}
               {$this update}}
            kDataUnhandled}})
   (update_track
      ($track)
      {user_mgr
         foreach_user
         $user
         {if
            {$user is_participating}
            {if_else
               {$user is_local}
               {$user set_track_type $track}
               {gamecfg set_remote_user_track_type $user $track}}}})
   (SELECT_MSG
      {do
         ($leader
            {session_mgr get_leader_user})
         {if_else
            {==
               {$leader get_track_type}
               kTrackNone}
            {do
               ($track
                  {basename
                     {$component name}})
               {$this
                  set_focus
                  {sprint
                     {$leader get_difficulty_sym}
                     ".btn"}}
               {$this update_track $track}
               {$this update}}
            {do
               ($diff
                  {basename
                     {$component name}})
               {user_mgr
                  foreach_user
                  $part_user
                  {if
                     {$part_user is_participating}
                     {if_else
                        {$part_user is_local}
                        {$part_user set_difficulty $diff}
                        {gamecfg set_remote_user_difficulty $part_user $diff}}}}
               {ui goto_screen loading_screen}}}}
      kDataUnhandled)
   (FOCUS_MSG
      {foreach
         $inst
         (guitar bass)
         {if
            {==
               {$new_focus name}
               {sprintf
                  "%s.btn"
                  $inst}}
            {difficulty.idd set instrument_type $inst}
            {difficulty.idd set_setlist}}})}
{new
   BandScreen
   h2h_seldiff_screen
   (panels meta background_panel postsong_sfx_panel h2h_seldiff_panel)
   (background_view seldiff)
   (focus h2h_seldiff_panel)
   (helpbar
      {if_else
         {is_leader_local}
         ((cancel helpbar_back)
            (confirm helpbar_choosediff))
         ()})
   (back song_select_screen)}
{new
   UIPanel
   h2h_ranked_preload_panel
   (enter
      {if
         {is_leader_local}
         {meta_performer
            set_song
            {song_mgr get_random_song}}}
      {user_mgr
         foreach_user
         $user
         {if
            {&&
               {$user is_participating}
               {$user is_local}}
            {$user
               set_difficulty
               {main_panel get difficulty}}}}
      {if
         {==
            {session num_users}
            2}
         {ui goto_screen loading_screen}})}
{new
   BandScreen
   h2h_ranked_preload_screen
   (panels meta background_panel song_sync_panel h2h_ranked_preload_panel)
   (focus h2h_ranked_preload_panel)}