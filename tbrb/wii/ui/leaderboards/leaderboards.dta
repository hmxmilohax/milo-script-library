{new
   HeldButtonPanel
   leaderboards_panel
   (file
      "leaderboards.milo")
   (focus leaderboard.lst)
   (allow_input_while_network_busy TRUE)
   (held_buttons
      (kAction_Option 0.2)
      #ifdef HX_WII
      (kAction_Option1 0.2)
      #endif)
   (read_done TRUE)
   (limits_array
      ())
   (set_limits
      ($a)
      {set
         [limits_array]
         $a})
   (load
      {content_loading_panel allowed_to_show TRUE})
   (finish_load
      {content_loading_panel allowed_to_show FALSE})
   (is_loaded
      {content_mgr refresh_done})
   (enter
      {leaderboards
         set_page_size
         {leaderboard.lst num_display}}
      {$this
         update_warning
         ""}
      {$this
         update_unranked
         ""}
      {leaderboards
         set_limits
         [limits_array]}
      {set
         [read_done]
         TRUE}
      {leaderboards enumerate}
      {$this update_titles}
      {$this
         update_filter
         {leaderboards get_filter}}
      {champ_name.lbl set_showing FALSE}
      {champ_score.lbl set_showing FALSE}
      {champ_pdiff.pdiff set_showing FALSE}
      {leaderboard.lst set_showing FALSE}
      {rank_number_1.lbl set_showing FALSE})
   (update_titles
      {song.lbl
         set
         text_token
         ""}
      {type.lbl
         set
         text_token
         ""}
      {switch
         {leaderboards get_type}
         (kPlayerSong
            {switch
               {leaderboards get_score_type}
               (kScoreGuitar
                  {title.lbl
                     set_token_fmt
                     (player_song guitar)})
               (kScoreBass
                  {title.lbl
                     set_token_fmt
                     (player_song bass)})
               (kScoreDrum
                  {title.lbl
                     set_token_fmt
                     (player_song track_drum)})
               (kScoreVocals
                  {title.lbl
                     set_token_fmt
                     (player_song leaderboards_solovocals)})
               (kScoreHarmony
                  {title.lbl
                     set_token_fmt
                     (player_song leaderboards_harmony)})
               (kScoreBand
                  {title.lbl set text_token band_leaderboards})}
            {if_else
               {==
                  {leaderboards get_song_sym}
                  career}
               {song.lbl set text_token career}
               {do
                  ($song_symbol
                     {leaderboards get_song_sym})
                  {if_else
                     {==
                        {song_mgr song_name $song_symbol}
                        ""}
                     {do
                        {song.lbl set text_token $song_symbol}
                        {title.lbl set text_token challenge_leaderboards}}
                     {song.lbl set_song_name $song_symbol}}}})
         (kScoreDuel
            {title.lbl set text_token h2h_pro})
         (kTugOfWar
            {title.lbl set text_token h2h_normal})}
      {type.lbl
         set
         icon
         {leaderboards get_track_type_char}}
      {if
         {==
            {leaderboards get_score_type}
            kScoreHarmony}
         {type.lbl
            set
            icon
            {get_font_char_for_harmony_mics 3}}}
      {instrument_type.grp set_showing TRUE})
   (update_filter
      ($type)
      {switch
         $type
         (kByAll
            {filter_title.lbl set text_token filter_gamer})
         (kByFriends
            {filter_title.lbl set text_token filter_friends})
         (kByLocal
            {filter_title.lbl set text_token filter_local})})
   (update_leaderboard
      {do
         ($num_data
            {{leaderboards get_provider}
               num_data})
         {leaderboard.lst set_provider leaderboards}
         {$this enable leaderboard.lst}
         {leaderboard.lst set_showing $num_data}
         {do
            ($user_pos
               {leaderboards get_user_pos})
            {if
               {> $user_pos 0}
               {leaderboard.lst set_selected $user_pos}}}
         {leaderboards set_champ_text champ_name.lbl name}
         {champ_name.lbl set_showing TRUE}
         {leaderboards set_champ_text champ_score.lbl score}
         {champ_score.lbl set_showing TRUE}
         {do
            ($players
               {leaderboards get_champ_num_players})
            ($diff
               {leaderboards get_champ_difficulty})
            {if_else
               {'||'
                  {==
                     {leaderboards get_song_sym}
                     career}
                  {&&
                     {== $players 0}
                     {== $diff 0}}}
               {champ_pdiff.pdiff set_showing FALSE}
               {do
                  {champ_pdiff.pdiff set_num_players_diff $players $diff}
                  {champ_pdiff.pdiff set_showing TRUE}}}}
         {rank_number_1.lbl set_showing $num_data}
         {$this update_helpbar}})
   (update_warning
      ($msg)
      {warning.lbl set_token_fmt $msg}
      {warning.lbl set_showing TRUE})
   (update_unranked
      ($msg)
      {unranked.lbl set_token_fmt $msg}
      {unranked.lbl set_showing TRUE})
   (exit
      {network_busy_panel set_busy FALSE}
      {leaderboards cancel_enumerate}
      {leaderboard.lst set_showing FALSE}
      {leaderboards destroy}
      {set
         [read_done]
         FALSE})
   (SCROLL_MSG
      {if
         {== $component leaderboard.lst}
         {handle
            (leaderboards
               set_user_pos
               {leaderboard.lst selected_pos})}})
   (BUTTON_DOWN_MSG
      {cond
         ({== $action kAction_Cancel}
            {leaderboard.lst set_showing FALSE}
            kDataUnhandled)
         ([read_done]
            {cond
               ({== $action kAction_ViewModify}
                  {play_instr_sfx $user button_shortcut}
                  {leaderboards rotate_filter})
               ({&&
                     {== $action kAction_Down}
                     {==
                        {leaderboard.lst selected_pos}
                        {-
                           {leaderboard.lst num_display}
                           1}}}
                  {leaderboards request_new_page TRUE}
                  {$this poll})
               ({&&
                     {== $action kAction_Up}
                     {==
                        {leaderboard.lst selected_pos}
                        0}}
                  {leaderboards request_new_page FALSE}
                  {$this poll})
               ({&&
                     {== $action kAction_Option}
                     {leaderboards enum_complete}}
                  {if
                     {$this can_use_shortcut}
                     {play_instr_sfx $user button_shortcut}
                     {leaderboards
                        next_landmark
                        {leaderboard.lst selected_pos}}
                     {$this poll}})
               #ifdef HX_WII
               ({&&
                     {== $action kAction_Option1}
                     {leaderboards enum_complete}}
                  {if
                     {$this can_use_shortcut}
                     {play_instr_sfx $user button_shortcut}
                     {leaderboards
                        next_landmark
                        {leaderboard.lst selected_pos}}
                     {$this poll}})
               #endif
               ({== $action kAction_Confirm}
                  {if_else
                     {leaderboards can_rows_be_selected}
                     kDataUnhandled
                     TRUE})
               (TRUE kDataUnhandled)})
         (TRUE kDataUnhandled)})
   (SELECT_MSG
      {if
         [read_done]
         {$this on_select $component $user}})
   (on_select
      ($component $user)
      {switch
         $component
         (leaderboard.lst
            {do
               ($result
                  {leaderboards
                     select_row
                     {leaderboard.lst selected_pos}
                     $user})
               {if
                  {!= $result ''}
                  {lb_signin_screen set error_msg $result}
                  {ui push_screen lb_signin_screen}}})}
      {$this poll})
   (poll
      {if
         {&&
            [read_done]
            {!
               {leaderboards enum_complete}}}
         {$this show_async_read}}
      {if
         {&&
            {!
               [read_done]}
            {leaderboards enum_complete}}
         {$this hide_async_read}
         {leaderboard.lst refresh}})
   (on_button_held
      ($user $raw_button $action $pad_num)
      {if
         {&&
            {!
               {input_mgr network_busy}}
            {{leaderboards get_shortcut_provider}
               num_data}
            {$this can_use_shortcut}}
         {leaderboards_shortcut_panel shortcut_enter $user}})
   (show_async_read
      {set
         [read_done]
         FALSE}
      {if
         {server is_connected}
         {network_busy_panel set_busy TRUE}})
   (hide_async_read
      {set
         [read_done]
         TRUE}
      {network_busy_panel set_busy FALSE})
   (can_use_shortcut
      {!
         {==
            {leaderboards get_filter}
            kByLocal}})
   (update_helpbar
      {helpbar
         set_config
         ((cancel helpbar_back)
            (view_modify leaderboard_changefilter))}
      {if
         {$this can_use_shortcut}
         {helpbar set_widget option leaderboard_next_friend leaderboard_friend_hold}}
      #ifdef HX_XBOX
      {helpbar set_widget confirm leader_hb_viewgamercard}
      #endif
      {if
         {==
            0
            {leaderboards num_data}}
         {helpbar set_widget confirm ''}
         {helpbar set_widget option ''}}
      {if
         {leaderboards get_offline}
         {helpbar set_widget view_modify ''}})}
{new
   UIPanel
   leaderboards_shortcut_panel
   (file
      "leaderboards_shortcut.milo")
   (enter
      {shortcut.grp set_showing FALSE})
   (exit
      {leaderboards_screen set_focus_panel leaderboards_panel})
   (shortcut_selected '')
   (shortcut_enter
      ($user)
      {play_instr_sfx $user button_shortcut}
      {leaderboards_screen set_focus_panel $this}
      {{leaderboards_panel find leaderboard.lst}
         set_state
         kComponentNormal}
      {shortcut.grp set_showing TRUE}
      {shortcut.lst
         set_provider
         {leaderboards get_shortcut_provider}}
      {shortcut.lst
         set_selected
         {leaderboards
            get_current_shortcut
            {{leaderboards_panel find leaderboard.lst}
               selected_pos}}}
      {set
         [shortcut_selected]
         {shortcut.lst selected_pos}}
      {helpbar
         set_config
         ((cancel helpbar_back)
            (confirm helpbar_select))})
   (shortcut_exit
      {leaderboards_screen set_focus_panel leaderboards_panel}
      {{leaderboards_panel find leaderboard.lst}
         set_state
         kComponentFocused}
      {shortcut.grp set_showing FALSE}
      {leaderboards_panel update_helpbar})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Cancel}
         {do
            {play_instr_sfx $user button_back}
            {$this shortcut_exit}}
         {handle
            (shortcut.lst
               button_down
               $user
               $raw_button
               {if_else
                  {== $action kAction_Start}
                  kAction_Confirm
                  $action}
               $pad_num)}})
   (BUTTON_UP_MSG
      #ifdef HX_WII
      {if
         {&&
            {leaderboards_panel get read_done}
            {== $action kAction_Option}}
         {$this on_select}}
      #endif
      {if_else
         {&&
            {leaderboards_panel get read_done}
            {== $action kAction_Option1}}
         {$this on_select}
         kDataUnhandled})
   (SELECT_MSG
      {$this on_select})
   (on_select
      {$this shortcut_exit}
      {leaderboards
         enumerate_landmark
         {shortcut.lst selected_pos}})}
{new
   UIPanel
   leaderboards_netwatcher_panel
   (file
      "")
   (return_screen main_popup_swapper)
   (return_screen_in_progress main_popup_swapper)
   (block_event
      ($event)
      {== $event lost_connection})
   (enter
      {platform_mgr
         add_sink
         $this
         (connection_status_changed)}
      {server
         add_sink
         $this
         (server_status_changed)})
   (exit
      {platform_mgr remove_sink $this connection_status_changed}
      {server remove_sink $this server_status_changed})
   (connection_status_changed
      ($connected)
      {if
         {&&
            {!
               {leaderboards get_offline}}
            {! $connected}}
         {$this leaderboards_io_error}})
   (server_status_changed
      ($connected)
      {if
         {&&
            {!
               {leaderboards get_offline}}
            {! $connected}}
         {$this leaderboards_io_error}})
   (leaderboards_io_error
      {set
         [return_screen_in_progress]
         [return_screen]}
      {ui_event_mgr trigger_event leaderboard_error})}
{new
   BandScreen
   leaderboards_screen
   (panels meta postsong_sfx_panel leaderboards_panel leaderboards_shortcut_panel leaderboards_netwatcher_panel)
   (focus leaderboards_panel)
   (back
      {do
         {switch
            {leaderboards get_type}
            (kPlayerSong
               {if_else
                  {find_elem
                     {story get_chapter_challenge_array}
                     {leaderboards get_song_sym}}
                  lb_chapter_select_screen
                  {do
                     {song_offer_provider set is_leaderboards TRUE}
                     lb_song_select_screen}})
            (kScoreDuel leaderboards_seltrack_screen)
            (kTugOfWar leaderboards_seltrack_screen)
            MAIN_MENU_RETURN_SCREEN}})
   (update_filter
      ($type)
      {leaderboards_panel update_filter $type})
   (TRANSITION_COMPLETE_MSG
      {leaderboards_panel update_helpbar})
   (BUTTON_DOWN_MSG
      {do
         ($list
            {leaderboards_panel find leaderboard.lst})
         {if_else
            {&&
               {$list is_scrolling}
               {'||'
                  {== $action kAction_Down}
                  {== $action kAction_Up}}}
            TRUE
            kDataUnhandled}})}
{new
   BandScreen
   lb_signin_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (error_msg '')
   (enter
      {dialog_panel
         set_ok
         [error_msg]})
   (SELECT_MSG
      {ui pop_screen})}
{new
   BandScreen
   lb_song_select_screen
   (panels meta background_panel lb_song_select_content_loading_panel postsong_sfx_panel leaderboards_netwatcher_panel song_select_details_panel song_select_panel song_select_shortcut_panel)
   COMMON_SONG_SELECT_SCREEN}
{new
   UIPanel
   lb_chapter_select_panel
   (file
      "../selvenue.milo")
   (focus venue.lst)
   (enter
      {venue.lst
         set_data
         {story get_chapter_challenge_array}}
      {if
         {leaderboards get_song_sym}
         {venue.lst
            set_selected
            {leaderboards get_song_sym}
            FALSE}}
      {choose_venue.lbl set text_token chapter_challenges})
   (exit
      {leaderboards
         set_highlight_sym
         {venue.lst selected_sym}})
   (SELECT_MSG
      {leaderboards set_band_user $user}
      {ui goto_screen leaderboards_screen})}
{new
   BandScreen
   lb_chapter_select_screen
   (panels meta postsong_sfx_panel background_panel main_popup_bg_panel leaderboards_netwatcher_panel lb_chapter_select_panel)
   (helpbar
      ((cancel helpbar_back)
         (confirm helpbar_select)))
   (focus lb_chapter_select_panel)
   (back main_screen_3_popup)}
{new
   UIPanel
   leaderboards_seltrack_panel
   (file
      "leaderboards_seltrack.milo")
   (focus guitar.btn)
   (enter
      {if_else
         {'||'
            {==
               {leaderboards get_type}
               kTugOfWar}
            {==
               {leaderboards get_type}
               kScoreDuel}}
         {do
            {$this disable harmony.btn}
            {harmony.btn set_showing FALSE}
            {vocals.btn set text_token vocals}
            {ranked_info.lbl set_showing TRUE}
            {xboxlb.anim set_frame 1}}
         {ranked_info.lbl set_showing FALSE}})
   (SELECT_MSG
      {leaderboards
         set_score_type
         {switch
            $component
            (guitar.btn kScoreGuitar)
            (bass.btn kScoreBass)
            (drums.btn kScoreDrum)
            (vocals.btn kScoreVocals)
            (harmony.btn kScoreHarmony)}}
      {if_else
         {==
            {leaderboards get_type}
            kPlayerSong}
         {do
            {song_offer_provider set is_leaderboards TRUE}
            {ui goto_screen lb_song_select_screen}}
         {ui goto_screen leaderboards_screen}})}
{new
   BandScreen
   leaderboards_seltrack_screen
   (panels meta postsong_sfx_panel background_panel main_popup_bg_panel leaderboards_seltrack_panel leaderboards_netwatcher_panel)
   (focus leaderboards_seltrack_panel)
   (helpbar
      ((cancel helpbar_back)
         (confirm helpbar_select)))
   (back main_screen_3_popup)
   (enter
      {do
         ($dir
            {background_panel loaded_dir})
         {if
            $dir
            {$dir change_view main_1}}})}