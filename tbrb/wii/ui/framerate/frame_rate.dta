{func
   base_venue
   ($venue)
   {cond
      ({has_substr $venue arena}
         arena)
      ({has_substr $venue big_club}
         big_club)
      ({has_substr $venue theater}
         theater)
      ({has_substr $venue small_club}
         small_club)
      ({has_substr $venue video}
         video)
      unknown}}
{new
   UIPanel
   frame_rate_panel
   (file
      "frame_rate.milo")
   (focus venue.lst)
   (load
      {content_mgr start_refresh})
   (is_loaded
      {content_mgr refresh_done})
   (enter
      {venue.lst
         set_data
         (budokan cavern rooftop shea sullivan abbeyroad01 abbeyroad01field abbeyroad01helter abbeyroad01hillside abbeyroad01ocean abbeyroad01ussr abbeyroad01wallfade abbeyroad01within field goodmorning hillside ocean pepperland performancespace01 performancespace02 performancespace02rev performancespace03 performancespace04 performancespace06 submarine walrus weeps basic birds birdwallpaper blankblack cloudy dotspath01 filmgrain fireworks01 fireworks02 herecomesthesun01 indian01 indian02 indian03 kaleido01 kaleido02 light_boke linedance lucykaleido moire01 moire02 moire03 projectionbird releanor rhelter rkaleido03 rlucyinthesky rsomething rsunraydots rsunrayparticle rsunraypoly russr silhouette starfield stripes01 stripes02 stripes03 stripes04 stripes05 stripes06 vines01 whitebackground within withinkaleido)}
      {measure.lst
         set_data
         (gs cpu)}
      {config.lst
         set_data
         (4_player vocal_2_gem 3_gem 2_gem vocal_1_gem 1_gem vocals)}
      {harmony.lst
         set_data
         (harmony solo)})
   (SELECT_MSG
      {do
         ($dreamscape
            {>
               {venue.lst selected_pos}
               4})
         ($greenscreen
            {>
               {venue.lst selected_pos}
               26})
         ($venue
            {if_else
               $dreamscape
               dreamscape
               {venue.lst selected_sym}})
         ($song framerate)
         ($song_venue
            {song_mgr venue $song})
         {do
            ($filename
               {sprint
                  "ui/framerate/venue_test/"
                  {venue.lst selected_sym}
                  "_"
                  {sysplatform_sym}
                  ".dta"})
            ($data_tag
               {symbol
                  {sprint
                     "shot_"
                     {measure.lst selected_sym}
                     "_sort"}})
            ($char_tag
               {symbol
                  {sprint
                     "char_"
                     {measure.lst selected_sym}}})
            ($file_data
               {read_file $filename})
            {if_else
               {>
                  {size $file_data}
                  0}
               {do
                  {gamemode set_mode frame_rate}
                  {set
                     $data
                     {elem
                        {find $file_data $data_tag}
                        1}}
                  {set
                     $force_outfits
                     {elem
                        {find $file_data $char_tag}
                        1}}
                  {set $composite_character_demand_load TRUE}
                  {set $composite_character_swap_gender TRUE}
                  {set $framerate_use_budget FALSE}
                  {set
                     $framerate_type
                     {measure.lst selected_sym}}
                  {setup_game
                     $song
                     $venue
                     {switch
                        {config.lst selected_sym}
                        (4_player
                           ((vocals kDifficultyExpert TRUE)
                              (drum kDifficultyExpert TRUE)
                              (bass kDifficultyExpert TRUE)
                              (guitar kDifficultyExpert TRUE)))
                        (vocal_2_gem
                           ((vocals kDifficultyExpert TRUE)
                              (drum kDifficultyExpert TRUE)
                              (guitar kDifficultyExpert TRUE)))
                        (3_gem
                           ((drum kDifficultyExpert TRUE)
                              (bass kDifficultyExpert TRUE)
                              (guitar kDifficultyExpert TRUE)))
                        (2_gem
                           ((bass kDifficultyExpert TRUE)
                              (guitar kDifficultyExpert TRUE)))
                        (vocal_1_gem
                           ((vocals kDifficultyExpert TRUE)
                              (guitar kDifficultyExpert TRUE)))
                        (1_gem
                           ((guitar kDifficultyExpert TRUE)))
                        (vocals
                           ((vocals kDifficultyExpert TRUE)))}}
                  {if_else
                     {==
                        {harmony.lst selected_sym}
                        harmony}
                     {meta_performer set_harmony_override TRUE}
                     {meta_performer set_harmony_override FALSE}}
                  {set $force_scene ''}
                  {set $force_minivenue ''}
                  {if
                     $dreamscape
                     {if_else
                        $greenscreen
                        {set
                           $force_scene
                           {venue.lst selected_sym}}
                        {set
                           $force_minivenue
                           {venue.lst selected_sym}}}}
                  {set $fake_controllers TRUE}
                  {ui goto_screen loading_screen}}
               {cheat_display
                  show
                  {sprint
                     "framerate mode: no CRB data for "
                     {venue.lst selected_sym}
                     " on "
                     {sysplatform_sym}
                     ", wait for new build"}}}}})}
{func
   frame_rate_force_venue
   {if
      $force_scene
      {$p9director force_scene $force_scene}}
   {if
      $force_minivenue
      {$p9director force_minivenue $force_minivenue}}
   {$p9director force_outfits $force_outfits}}
{new
   BandScreen
   frame_rate_screen
   (panels frame_rate_panel)}
{new
   UIPanel
   frame_rate_game_panel
   (enter
      {handle
         ($p9director set disable_picking 1)}
      {set $shot 0}
      {frame_rate_game_screen update_shot}
      {beatmatch
         foreach_active_player
         $p
         {handle
            ($p set_auto_play_error 34)}
         {handle
            ($p set_permanent_overdrive TRUE)}})}
{new
   BandScreen
   frame_rate_game_screen
   (panels game world_panel coop_track_panel frame_rate_game_panel sync_audio_net_panel)
   GAME_SCREEN_HANDLERS
   (back splash_screen)
   (BUTTON_DOWN_MSG
      {switch
         $raw_button
         (kPad_X
            {'++' $shot}
            {if
               {==
                  $shot
                  {size $data}}
               {set $shot 0}}
            {$this update_shot})
         (kPad_Tri
            {-- $shot}
            {if
               {== $shot -1}
               {set
                  $shot
                  {-
                     {size $data}
                     1}}}
            {$this update_shot})
         (kPad_Circle
            {'+=' $shot 10}
            {if
               {>=
                  $shot
                  {size $data}}
               {set $shot 0}}
            {$this update_shot})
         (kPad_Square
            {-= $shot 10}
            {if
               {<= $shot -1}
               {set
                  $shot
                  {-
                     {size $data}
                     1}}}
            {$this update_shot})
         (kPad_DUp
            {print
               "[EJA Mark],"
               $shot
               ","
               {elem
                  {find
                     {elem $data $shot}
                     shot}
                  1}
               "\n"})
         kDataUnhandled})
   (update_shot
      {do
         ($source
            {$p9director camera_source})
         ($datum
            {elem $data $shot})
         ($i
            {elem
               {find $datum shot}
               1})
         ($j0
            {elem
               {find $datum postproc}
               1})
         ($j1
            {elem
               {find $datum postproc}
               2})
         ($k
            {elem
               {find $datum trigger}
               1})
         ($presets
            {find $datum preset})
         ($p9configuration
            {elem
               {find $datum p9configuration}
               1})
         ($instruments
            {find $datum instruments})
         ($world_shot
            {$source find $i FALSE})
         ($world_procA
            {$source find $j0 FALSE})
         ($world_procB
            {$source find $j1 FALSE})
         ($presetA
            {elem $presets 1})
         ($presetB
            {elem $presets 2})
         ($world_pp
            {$source find world.pp})
         {if_else
            $world_shot
            {cond
               ({!
                     {$world_shot platform_ok}}
                  {cheat_display
                     show
                     {sprint
                        "wrong platform: "
                        $i}})
               ({!
                     {$world_shot get enabled}}
                  {cheat_display
                     show
                     {sprint
                        "shot disabled: "
                        $i}})
               {handle
                  ($world start)}
               {handle
                  ($world intro_start)}
               {$p9director set force_configuration $p9configuration}
               {$world force_shot $world_shot}
               {$p9director force_trigger $k}
               {$p9director force_preset_blend $presetA $presetB}
               {foreach_int
                  $nt
                  0
                  4
                  {do
                     ($char
                        {$p9director get_character $nt})
                     ($inst
                        {elem
                           {find
                              $instruments
                              {symbol
                                 {$char name}}}
                           1})
                     {$char set instrument_index $inst}}}
               {$world_pp select}
               {$world_pp set force_current_interp FALSE}
               {$world_pp interp $world_procA $world_procB 0.5}
               {$world_pp set force_current_interp TRUE}
               {cheat_display
                  show
                  {sprint
                     $shot
                     ": "
                     $i
                     " "
                     $j
                     " "
                     $k}}}
            {cheat_display
               show
               {sprint
                  "couldn't find: "
                  $i}}}})}