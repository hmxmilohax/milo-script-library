#define CROWD_AUDIO_HANDLERS
()
(P9CrowdAudio
   (init
      {$this set_type proj9})
   (types
      (proj9
         (results_duck -96)
         (clap_early_amount_ms 75)
         (crowd_volume -0.0)
         (results_fade_ms 120000)
         (venue_change_fade_ms 2000)
         (closeup_fade_ms 1250)
         (fade_in_from_loading_ms 2000)
         (crossfade_ms 3000)
         (intro_start
            {$this play_intro})
         (intro_skip
            {$this play_intro})
         (enter
            {if
               {exists gamemode}
               {set
                  [crowd_reacts]
                  {gamemode get crowd_reacts}}})
         (exit
            {synth stop win_4.cue TRUE}
            {synth stop win_5.cue TRUE})
         (venue_change_imminent
            {&&
               {exists meta_performer}
               {<
                  {'+'
                     {meta_performer num_completed}
                     1}
                  {meta_performer num_songs}}
               {meta_performer is_next_song_in_different_venue FALSE}})
         (want_outro_duck
            {&&
               {exists meta_performer}
               {meta_performer is_last_song}})
         (game_lost
            {$this on_lose})
         (music_end
            {unless
               {$this done}
               {unless
                  {'||'
                     {==
                        ''
                        {meta_performer song}}
                     {song_mgr
                        mute_win_cues
                        {meta_performer song}}}
                  {do
                     ($cue win_5.cue)
                     {if
                        {gamemode is_band_arrangement}
                        {do
                           ($num_stars
                              {{band_0 main_performer}
                                 num_stars})
                           {if
                              {< $num_stars 5}
                              {set $cue win_4.cue}}}}
                     {$this play_sequence $cue FALSE}}}
               {$this on_win}})
         (end
            {$this on_end})
         (coda_success
            {bre_success.cue stop}
            {bre_success.cue play})
         (coda_blown
            {bre_fail.cue play})
         (finale
            ($type))
         #ifdef HX_WII
         (streams
            (intro
               crowd_intro.cue
               (pan -3 3))
            (levels
               (kExcitementBoot
                  crowd_danger.cue
                  (pan -3 3))
               (kExcitementBad
                  crowd_poor.cue
                  (pan -3 3))
               (kExcitementOkay
                  crowd_norm.cue
                  (pan -3 3))
               (kExcitementGreat
                  crowd_good.cue
                  (pan -3 3))
               (kExcitementPeak
                  crowd_peak.cue
                  (pan -3 3)))
            (venue_intro
               venue_intro.bik
               (pan -3 3))
            (venue_outro
               venue_outro.bik
               (pan -3 3)))
         #else
         (streams
            (intro
               crowd_intro.mogg
               (pan -3 3))
            (levels
               (kExcitementBoot
                  crowd_danger.mogg
                  (pan -3 3))
               (kExcitementBad
                  crowd_poor.mogg
                  (pan -3 3))
               (kExcitementOkay
                  crowd_norm.mogg
                  (pan -3 3))
               (kExcitementGreat
                  crowd_good.mogg
                  (pan -3 3))
               (kExcitementPeak
                  crowd_peak.mogg
                  (pan -3 3)))
            (venue_intro
               venue_intro.mogg
               (pan -3 3))
            (venue_outro
               venue_outro.mogg
               (pan -3 3)))
         #endif)))
(SynthDir
   (types
      (crowd_audio_bank
         (editor
            (deploy_volume_modifier
               float
               (help
                  "The amount (in dB) by which to change crowd audio volume when any player is deploying."))
            (deploy_ramp_up_time
               float
               (help
                  "The time (in ms) over which to fade the crowd audio to its modified level when the first player starts deploying."))
            (deploy_ramp_down_time
               float
               (help
                  "The time (in ms) over which to fade the crowd audio to its normal level when the last player stops deploying."))
            (deploy_boost_timeout
               float
               (help
                  "The minimum time after playing the crowd_boost cue before it can be played again. This prevents unwanted layering of the sound when several players deploy at almost the same time."))
            (realistic_mode_boost
               float
               (help
                  "The volume boost (in dB) for this venue when realistic mode is active. Use 0.0 for non-realistic-mode venues.")))
         (deploy_volume_modifier 0)
         (deploy_ramp_up_time 1000)
         (deploy_ramp_down_time 1000)
         (deploy_boost_timeout 3000)
         (realistic_mode_boost 0)
         (play_crowd_closeup
            {if
               $p9crowdaudio
               {$p9crowdaudio play_crowd_closeup}})
         (stop_crowd_closeup
            {if
               $p9crowdaudio
               {$p9crowdaudio stop_crowd_closeup}}))))