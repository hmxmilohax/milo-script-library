(tracks
   (instrument
      (type guitar)
      (instrument instrument0)))
(critical_categories george john paul ringo)
(chars
   ("char/george/george.milo"
      (cats historical instrument0)
      (instruments guitar bass mic piano sitar)
      (category george))
   ("char/john/john.milo"
      (cats historical)
      (instruments guitar bass mic piano)
      (category john))
   ("char/paul/paul.milo"
      (cats historical)
      (instruments guitar bass mic piano)
      (category paul))
   ("char/ringo/ringo.milo"
      (cats historical instrument0)
      (instruments drum)
      (category ringo))
   ("char/crowd/crowd_*.milo"
      (category crowd))
   ("char/extras/*.milo"
      (category extras))
   ("char/prop/mixer.milo"
      (cats mixer)
      (category prop))
   ("char/prop/*.milo"
      (cats amps)
      (category prop)))
(group
   (cats historical)
   ("char/george/george.milo")
   ("char/john/john.milo")
   ("char/paul/paul.milo")
   ("char/ringo/ringo.milo"))
(category_map
   (george beatle)
   (john beatle)
   (paul beatle)
   (ringo beatle)
   (historical outfits_everyone)
   (george_historical outfits_george)
   (paul_historical outfits_paul)
   (john_historical outfits_john)
   (ringo_historical outfits_ringo)
   (bass instrument_bass)
   (drum instrument_drum)
   (guitar instrument_guitar)
   (piano instrument_piano)
   (sitar instrument_sitar)
   (george_amp_amps amp_george)
   (john_amp_amps amp_john)
   (paul_amp_amps amp_paul)
   (mixer_mixer mixer))
(expensive_map
   (george_historical george_historical)
   (paul_historical paul_historical)
   (john_historical john_historical)
   (ringo_historical ringo_historical)
   (bass george_instruments paul_instruments john_instruments)
   (drum ringo_instruments)
   (guitar george_instruments paul_instruments john_instruments)
   (piano george_pianos paul_pianos john_pianos)
   (sitar george_sitars)
   (george_amp_amps george_amp)
   (john_amp_amps john_amp)
   (paul_amp_amps paul_amp)
   (mixer_mixer mixer))
(set_loader
   ($loader $cat $outfit)
   {if
      {!= $outfit none}
      {switch
         $cat
         (facehair
            {do
               ($head
                  {substr
                     $outfit
                     0
                     {if_else
                        {==
                           {str_elem $outfit 6}
                           _}
                        6
                        7}})
               {$loader select heads $head}})
         (glasses
            {$loader select heads head_1})}})
(change_camera
   ($cat $outfit)
   {switch
      $cat
      (historical
         {char_test set_camera 0 150 -4 bone_pelvis})
      (instrument0
         {char_test set_camera 0 250 -10 bone_pelvis})
      (amps)
      (mixer)
      {print
         "unknown category: "
         $cat
         "\n"}
      {char_test set_camera 0 150 -20 bone_pelvis}})
(make_file
   ($gender $track)
   {sprint
      "char/"
      $gender
      "/"
      $gender
      ".milo"})
(get_gender
   ($obj $dir)
   {$dir name})
(get_instrument
   ($cat $outfit)
   {substr
      $outfit
      0
      {find_substr
         $outfit
         "_"}})
(make_prefab
   ($gender $outfits $name $cost)
   {do
      ($outfit_copy
         {array $outfits})
      {push_back
         $outfit_copy
         (eyes
            head_1_eyes_1
            (colors 0 0))}
      {push_back
         $outfit_copy
         (lips
            head_1_lips_1
            (colors 0 0))}
      {array
         ($name
            (gender $gender)
            (cost $cost)
            (selectable FALSE)
            (valid FALSE)
            (instrument vocals)
            (attitude kGenreBanger)
            (skin_color_index 0)
            (eye_color_index 0)
            (eyebrow_color_index 0)
            (weight 0.5)
            (height 0.5)
            $outfit_copy)}})
(animate_face
   ($char)
   {if
      {$char exists expression.drv}
      {{$char find expression.drv}
         play_group
         normal}})