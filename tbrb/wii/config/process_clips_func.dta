#autorun
{func
   freeze_bones
   ($dir)
   {$dir
      iterate_self
      CharClip
      $clip
      {do
         ($bones
            {array 0})
         {switch
            {$clip get_type}
            ((guitar_body_left guitar_body_right drum_body)
               {if
                  {==
                     {&
                        {$clip get flags}
                        kP9LeftArm}
                     0}
                  {insert_elems
                     $bones
                     0
                     (bone_L-hand.pos bone_L-hand.quat bone_L-index01.quat bone_L-index02.rotz bone_L-index03.rotz bone_L-middlefinger01.quat bone_L-middlefinger02.rotz bone_L-middlefinger03.rotz bone_L-pinky01.quat bone_L-pinky02.rotz bone_L-pinky03.rotz bone_L-ringfinger01.quat bone_L-ringfinger02.rotz bone_L-ringfinger03.rotz bone_L_thumb01.quat bone_L_thumb02.rotz bone_L_thumb03.rotz)}}
               {if
                  {==
                     {&
                        {$clip get flags}
                        kP9RightArm}
                     0}
                  {insert_elems
                     $bones
                     0
                     (bone_R-hand.pos bone_R-hand.quat bone_R-index01.quat bone_R-index02.rotz bone_R-index03.rotz bone_R-middlefinger01.quat bone_R-middlefinger02.rotz bone_R-middlefinger03.rotz bone_R-pinky01.quat bone_R-pinky02.rotz bone_R-pinky03.rotz bone_R-ringfinger01.quat bone_R-ringfinger02.rotz bone_R-ringfinger03.rotz bone_R_thumb01.quat bone_R_thumb02.rotz bone_R_thumb03.rotz)}})
            (extras
               {if
                  0
                  {insert_elems
                     $bones
                     0
                     (bone_L-ankle.quat bone_L-knee.rotz bone_L-thigh.quat bone_L-toe.rotz bone_R-ankle.quat bone_R-knee.rotz bone_R-thigh.quat bone_R-toe.rotz)}})}
         {if
            {size $bones}
            {$clip freeze_bones $bones}}}}}
#define MAIN_BODY_COMPRESSION
((tolerance 6.0)
   (bones
      (bone_R-ankle.mesh
         (weight 0.85))
      (bone_L-ankle.mesh
         (weight 0.85))
      (bone_R-hand.mesh)
      (bone_L-hand.mesh)
      (bone_L-index03.mesh)
      (bone_L-middlefinger03.mesh)
      (bone_L-ringfinger03.mesh)
      (bone_L-pinky03.mesh)
      (bone_L-thumb03.mesh)
      (bone_R-index03.mesh)
      (bone_R-middlefinger03.mesh)
      (bone_R-ringfinger03.mesh)
      (bone_R-pinky03.mesh)
      (bone_R-thumb03.mesh)
      (bone_head.mesh
         (weight 1.5)
         (offset 3 6 0))
      (bone_head.mesh
         (weight 1.5)
         (offset -2 6 0))
      (bone_footik.mesh
         (weight 2))))
#define EXTRAS_COMPRESSION
((tolerance 8.0)
   (bones
      (bone_R-ankle.mesh
         (weight 0.85))
      (bone_L-ankle.mesh
         (weight 0.85))
      (bone_R-hand.mesh)
      (bone_L-hand.mesh)
      (bone_L-index03.mesh)
      (bone_L-middlefinger03.mesh)
      (bone_L-ringfinger03.mesh)
      (bone_L-pinky03.mesh)
      (bone_L-thumb03.mesh)
      (bone_R-index03.mesh)
      (bone_R-middlefinger03.mesh)
      (bone_R-ringfinger03.mesh)
      (bone_R-pinky03.mesh)
      (bone_R-thumb03.mesh)
      (bone_head.mesh
         (weight 1.5)
         (offset 3 6 0))
      (bone_head.mesh
         (weight 1.5)
         (offset -2 6 0))
      (bone_jaw.mesh)))
#define CROWD_COMPRESSION
((tolerance 8.0)
   (bones
      (bone_R-ankle.mesh
         (weight 0.85))
      (bone_L-ankle.mesh
         (weight 0.85))
      (bone_R-hand.mesh)
      (bone_L-hand.mesh)
      (bone_head.mesh
         (weight 1.5)
         (offset 3 6 0))
      (bone_head.mesh
         (weight 1.5)
         (offset -2 6 0))))
#define kP9SingIdleRealtime
(4352)
#define kP9SingIdle
(8448)
#define kP9SingIdleMellow
(16640)
#define kP9SingMellow
(33024)
#define kP9SingNormal
(65792)
#define kP9SingEnergetic
(131328)
#define kP9SingHold
(262400)
#define kP9NoSingIdleRealtime
(4608)
#define kP9NoSingIdle
(8704)
#define kP9NoSingIdleMellow
(16896)
#define kP9NoSingMellow
(33280)
#define kP9NoSingNormal
(66048)
#define kP9NoSingEnergetic
(131584)
#define kP9NoSingHold
(262656)
#define ANIM_LIMITS
((stand
      ((kP9SingIdleRealtime 2)
         (kP9SingIdle 2)
         (kP9SingIdleMellow 2)
         (kP9SingMellow 2)
         (kP9SingNormal 2)
         (kP9SingEnergetic 2)
         (kP9SingHold 2)
         (kP9NoSingIdleRealtime 2)
         (kP9NoSingIdle 2)
         (kP9NoSingIdleMellow 2)
         (kP9NoSingMellow 2)
         (kP9NoSingNormal 2)
         (kP9NoSingEnergetic 2)
         (kP9NoSingHold 2)))
   (sit
      ((kP9SingIdleRealtime 2)
         (kP9SingIdle 2)
         (kP9SingIdleMellow 2)
         (kP9SingMellow 2)
         (kP9SingNormal 2)
         (kP9SingEnergetic 2)
         (kP9SingHold 2)
         (kP9NoSingIdleRealtime 2)
         (kP9NoSingIdle 2)
         (kP9NoSingIdleMellow 2)
         (kP9NoSingMellow 2)
         (kP9NoSingNormal 2)
         (kP9NoSingEnergetic 2)
         (kP9NoSingHold 2))))
#autorun
{func
   process_clips
   ($dir)
   {if
      {$dir is_a CharClipSet}
      {do
         ($path
            {$dir get_path_name})
         {print
            "loading "
            $path
            "\n"}
         {set
            $loaded_dir
            {load_objects $path}}
         {search_replace
            $path
            "anim_src/"
            ""
            $path}
         {$dir perforce_sync $path}
         {if
            {find_elem
               (guitar_body_left guitar_body_right keyboard drum_body)
               {$dir get_type}}
            {do
               ($beatle '')
               {foreach
                  $b
                  (george john paul ringo)
                  {if
                     {has_substr $path $b}
                     {set $beatle $b}}}
               {set
                  $beatle
                  {load_objects
                     {sprint
                        "char/"
                        $beatle
                        "/"
                        $beatle
                        ".milo"}}}
               {$beatle
                  iterate_self
                  CharIKFoot
                  $ikfoot
                  {$loaded_dir
                     iterate_self
                     CharClip
                     $clip
                     {$ikfoot analyze $clip}}}
               {delete $beatle}}}
         {freeze_bones $loaded_dir}
         {$loaded_dir
            iterate_self
            CharClip
            $c
            {$c
               set_note
               ""}
            {$c change_compression kCompressVects}}
         {set
            $comparray
            {switch
               {$dir get_type}
               ((guitar_body_left guitar_body_right keyboard drum_body)
                  (MAIN_BODY_COMPRESSION))
               (crowd
                  (CROWD_COMPRESSION))
               (extras
                  (EXTRAS_COMPRESSION))
               0}}
         {if
            $comparray
            {char_compress_clips $loaded_dir $comparray kCompressionDistanceAndSpeed 0}}
         {switch
            {$dir get_type}
            ((guitar_body_left guitar_body_right keyboard drum_body)
               {print
                  "Deleting Variants for type "
                  {$dir get_type}
                  " with limits\n"}
               {set
                  $limarray
                  (ANIM_LIMITS)}
               {char_delete_variants
                  $loaded_dir
                  {'|' kP9PlayDirectedCut kP9NotSinging kP9Singing}
                  ""
                  $limarray})}
         {print
            "saving out to "
            $path
            "\n"}
         {$loaded_dir perforce_save $path}}}}