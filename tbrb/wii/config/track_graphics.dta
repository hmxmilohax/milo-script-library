#define GUITAR_SET
((0
      (normal gem_green.wid)
      (normal_hopo gem_green_hopo.wid)
      (star star_gem.wid)
      (star_hopo star_hopo.wid)
      (unison star_gem.wid)
      (unison_hopo star_hopo.wid)
      (miss gem_miss.wid)
      (miss_hopo gem_miss_hopo.wid)
      (caps gem_caps.wid)
      (caps_hopo gem_hopo_caps.wid)
      (mash gem_mash0.wid))
   (1
      (normal gem_red.wid)
      (normal_hopo gem_red_hopo.wid)
      (star star_gem.wid)
      (star_hopo star_hopo.wid)
      (unison star_gem.wid)
      (unison_hopo star_hopo.wid)
      (miss gem_miss.wid)
      (miss_hopo gem_miss_hopo.wid)
      (caps gem_caps.wid)
      (caps_hopo gem_hopo_caps.wid)
      (mash gem_mash1.wid))
   (2
      (normal gem_yellow.wid)
      (normal_hopo gem_yellow_hopo.wid)
      (star star_gem.wid)
      (star_hopo star_hopo.wid)
      (unison star_gem.wid)
      (unison_hopo star_hopo.wid)
      (miss gem_miss.wid)
      (miss_hopo gem_miss_hopo.wid)
      (caps gem_caps.wid)
      (caps_hopo gem_hopo_caps.wid)
      (mash gem_mash2.wid))
   (3
      (normal gem_blue.wid)
      (normal_hopo gem_blue_hopo.wid)
      (star star_gem.wid)
      (star_hopo star_hopo.wid)
      (unison star_gem.wid)
      (unison_hopo star_hopo.wid)
      (miss gem_miss.wid)
      (miss_hopo gem_miss_hopo.wid)
      (caps gem_caps.wid)
      (caps_hopo gem_hopo_caps.wid)
      (mash gem_mash3.wid))
   (4
      (normal gem_orange.wid)
      (normal_hopo gem_orange_hopo.wid)
      (star star_gem.wid)
      (star_hopo star_hopo.wid)
      (unison_hopo star_hopo.wid)
      (unison star_gem.wid)
      (miss gem_miss.wid)
      (miss_hopo gem_miss_hopo.wid)
      (caps gem_caps.wid)
      (caps_hopo gem_hopo_caps.wid)
      (mash gem_mash4.wid)))
#define DRUM_SET
((0
      (normal gem_kick.wid)
      (star star_kick.wid)
      (unison star_kick.wid)
      (miss kick_miss.wid)
      (caps kick_caps.wid)
      (dim drum_kick_dim.wid))
   (1
      (normal drum_red.wid)
      (tom drum_red.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash1.wid)
      (caps drum_caps.wid)
      (dim drum_red_dim.wid))
   (2
      (normal drum_yellow.wid)
      (tom drum_yellow.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash2.wid)
      (caps drum_caps.wid)
      (dim drum_yellow_dim.wid))
   (3
      (normal drum_blue.wid)
      (tom drum_blue.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash3.wid)
      (caps drum_caps.wid)
      (dim drum_blue_dim.wid))
   (4
      (normal drum_green.wid)
      (tom drum_green.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash4.wid)
      (caps drum_caps.wid)
      (crash dynamic_crash_gem.wid)
      (beard dynamic_crash_beard.wid)
      (dim drum_green_dim.wid)))
#define DRUM_LEFTY
((0
      (normal gem_kick.wid)
      (star star_kick.wid)
      (unison star_kick.wid)
      (miss kick_miss.wid)
      (caps kick_caps.wid)
      (dim drum_kick_dim.wid))
   (1
      (normal drum_green.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash4.wid)
      (caps drum_caps.wid)
      (dim drum_green_dim.wid))
   (2
      (normal drum_blue.wid)
      (tom drum_blue.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash3.wid)
      (caps drum_caps.wid)
      (dim drum_blue_dim.wid))
   (3
      (normal drum_yellow.wid)
      (tom drum_yellow.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash2.wid)
      (caps drum_caps.wid)
      (dim drum_yellow_dim.wid))
   (4
      (normal drum_red.wid)
      (tom drum_red.wid)
      (star drum_star.wid)
      (unison drum_star.wid)
      (miss drum_miss.wid)
      (mash drum_mash1.wid)
      (caps drum_caps.wid)
      (crash dynamic_crash_gem_lefty.wid)
      (beard dynamic_crash_beard_lefty.wid)
      (dim drum_red_dim.wid)))
(use_char_tex TRUE)
(slot_colors green red yellow blue orange)
(gem
   (fps 30)
   (mat_formats
      (gem 'gem_%s')
      (tail 'tail_%s')
      (tail_glow 'tail_glow_%s')
      (star 'gem_starpower_%s')
      (dot 'dot_top_hopo2_%s'))
   (tail_glow_width 0.25)
   (tail_glow_tight_width 1.2)
   (sparkle_len 1000)
   (tail_pulse_rate 32)
   (tail_pulse_smoothing 0.3)
   (tail_offset_x 0.1)
   (tail_min_alpha 0.3)
   (tail_max_alpha 1)
   (tail_alpha_smoothing 0.25)
   (tail_fade_distance 30)
   (tail_min_freq 15)
   (tail_max_freq 4.5)
   (tail_min_amp 0.15)
   (tail_max_amp 0.9)
   (parts
      ((gem
            (type kMeshGem))
         (glow
            (type kMeshGemGlow))
         (top
            (type kMeshTop))
         (miss
            (type kMeshGemMiss)
            (default kMeshGem))
         (hopo
            (type kMeshHopoTop)
            (default kMeshTop))
         (star
            (type kMeshStar)
            (default kMeshGem))
         (top_star
            (type kMeshStarTop)
            (default kMeshTop))
         (gem_bonus
            (type kMeshBonus)
            (default kMeshGem))
         (gem_bonus2
            (type kMeshBonus2)
            (default kMeshGem))))
   (gems
      (guitar GUITAR_SET)
      (bass GUITAR_SET)
      (drum DRUM_SET)
      (drum_lefty DRUM_LEFTY))
   (widths
      (kick_line4 4)
      (snare_red3 3)
      (snare_orange3 3)))
(nowbar_tail_clip 1.5)
(show_phoneme_tubes TRUE)
(allow_tube_glow TRUE)
(lyric_overlap_ms 100)
(static_vocal_parameters
   (static_deploy_x_size 2.0)
   (static_phrase_margin_x 0.1)
   (static_deploy_buffer_x 0.5)
   (lyric_shift_ms 100 20)
   (lyric_shift_anticipation_ms 500)
   (min_lyric_highlight_ms 120)
   (phrase_highlight_ms 500))
(pulse_offset 0.1)
(ghost_arrow_duration 1000.0)