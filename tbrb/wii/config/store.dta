#ifdef HX_XBOX
(netcache_init
   "netcache"
   store_cache_name
   512
   204800
   "Harmonix"
   1414924241
   (servers
      (live
         (server
            "")
         (port 1000)
         (index
            "store_index_xbox_%s_%s.dtz")
         (root
            "/p9/xbox/live/"))
      #ifndef _SHIP
      (prelive
         (server
            "")
         (port 1000)
         (index
            "store_index_xbox_%s_%s.dtz")
         (root
            "/p9/xbox/prelive/"))
      (test
         (server
            "")
         (port 1000)
         (index
            "store_index_xbox_%s_%s.dtz")
         (root
            "/p9/xbox/test/"))
      (test_server_down
         (server
            "")
         (port 1000)
         (index
            "store_index_none_%s_%s.dtz")
         (root
            "/p9/xbox/live/"))
      (local
         (local TRUE)
         (index
            "store_index_xbox.dta")
         (root
            "test/remote_metadata"))
      #endif)
   #ifdef _SHIP
   (default_server live)
   #else
   (default_server prelive)
   #endif)
#else
#ifdef HX_PS3
(netcache_init
   "netcache"
   title_name
   512
   204800
   ""
   0
   (servers
      (live
         (server
            "ps3-meta.rockband.com")
         (port 443)
         (root
            "/p9/ps3/live/")
         (index
            "store_index_ps3_%s_%s.dtz")
         (verify_ssl TRUE))
      #ifndef _SHIP
      (prelive
         (server
            "p9ps3test-store.hmxservices.com")
         (port 443)
         (root
            "/p9/ps3/prelive/")
         (index
            "store_index_ps3_%s_%s.dtz")
         (verify_ssl FALSE))
      (test
         (server
            "p9ps3test-store.hmxservices.com")
         (port 443)
         (root
            "/p9/ps3/test/")
         (index
            "store_index_ps3_%s_%s.dtz")
         (verify_ssl FALSE))
      (test_server_down
         (server
            "p9ps3test-store.hmxservices.com")
         (port 443)
         (root
            "/p9/ps3/test/")
         (index
            "store_index_none_%s_%s.dtz")
         (verify_ssl FALSE))
      (local
         (local TRUE)
         (index
            "store_index_ps3.dta")
         (root
            "test/remote_metadata"))
      #endif)
   (default_server live))
(titles proj9)
(terms_of_service
   #ifdef REGION_EUROPE
   (deu
      "Der Download unterliegt den Nutzungsbedingungen und Endbenutzervereinbarung von PlayStation®Network und jedweden für diesen Artikel geltenden Zusatzbedingungen. Wenn Sie diese Bedingungen nicht akzeptieren, laden Sie diesen Artikel nicht herunter.")
   (eng
      "Download is subject to the PlayStation®Network Terms of Service and User Agreement and any specific additional conditions applying to this item. If you do not wish to accept these terms, do not download this item.")
   (esl
      "La descarga está sujeta a los Términos de servicio y Acuerdo de usuario de PlayStation®Network y cualquier condición adicional específica que cubra este artículo. Si no desea aceptar estos términos, no descargue este artículo.")
   (fre
      "Le téléchargement est soumis aux Conditions d'utilisation et Accord utilisateur de PlayStation®Network ainsi qu'à toutes conditions supplémentaires concernant spécifiquement cet article. Si vous ne souhaitez pas accepter ces conditions, ne téléchargez pas l'article.")
   (ita
      "I contenuti scaricabili sono soggetti ai Termini di servizio e Condizioni d'uso di PlayStation®Network e a qualsiasi altra condizione supplementare specifica applicabile a questo scopo. Se non si desidera accettare questi Termini, non scaricare questo articolo.")
   #else
   (eng
      "Purchase and use of this item is subject to the PlayStation®Network Terms of Service and User Agreement. This item has been sublicensed to you by Sony Computer Entertainment America.")
   (esl
      "La compra o uso de este artículo está sujeto a los Términos de Servicio de PlayStation®Network. Si no desea aceptar todos estos términos, no compre o utilice este artículo.")
   (fre
      "L'achat ou l'utilisation de cet article sont soumis aux conditions générales de services de PlayStation®Network. La sous-licence afférente à cet article vous a été octroyée par Sony Computer Entertainment America.")
   #endif)
#else
#ifdef HX_WII
(netcache_init
   "netcache"
   title_name
   512
   204800
   ""
   0
   (servers
      (live
         (server
            "ps3-meta.rockband.com")
         (port 443)
         (root
            "/p9/wii/live/")
         (index
            "store_index_wii_%s_%s.dtz")
         (assetpath
            "")
         (key_path
            "base64_1.key")
         (key_path2
            "base64_2.key")
         (verify_ssl TRUE))
      #ifndef _SHIP
      (prelive
         (server
            "p9wiitest-store.hmxservices.com")
         (port 443)
         (root
            "/p9/wii/prelive/")
         (index
            "store_index_wii_%s_%s.dtz")
         (assetpath
            "")
         (key_path
            "base64_1.key")
         (key_path2
            "base64_2.key")
         (verify_ssl FALSE))
      (test
         (server
            "p9wiitest-store.hmxservices.com")
         (port 443)
         (root
            "/p9/wii/test/")
         (index
            "store_index_wii_%s_%s.dtz")
         (assetpath
            "")
         (key_path
            "base64_1.key")
         (key_path2
            "base64_2.key")
         (verify_ssl FALSE))
      (test_server_down
         (server
            "")
         (port 1000)
         (index
            "store_index_none_%s_%s.dtz")
         (root
            "/p9/wii/live/")
         (assetpath
            "")
         (key_path
            "base64_1.key")
         (key_path2
            "base64_2.key")
         (verify_ssl FALSE))
      (local
         (local TRUE)
         (index
            "store_index_wii.dta")
         (root
            "test/remote_metadata")
         (assetpath
            "")
         (key_path
            "base64_1.key")
         (key_path2
            "base64_2.key")
         (verify_ssl FALSE))
      #endif)
   #ifdef _SHIP
   (default_server live)
   #else
   (default_server live)
   #endif)
#ifdef REGION_EUROPE
(titles
   "r9JP")
#else
(titles
   "r9JE")
#endif
#else
(netcache_init
   "netcache"
   ''
   512
   204800
   ""
   0
   (servers
      (local
         (local TRUE)
         (index
            "store_index_xbox.dta")
         (root
            "test/remote_metadata")))
   (default_server local))
#endif
#endif
#endif
#define STORE_MAX_EASY_TIER
(1)
#define STORE_MAX_MEDIUM_TIER
(6)
#define STORE_PART_SYMBOLS
(band guitar drum vocals bass)
#define STORE_ALPHA_SYMBOLS
(123 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)
(filters
   (new_releases
      #ifndef HX_WII
      (include
         ($offer $selected_filter)
         {&&
            {$offer is_new_release}
            {'||'
               {!=
                  {$offer offer_type}
                  song}
               {do
                  ($pack
                     {store_panel find_pack $offer})
                  ($album
                     {store_panel find_album $offer})
                  {&&
                     {'||'
                        {! $pack}
                        {!
                           {$pack is_new_release}}}
                     {'||'
                        {! $album}
                        {!
                           {$album is_new_release}}}}}}})
      #else
      (include
         ($offer $selected_filter)
         {$offer is_new_release})
      #endif
      (sorts by_new_release)
      (allow_shortcut FALSE)
      (show_new_release FALSE))
   (all_artists
      (include
         ($offer $selected_filter)
         {==
            {$offer offer_type}
            song})
      (sorts by_difficulty by_song by_year)
      (allow_shortcut TRUE)
      (sort_difficulty_part band)
      (show_new_release TRUE))
   #ifndef HX_WII
   (all_song_packs
      (include
         ($offer $selected_filter)
         {==
            {$offer offer_type}
            pack})
      (sorts by_pack)
      (allow_shortcut TRUE)
      (show_new_release TRUE))
   (all_albums
      (include
         ($offer $selected_filter)
         {==
            {$offer offer_type}
            album})
      (sorts by_album_name by_album_year)
      (allow_shortcut TRUE)
      (show_new_release TRUE))
   #endif
   (all_singles
      (include
         ($offer $selected_filter)
         {&&
            {==
               {$offer offer_type}
               song}
            {!
               {$offer has_data album_name}}})
      (sorts by_difficulty by_song by_year)
      (allow_shortcut TRUE)
      (sort_difficulty_part band)
      (show_new_release TRUE)))
(sorts
   (by_new_release
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTArtist)
            (kSTName)})
      (cmp_song_to_album
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTLeftSide)})
      (cmp_song_to_pack
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTLeftSide)})
      (cmp_album_to_pack
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTLeftSide)})
      (cmp_album_to_album
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTDateReleased FALSE)
            (kSTName)})
      (cmp_pack_to_pack
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTPackName)})
      (browser_group
         ($offer)
         {switch
            {$offer offer_type}
            (song new_release_songs)
            (album new_release_albums)
            (pack new_release_packs)})
      (localize_heading TRUE))
   (by_artist
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTArtist)
            (kSTName)})
      (browser_group
         ($offer)
         {$offer
            get_data
            (artist)})
      (shortcut_groups STORE_ALPHA_SYMBOLS)
      (shortcut_group
         ($offer)
         {$offer first_char artist TRUE})
      (localize_heading FALSE))
   (by_song
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTName)})
      (browser_group
         ($offer)
         {$offer first_char name FALSE})
      (shortcut_groups STORE_ALPHA_SYMBOLS)
      (localize_heading FALSE))
   (by_album_year
      (cmp_album_to_album
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTDateReleased TRUE)
            (kSTName)})
      (browser_group
         ($offer)
         {sprint
            {$offer year_released}})
      (sub by_album_name)
      (localize_heading FALSE))
   (by_album_name
      (cmp_album_to_album
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTName)
            (kSTYearReleased FALSE)})
      (browser_group
         ($offer)
         {$offer
            get_data
            (name)})
      (localize_heading FALSE))
   (by_pack
      (cmp_pack_to_pack
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTPackName)})
      (browser_group
         ($offer)
         {$offer first_char name TRUE})
      (shortcut_groups STORE_ALPHA_SYMBOLS)
      (localize_heading FALSE))
   (by_difficulty
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTRank $cmp.rank_part)
            (kSTArtist)
            (kSTName)})
      (cmp_init
         {set
            $cmp.rank_part
            {store_panel sort_difficulty_part}})
      (browser_group
         ($offer)
         {do
            ($part
               {store_panel sort_difficulty_part})
            ($tier
               {song_mgr
                  rank_tier
                  {$offer
                     get_data
                     (rank $part)}
                  $part})
            {song_mgr rank_tier_token $tier}})
      (localize_heading TRUE))
   (by_year
      (cmp_song_to_song
         ($lhs $rhs)
         {$this
            cmp
            $lhs
            $rhs
            (kSTDateReleased TRUE)
            (kSTArtist)
            (kSTName)})
      (browser_group
         ($offer)
         {sprint
            {$offer year_released}})
      (localize_heading FALSE)
      (sub by_artist)))