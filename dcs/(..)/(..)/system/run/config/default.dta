#include macros.dta
(song_mgr)
(system
   (keyboard
      (disable FALSE))
   (language
      (default eng)
      (supported
         (eng))
      #ifndef _SHIP
      (cheat_supported
         (eng))
      #endif)
   (fp_exceptions TRUE)
   (ng TRUE)
   (titles)
   (max_file_instances 400))
(threads
   #include threads.dta)
(telemetry
   (enabled TRUE))
(poll_mgr
   (multi_threaded TRUE)
   (threaded_task_size 32))
(content_mgr
   (roots
      ".")
   (enumerate_save_game_exports FALSE)
   (ignored_content))
(platform_mgr
   (keyboard_allowed_chars
      #include keyboard_allowed_chars.dta)
   (supported_platforms kPlatformPC)
   (events_out
      (connection_status_changed
         (help
            "Event indicating The console has lost or establised an internet AND XboxOne Live connection.")
         (editor
            (is_network_connected
               bool
               (help
                  "State of the network connection."))))))
(components
   #include components.dta)
(objects
   #include objects.dta)
(mem
   (heaps
      (main
         (size 500000000))
      (failure
         (size 200000))
      #ifdef HX_PC
      (physics
         (size 35000000))
      #else
      #ifdef HX_DURANGO
      (physics
         (size 50000000))
      #else
      (physics
         (size 10000000))
      #endif
      #endif
      #ifdef HX_XBOX
      (d3d
         (size 200000000)
         (physical TRUE))
      #endif)
   (char_heap main)
   #ifdef HX_ORBIS
   (physics_heap main)
   #else
   (physics_heap physics)
   #endif
   (pool
      (big_hunk 3100000))
   (single_heap FALSE)
   (disable_mgr FALSE)
   (enable_tracking FALSE)
   (track_stl FALSE)
   (check_consistency FALSE)
   (tracked_allocs 600000)
   (callstack_tracking TRUE)
   (track_type
      "")
   (heap_alloc_fallback FALSE))
(joypad
   #include joypad.dta)
(synth
   (use_null_synth TRUE)
   (master_vol 0)
   (doppler
      (object_scale 1.0)
      (object_teleport_speed 300.0)
      (listener_scale 1.0)
      (listener_teleport_speed 300.0)
      (max_shift_up 100.0)
      (max_shift_down 100.0))
   (wwise
      (wwise_component_valid_objects Sound MultiPointSound Song FusionSampler)))
(disable_cheats FALSE)
(cheats_buffer 30)
(quick_cheats
   (left
      (kPad_DLeft
         "Heap Report"
         {if_else
            {exists heap_report}
            {do
               {cheat_display
                  show
                  "Heap report complete"}
               {heap_report}}
            {cheat_display
               show
               "Can't make heap report, mem tracking is not enabled"}})
      (kPad_DRight
         "Full Heap Dump"
         {if_else
            {exists heap_dump}
            {do
               {cheat_display
                  show
                  "Heap dump complete"}
               {heap_dump}}
            {cheat_display
               show
               "Can't make heap dump, mem tracking is not enabled"}})
      (kPad_DUp
         "Toggle app child"
         {if_else
            $app_child
            {cheat_display
               show
               {sprint
                  "App child "
                  {if_else
                     {toggle_app_child}
                     "enabled"
                     "disabled"}}}
            {cheat_display
               show
               "toggle_app_child: No App child defined for program"}})
      (kPad_DDown
         "Print Symbol Table"
         {cheat_display
            show
            "Printed Symbol Table"}
         {print_symbol_table})
      (kPad_Select
         "Screen Dump"
         {rnd screen_dump_unique screendump})
      (kPad_Xbox_Y
         "Toggle Framerate"
         {rnd toggle_overlay rate})
      (kPad_Xbox_B
         "Toggle Stats"
         {rnd toggle_overlay stats})
      (kPad_Xbox_A
         "Toggle Timers"
         {rnd toggle_timers})
      (kPad_Xbox_X
         "Toggle Heap"
         {rnd toggle_heap})
      (kPad_L3
         "Show Cheats"
         {goto_cheat_screen
            "../../system/run/ui/cheat.uiscreen"}))
   (right)
   (down
      (kPad_Select
         "Property Tweaker / Peeker"
         {cond
            ({property_tweaker get enabled}
               {property_tweaker set enabled FALSE}
               {property_peeker set enabled TRUE})
            ({property_peeker get enabled}
               {property_peeker set enabled FALSE})
            {do
               {property_tweaker set enabled TRUE}}}
         {property_tweaker refresh_debug_override_input_state})
      (kPad_Xbox_X
         "Cycle Debug Camera"
         {if
            {!= $world ''}
            {if
               {!
                  {$world has_component CamManagerCom}}
               {$world add_component CamManagerCom}}
            {$world cycle_debug_camera}}))
   (keyboard
      (KB_ESCAPE
         (''
            "Toggle Console"
            {rnd show_console}))
      (KB_F1
         (''
            "Show Cheats"
            {goto_cheat_screen
               "../../system/run/ui/cheat.uiscreen"}))
      (-
         (''
            "Show Locale Tokens/Strings"
            (filters writer)
            {goto_cheat_screen
               "../../system/run/ui/locale.uiscreen"}))
      (KB_F2
         (''
            "Toggle Framerate"
            {rnd toggle_overlay rate}))
      (KB_F3
         (''
            "Toggle Timers"
            {rnd toggle_timers})
         (ctrl
            "Toggle Framerate"
            {rnd toggle_overlay rate})
         (alt
            "Toggle Stats"
            {rnd toggle_overlay stats}))
      (KB_F4
         (''
            "Toggle Stats"
            {rnd toggle_overlay stats}))
      (KB_F9
         (''
            "Take Screenshot (current resolution)"
            {rnd
               screen_dump_unique
               "Screenshot.bmp"}))
      (KB_F10
         (''
            "Take Screenshot (1280x720)"
            {rnd
               screen_dump_unique
               "Screenshot.bmp"
               1280
               720})
         (ctrl
            "Take Screenshot (1920x1080)"
            {rnd
               screen_dump_unique
               "Screenshot.bmp"
               1920
               1080})
         (alt
            "Take Screenshot (3840x2160)"
            {rnd
               screen_dump_unique
               "Screenshot.bmp"
               3840
               2160}))
      (KB_F11
         (''
            "Toggle UI"
            {ui toggle_display}))
      (l
         (ctrl
            "Show camera link (modal)"
            {do
               ($old_notify_level $cheat_notify_level)
               {set $cheat_notify_level 2}
               {notify
                  "Link: "
                  {{$world
                        get
                        (cam)}
                     get
                     (world_xfm readable_token)}}
               {set $cheat_notify_level $old_notify_level}})
         (alt
            "Show camera link (overlay)"
            {do
               ($old_notify_level $cheat_notify_level)
               {set $cheat_notify_level 1}
               {notify
                  "Link: "
                  {{$world
                        get
                        (cam)}
                     get
                     (world_xfm readable_token)}}
               {set $cheat_notify_level $old_notify_level}}))
      (M
         (''
            "Mute All"
            {set
               $mute_cheat
               {! $mute_cheat}}
            {audio_mgr
               set_master_volume
               {if_else $mute_cheat -96 0}}
            {cheat_display
               show_bool
               "Mute All"
               $mute_cheat}))
      (n
         (''
            "Cycle notify level"
            {if_else
               $cheat_custom_notify
               {do
                  ($names
                     (print overlay modal disable))
                  {set
                     $cheat_notify_level
                     {mod
                        {'++' $cheat_notify_level}
                        {size $names}}}
                  {cheat_display
                     show
                     {sprint
                        "Notify Level: "
                        {elem $names $cheat_notify_level}}}}
               {cheat_display
                  show
                  "Custom notify handling not enabled"}}))
      ("0"
         (''
            "freeze time"
            {set
               $cheat_freeze_time
               {! $cheat_freeze_time}}
            {beat_provider pause_game_timelines $cheat_freeze_time}
            {cheat_display
               show
               {if_else
                  $cheat_freeze_time
                  "time frozen"
                  "time unfrozen"}}))
      (t
         (''
            "Toggle Timers"
            {rnd toggle_timers})
         (ctrl
            "Toggle Framerate"
            {rnd toggle_overlay rate})
         (alt
            "Toggle Stats"
            {rnd toggle_overlay stats}))
      (T
         (ctrl
            "Enable Telemetry Timers"
            {if_else
               {!=
                  {telemetry_running}
                  TRUE}
               {telemetry timers}
               {telemetry stop}}))
      (>
         (''
            "Toggle Language"
            (filters writer)
            (value
               {system_language})
            {do
               ($old_notify_level $notify_level)
               {set $notify_level 0}
               {switch_system_language}
               {cheat_display
                  show
                  {sprint
                     "System language set to "
                     {system_language}}}
               {set $notify_level $old_notify_level}}))))
(long_cheats)
(spew)
(math
   (bsp_check_scale 1.1)
   (bsp_pos_tol 1.0e-2)
   (bsp_dir_tol 0.996)
   (bsp_max_candidates 20)
   (bsp_max_depth 40))
(gpu_profiler
   (pipeline_stats_pool_size 128)
   (timer_pool_size 1024)
   (tight_loops_enabled FALSE))
(timer_groups default pollmgr draw_budget draw_stages draw_kinds draw_misc gpu_budget gpu_stages physics synth cloth)
(timer
   (gpu
      (enable TRUE)
      (groups all_groups)
      (timer_type kTimerType_GPUTimer))
   (cpu
      (enable TRUE)
      (groups all_groups))
   (gpu_stats
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (draw
      (enable TRUE)
      (groups default draw_budget draw_stages draw_kinds draw_misc)
      (parent cpu))
   (pollmgr
      (enable TRUE)
      (parent cpu)
      (groups default pollmgr))
   (pollmgr_resort
      (enable TRUE)
      (parent pollmgr)
      (groups pollmgr))
   (pollmgr_overhead
      (enable TRUE)
      (parent pollmgr)
      (groups pollmgr))
   (pollmgr_prepoll
      (enable TRUE)
      (parent pollmgr)
      (groups pollmgr))
   (pollmgr_postpoll
      (enable TRUE)
      (parent pollmgr)
      (groups pollmgr))
   (poll_physics_mgr
      (enable TRUE)
      (parent pollmgr)
      (groups pollmgr))
   (poll_camera_mgr
      (enable TRUE)
      (parent pollmgr)
      (groups pollmgr))
   (poll_flow_mgr
      (enable TRUE)
      (parent pollmgr)
      (groups pollmgr))
   (poll_flow_mgr_exclusive
      (enable TRUE)
      (parent poll_flow_mgr)
      (groups pollmgr))
   (poll_anim_mgr
      (enable TRUE)
      (parent poll_flow_mgr)
      (groups pollmgr))
   (speechgrammarimp_setphrases
      (enable TRUE)
      (parent cpu)
      (groups default))
   (SpeechGrammarImpl_CreateGrammar
      (enable TRUE)
      (parent cpu)
      (groups default))
   (SpeechGrammarImpl_DestroyGrammar
      (enable TRUE)
      (parent cpu)
      (groups default))
   (speechmgr_startrecognition
      (enable TRUE)
      (parent cpu)
      (groups default))
   (speechmgr_stoprecognition
      (enable TRUE)
      (parent cpu)
      (groups default))
   (physics
      (enable TRUE)
      (parent cpu)
      (groups default physics))
   (cloth
      (enable TRUE)
      (parent cpu)
      (groups default cloth))
   (ResolveStretchConstraints
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (UpdateCollisionCapsules
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (ResolveCollisionConstraints
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (UpdateSkinnedVertices
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (UpdateBlendedSkinnedVertices
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (UpdateImmovableCandidatePositions
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (UpdateCandidatePositions
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (ApplyCollisionDamping
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (DampVelocities
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (UpdateCollision
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (UpdateMeshVertices
      (enable TRUE)
      (groups cloth)
      (parent cloth))
   (system_poll
      (enable TRUE)
      (parent cpu))
   (gesture_poll
      (enable TRUE)
      (parent cpu))
   (synth_poll
      (enable TRUE)
      (groups default synth)
      (parent cpu))
   (skeleton_post_update
      (enable TRUE)
      (parent cpu))
   (ui_poll
      (enable TRUE)
      (parent cpu))
   (joypad_durango_poll
      (enable TRUE)
      (parent cpu))
   (cpu_remainder
      (enable TRUE)
      (parent cpu))
   (draw_preclear
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   #ifdef HX_XBOX
   (draw_shadows
      (enable TRUE)
      (groups draw_stages)
      (parent draw_preclear))
   #else
   (draw_shadows
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   #endif
   (draw_reflections
      (enable TRUE)
      (groups draw_stages)
      (parent draw_preclear))
   (draw_cheap_particles_update
      (enable TRUE)
      (groups draw_stages)
      (parent draw_preclear))
   (draw_deferred_geom
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   (draw_deferred_decals
      (enable TRUE)
      (groups draw_stages)
      (parent draw_deferred_geom))
   (draw_deferred_lights
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   (draw_deferred_lights_directional
      (enable TRUE)
      (groups draw_stages)
      (parent draw_deferred_lights))
   (draw_deferred_lights_point
      (enable TRUE)
      (groups draw_stages)
      (parent draw_deferred_lights))
   (draw_deferred_lights_spot
      (enable TRUE)
      (groups draw_stages)
      (parent draw_deferred_lights))
   (draw_deferred_lights_line
      (enable TRUE)
      (groups draw_stages)
      (parent draw_deferred_lights))
   (draw_deferred_lights_probe
      (enable TRUE)
      (groups draw_stages)
      (parent draw_deferred_lights))
   (draw_fwd_shaded
      (enable TRUE)
      (groups draw_stages draw_misc)
      (parent draw))
   (draw_alpha_bucket
      (enable TRUE)
      (groups draw_stages)
      (parent draw_fwd_shaded))
   (draw_post_dof_bucket
      (enable TRUE)
      (groups draw_stages)
      (parent draw_fwd_shaded))
   (draw_water_bucket
      (enable TRUE)
      (groups draw_stages)
      (parent draw_fwd_shaded))
   (draw_skybox_bucket
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   (draw_uiscreen
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   (draw_occ_queries
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   (draw_occ_queries_issue
      (enable TRUE)
      (groups draw_stages)
      (parent draw_occ_queries))
   (draw_occ_queries_harvest
      (enable TRUE)
      (groups draw_stages)
      (parent draw_occ_queries))
   (draw_dlist_vis_scene
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   #ifdef HX_PC
   (draw_debug
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   #endif
   (draw_stages_remainder
      (enable TRUE)
      (groups draw_stages)
      (parent draw))
   (gpu_preclear
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   #ifdef HX_XBOX
   (gpu_shadows
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_preclear)
      (timer_type kTimerType_GPUTimer))
   #else
   (gpu_shadows
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   #endif
   (gpu_reflections
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_preclear)
      (timer_type kTimerType_GPUTimer))
   (gpu_cheap_particles_update
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_preclear)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_geom
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_decals
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_deferred_geom)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_lights
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_lights_directional
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_deferred_lights)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_lights_point
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_deferred_lights)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_lights_spot
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_deferred_lights)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_lights_line
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_deferred_lights)
      (timer_type kTimerType_GPUTimer))
   (gpu_deferred_lights_probe
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_deferred_lights)
      (timer_type kTimerType_GPUTimer))
   (gpu_skybox_bucket
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_atmosphere_opaque
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_skybox_bucket)
      (timer_type kTimerType_GPUTimer))
   (gpu_fwd_shaded
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_alpha_bucket
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_fwd_shaded)
      (timer_type kTimerType_GPUTimer))
   (gpu_post_dof_bucket
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_fwd_shaded)
      (timer_type kTimerType_GPUTimer))
   (gpu_atmosphere_transp
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_post_dof_bucket)
      (timer_type kTimerType_GPUTimer))
   (gpu_postproc
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_postproc_dof
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_postproc)
      (timer_type kTimerType_GPUTimer))
   (gpu_postproc_aa
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_postproc)
      (timer_type kTimerType_GPUTimer))
   (gpu_postproc_scene
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_postproc)
      (timer_type kTimerType_GPUTimer))
   (gpu_postproc_ui
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu_postproc)
      (timer_type kTimerType_GPUTimer))
   (gpu_ssao
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gen_shadow_accum
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_occ_queries
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_gamma_ramp
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_overlays
      (enable TRUE)
      (groups gpu_stages)
      (parent gpu)
      (timer_type kTimerType_GPUTimer))
   (gpu_stats_shadows
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_reflections
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_deferred_lights
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_postproc
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_ssao
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_atmosphere
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_atmosphere_opaque
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_atmosphere_transp
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (gpu_stats_gamma_ramp
      (enable TRUE)
      (timer_type kTimerType_GPUStatsQuery))
   (draw_mesh
      (enable TRUE)
      (groups draw_kinds)
      (parent draw))
   (draw_omnimesh
      (enable TRUE)
      (groups draw_kinds)
      (parent draw))
   (draw_cheap_particles
      (enable TRUE)
      (groups draw_kinds)
      (parent draw))
   (draw_particles
      (enable TRUE)
      (groups draw_kinds)
      (parent draw))
   (draw_flare
      (enable TRUE)
      (groups draw_kinds)
      (parent draw))
   (draw_volume
      (enable TRUE)
      (groups draw_kinds)
      (parent draw))
   (draw_dlist_update_dirty
      (enable TRUE)
      (groups draw_misc)
      (parent draw))
   (draw_dlist_update_vis
      (enable TRUE)
      (groups draw_misc)
      (parent draw))
   (draw_dlist_vis
      (enable TRUE)
      (groups draw_misc)
      (parent draw))
   (draw_dlist_flush
      (enable TRUE)
      (groups draw_misc)
      (parent draw))
   (draw_mat_select
      (enable TRUE)
      (groups draw_misc)
      (parent draw))
   (draw_mat_select_renderstate
      (enable TRUE)
      (groups draw_misc)
      (parent draw_mat_select))
   (draw_mat_select_shader
      (enable TRUE)
      (groups draw_misc)
      (parent draw_mat_select))
   (draw_mat_select_textures
      (enable TRUE)
      (groups draw_misc)
      (parent draw_mat_select))
   (draw_cbuffer_select
      (enable TRUE)
      (groups draw_misc)
      (parent draw))
   (draw_spheretree_traversal
      (enable TRUE)
      (groups draw_misc)
      (parent draw))
   (draw_fwd_shaded_sort
      (enable TRUE)
      (groups draw_misc)
      (parent draw_fwd_shaded))
   (draw_setup_fwd_lights
      (enable TRUE)
      (groups draw_misc)
      (parent draw_fwd_shaded))
   (draw_overlays
      (enable TRUE)
      (groups draw_misc))
   (cpu_sync
      (enable TRUE)
      (groups draw_misc))
   (present
      (enable TRUE)
      (groups draw_misc)
      (parent cpu_sync))
   (gather_gpu_timers
      (enable TRUE)
      (groups draw_misc)
      (parent cpu_sync))
   (occ_queries_wait
      (enable TRUE)
      (groups draw_misc)
      (parent cpu_sync))
   (physics_raycasts
      (enable TRUE)
      (groups physics)
      (parent physics))
   (physics_poll_sensors_xfm
      (enable TRUE)
      (groups physics)
      (parent physics))
   (physics_poll_bullet
      (enable TRUE)
      (groups physics)
      (parent physics))
   (physics_pull_dynamic
      (enable TRUE)
      (groups physics)
      (parent physics))
   (physics_push_keyframed
      (enable TRUE)
      (groups physics)
      (parent physics))
   (physics_poll_sensors
      (enable TRUE)
      (groups physics)
      (parent physics))
   (physics_sensor_aabb
      (enable TRUE)
      (groups physics)
      (parent physics_poll_sensors))
   (physics_sensor_oriented
      (enable TRUE)
      (groups physics)
      (parent physics_poll_sensors))
   (physics_sensor_dispatch_collision_pairs
      (enable TRUE)
      (groups physics)
      (parent physics_sensor_oriented))
   (physics_sensor_manifold_parsing
      (enable TRUE)
      (groups physics)
      (parent physics_sensor_oriented))
   (physics_sensor_update_overlaps_list
      (enable TRUE)
      (groups physics)
      (parent physics_sensor_oriented))
   (wwise_streaming
      (enable TRUE)
      (groups synth)
      (parent synth_poll))
   (wwise_broadcast
      (enable TRUE)
      (groups synth)
      (parent synth_poll))
   (wwise_callbacks
      (enable TRUE)
      (groups synth)
      (parent synth_poll))
   (wwise_transport
      (enable TRUE)
      (groups synth))
   (fusion_sampler_core_process
      (enable TRUE)
      (groups synth))
   (fusion_sampler_core_process_channels
      (enable TRUE)
      (groups synth)
      (parent fusion_sampler_core_process)))
(budget_categories)
(rnd
   #ifdef HX_ORBIS
   (height 720)
   #else
   (height 432)
   #endif
   (aspect kWidescreenAspect)
   (bpp 32)
   (fullscreen FALSE)
   (sync 0)
   (title
      "Hmx App")
   (clear_color 0.3 0.3 0.3)
   (remesher_reflections TRUE)
   (hdr_range 4.0)
   (min_overscan_frac 0.9)
   (max_user_gamma 2.2)
   (test_modal FALSE)
   (cache_shaders TRUE)
   (cache_non_inlined_shaders TRUE)
   #ifdef HX_PC
   (compile_shaders_print FALSE)
   #else
   (compile_shaders_print TRUE)
   #endif
   (compile_shaders_print_opts FALSE)
   (use_entity_lod FALSE)
   (display_list
      (visnodes_reserve 100)
      (always_visnodes_reserve 10)
      (drawnodes_reserve 500)
      (targets_reserve 10)
      (buckets
         (Deferred
            (reserve 300))
         (DeferredDecal
            (reserve 50))
         (DeferredPostDecal
            (reserve 50))
         (DeferredLight
            (reserve 50))
         (Opaque
            (reserve 0))
         (Water
            (reserve 10))
         (Skybox
            (reserve 10))
         (Alpha
            (reserve 50))
         (PostDOF
            (reserve 50))))
   (light_mgr
      (fwd_lighting_brute_force FALSE)
      (fwd_lighting_reserve_approx_lights 10)
      (fwd_lighting_reserve_gathered_lights 10)
      (fwd_lighting_reserve_no_bound_lights 1))
   (shadow_mgr
      (spot_shadow_maps
         (1024 2)
         (512 4)
         (256 8)
         (128 8)))
   (shadow_split_fractions 3.7e-2 0.111 0.333)
   (shadow_light_distance 500.0)
   (shadow_map_resolution_csm 2048)
   (shadow_map_resolution_point_light 512)
   (ssao_downsample_factor 0)
   #ifdef HX_XBOX
   (gi_application_downsample_factor 1)
   (reflection_application_downsample_factor 1)
   #else
   (gi_application_downsample_factor 0)
   (reflection_application_downsample_factor 0)
   #endif
   (mat_shared_hash_size 1000)
   (matspec_allow_prototype TRUE)
   (matspec_allow_null_edit_tex TRUE)
   (renamed_matspecs
      ("diffuse_spec_normal_vertex_blend.mspec"
         "diff_spec_norm_vtx.mspec")
      ("diffuseblend.mspec"
         "diff.mspec")
      ("diffuseblend_normal.mspec"
         "diff_norm.mspec")
      ("diffuseblend_normal_emissive.mspec"
         "diff_norm_emis.mspec")
      ("diffuseblend_normal_normdetail.mspec"
         "diff_normdtl.mspec")
      ("diffuseblend_spec_normal.mspec"
         "diff_spec_norm.mspec")
      ("diffuseblend_spec_normal_normdetail.mspec"
         "diff_spec_normdtl.mspec")
      ("particle_lit_diffuseblend.mspec"
         "part_lit_diff.mspec")
      ("particle_unlit_diffuseblend.mspec"
         "part_unlit_diff.mspec")
      ("unlit_blend.mspec"
         "unlit.mspec")
      ("unlit_diffuseblend.mspec"
         "unlit_diff.mspec")
      ("unlit_diffuse.mspec"
         "unlit_diff.mspec")
      ("diffuse.mspec"
         "diff.mspec")
      ("diffuse_normal.mspec"
         "diff_norm.mspec")
      ("diffuse_normal_emissive.mspec"
         "diff_norm_emis.mspec")
      ("diffuse_normal_normaldetail.mspec"
         "diff_normdtl.mspec")
      ("diffuse_spec_normal.mspec"
         "diff_spec_norm.mspec")
      ("diffuse_spec_normal_normaldetail.mspec"
         "diff_spec_normdtl.mspec")
      ("diffuse_spec_normal_vertex.mspec"
         "diff_spec_norm_vtx.mspec")
      ("particle_lit_diffuse.mspec"
         "part_lit_diff.mspec")
      ("particle_lit_diffuse_soft.mspec"
         "part_lit_diff_soft.mspec")
      ("particle_unlit_diffuse.mspec"
         "part_unlit_diff.mspec")
      ("particle_unlit_diffuse_soft.mspec"
         "part_unlit_diff_soft.mspec")
      ("cheap_particles.mspec"
         "part_cheap.mspec")
      ("projection_diffuse_normal.mspec"
         "proj_diff_norm.mspec")
      ("projection_diffusedetail_normaldetail.mspec"
         "proj_diffdtl_normdtl.mspec")
      ("projection_diffusedetail_spec_normaldetail.mspec"
         "proj_diffdtl_spec_normdtl.mspec"))
   (use_deferred_shading TRUE)
   (cam_default_near_plane 1.0)
   (cam_max_far_near_ratio 5000.0)
   #ifdef HX_DX11
   (use_32bit_depth_buffer TRUE)
   (use_64bit_color_buffer TRUE)
   (debug_font_size 1)
   #endif
   #ifdef HX_DURANGO
   (full_screen_height 720)
   #endif
   #ifdef HX_XBOX
   (shader_gpr_alloc_default 32 96)
   (shader_gpr_alloc_deferred_geo 50 78)
   (secondary_ringbuffer_size 8388608)
   (secondary_ringbuffer_segments 16)
   (trilinear_filtering TRUE)
   (pix_texture_tracking FALSE)
   #endif
   (overlays
      (audio_debug
         (color 0 0 0 0.5))
      (char_debug)
      (char_test)
      (cheats
         (lines 1)
         (showing FALSE)
         (color 0 0 0 0.7))
      (gpu_queue
         (lines 1))
      (guitar)
      (heap)
      (input
         (color 0 0.4 0.4 1)
         (modal TRUE))
      (light_preset
         (lines 3)
         (color 0 0 0 0.5))
      (postproc
         (lines 3)
         (color 0 0 0 0.5))
      (output
         (lines 23)
         (modal TRUE))
      (camera
         (lines 3))
      (rate
         (color 0 0.2 0 0.2))
      (stats
         (lines 62)
         (tint_alternating_lines TRUE))
      (synth_hud)
      (timers)
      (mem_categories)
      (physics_debugdraw
         (color 0 0 0 0)
         (lines 1))
      (physics_timers
         (lines 36))
      (ui
         (color 0.5 0 0 0.7))
      (vocalplayer
         (lines 4))
      (flow
         (lines 3)
         (showing FALSE))
      (flow_event
         (lines 10)
         (showing FALSE))
      (flow_peak
         (lines 6)
         (showing FALSE))
      (flow_task
         (lines 6)
         (showing FALSE))
      (prop_tweaker
         (lines 5)
         (showing FALSE))
      (prop_peeker
         (lines 6)
         (showing FALSE))
      (gesture_mgr
         (lines 1)
         (showing FALSE))
      #ifdef INIT_BAND
      (char_status
         (lines 4)
         (showing FALSE))
      (tweaker
         (lines 5)
         (showing FALSE))
      (eye_status
         (lines 4)
         (showing FALSE))
      (songsection_overlay
         (lines 4)
         (showing FALSE))
      #endif)
   (console_buffer 50)
   (limit_uv_range 6)
   (estimated_cost_divisor 100.0)
   (force_hd FALSE)
   (low_res FALSE)
   (particlesys
      (global_limit 10000)
      (local_limit 6000))
   (timer_script
      {set_timer_ms
         cpu_remainder
         {-
            {timer_ms cpu}
            {'+'
               {timer_ms draw}
               {'+'
                  {timer_ms pollmgr}
                  {'+'
                     {timer_ms system_poll}
                     {'+'
                        {timer_ms gesture_poll}
                        {'+'
                           {timer_ms synth_poll}
                           {'+'
                              {timer_ms skeleton_post_update}
                              {'+'
                                 {timer_ms ui_poll}}}}}}}}}}
      {set_timer_ms
         draw_stages_remainder
         {-
            {timer_ms draw}
            {'+'
               {timer_ms draw_dlist_vis_scene}
               {'+'
                  {timer_ms draw_preclear}
                  {'+'
                     {timer_ms draw_reflections}
                     {'+'
                        {timer_ms draw_cheap_particles_update}
                        {'+'
                           {timer_ms draw_shadows}
                           {'+'
                              {timer_ms draw_deferred_geom}
                              {'+'
                                 {timer_ms draw_deferred_lights}
                                 {'+'
                                    {timer_ms draw_alpha_bucket}
                                    {'+'
                                       {timer_ms draw_post_dof_bucket}
                                       {'+'
                                          {timer_ms draw_water_bucket}
                                          {'+'
                                             {timer_ms draw_skybox_bucket}
                                             {'+'
                                                {timer_ms draw_uiscreen}
                                                {'+'
                                                   {timer_ms draw_occ_queries}
                                                   #ifdef HX_PC
                                                   {'+'
                                                      {timer_ms draw_debug}}
                                                   #endif}}}}}}}}}}}}}}})
   (text_superscript_scale 0.42)
   (font
      #include rnd_font.dta)
   (debug_drawer
      (icon_start_size_pixels 50.0)
      (icon_end_size_pixels 20.0)
      (icon_fade_start_dist 250.0)
      (icon_fade_end_dist 500.0)
      (icon_fade_end_alpha 0.15)
      (icon_lock_alpha 0.25))
   (simplygon_output
      "."))
(ui
   (use_joypad TRUE)
   (enable_auto_repeat TRUE)
   (cam
      (fov 34.516)
      (y -768)
      (near 1)
      (far 1000)
      (z-range 0 1)
      (height_scale_2d 720.0))
   (env
      (ambient 1 1 1))
   (transition_time 0.5)
   (splash_time 3)
   (wait_for_splash TRUE)
   (default_allow_edit_text TRUE)
   (load_app_data FALSE)
   (select_cmd_list
      (""))
   #ifndef _SHIP
   (cheat_init
      #include ../ui/cheat.dta)
   #endif
   (strata
      ("../../system/run/ui"
         (order 40)
         (exit_on_error FALSE)))
   (init))
(splash
   (splash_screen_01
      "../../system/run/ui/splash/default_splash.uiscreen"
      2000))
(locale)
(net
   (session
      (game_start_delay 2000)
      (connection_timeout 15000)
      (max_connection_silence 3000))
   (searcher
      (search_limit 8))
   (server
      (access_key
         "boguskey")
      (port 9880)
      (address
         "example.harmonixmusic.com")
      (login_timeout 20000))
   (emulator
      (bandwidth 0 0)
      (jitter 0 0)
      (latency 0 0)
      (dropprob 0 0)))
#include movie.dta
#ifndef _SHIP
(hostnames
   #include hostnames.dta)
#endif
(preload_dirs)
(file_merger_organizer)
(memcard
   (chunk_size 262144))
(kinect
   (enable FALSE)
   (camera
      (max_snapshots 1)
      (ae_region 0.0 0.0 1.0 1.0))
   (initialize_audio FALSE)
   (title_tracked_skeletons FALSE)
   (speech FALSE)
   (skeleton_clip_reserve_frames 0)
   (init_color_stream TRUE)
   (init_ir_stream TRUE)
   (skeleton_viz_resource
      "../../system/run/gesture/skeleton.dir")
   (kinect_feed_resource
      "../../system/run/gesture/feed.entity")
   (kinect_overhead_resource
      "../../system/run/gesture/overhead.entity")
   (screen_rect 0.5 5.0e-2 0.4)
   (allow_sitting FALSE)
   (allow_sideways FALSE)
   (sitting_requires_intent FALSE))
(perforce
   (default_user
      "anon"))
(time_mgr
   (enforce_timestep FALSE)
   (fixed_timestep
      {/ 1.0 30.0})
   (max_timestep
      {/ 1.0 10.0}))
(asset_approval
   (use_asset_approval FALSE)
   (asset_approval_lock FALSE)
   (asset_approval_dirs))
(auto_arkorder
   (dta_path
      "config/arkbuild/dependencies.dta")
   (use_auto_arkorder TRUE))
(anim
   (compressed_short_range 1000)
   (compression_type 1))
(char
   (default_charbonedir_string_table_size 2048))
(speech
   (commands))