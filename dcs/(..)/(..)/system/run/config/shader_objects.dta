(MatSpecShaderGraph
   (description
      "Material template for using a shader graph")
   (category Material)
   (superclasses MatSpec Instance)
   (ext sgraph)
   (file_ext
      ".sgraph")
   (user_creatable FALSE)
   (functest no_test)
   (editor
      (root_node_type
         int
         (list SHADER_ROOT_TYPE_ENUM)
         (help
            "Lighting model to use (determines the set of pixel-shader outputs from the graph)")
         (hide
            {!
               {$this always_inline}}
            flow
            propanim)
         (record_all))))
(MatSpecShaderGraph2
   (description
      "Material template for using a shader graph")
   (category Material)
   (superclasses MatSpec ObjectDir)
   (ext sgraph)
   (file_ext
      ".sgraph")
   (user_creatable FALSE)
   (editor
      (root_node_type
         int
         (list SHADER_ROOT_TYPE_ENUM)
         (help
            "Lighting model to use (determines the set of pixel-shader outputs from the graph)")
         (record_all))))
(MatShaderGraph
   (category Material)
   (superclasses Instance)
   (allowed_dirs Entity UILabelDir Scene UIScreen)
   (ext sgraph)
   (file_ext
      ".sgraph")
   (user_creatable TRUE)
   (functest no_test)
   (editor
      (shader_graph
         object
         (class MatSpecShaderGraph2)
         (read_only TRUE))))
#define SHADERNODE_EDITORBLOCK
((comment
      string
      (alias
         "Comment")
      (help
         "Notes about this node.")
      (no_test uniqueness)))
(ShaderNode
   (alias
      "base function node")
   (description
      "cannot create")
   (allowed_dirs)
   (user_creatable FALSE)
   (hide_from_editor TRUE)
   (editor SHADERNODE_EDITORBLOCK))
(ShaderGraphCommentBlock
   (alias
      "Comment Block")
   (description
      "Comment block to encapsulate nodes withing a shader graph")
   (allowed_dirs)
   (user_creatable FALSE)
   (hide_from_editor TRUE)
   (hx_tool_only TRUE)
   (editor
      (comment
         string
         (alias
            "Comment")
         (help
            "Notes about this comment block.")
         (no_test uniqueness))))
#include shader_nodes.dta